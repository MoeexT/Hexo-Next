{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"source/replace_yaml_link.py","path":"replace_yaml_link.py","modified":1,"renderable":0},{"_id":"source/images/collection-code.jpg","path":"images/collection-code.jpg","modified":1,"renderable":0},{"_id":"source/images/wechat.jpg","path":"images/wechat.jpg","modified":1,"renderable":0},{"_id":"source/images/hexo-next-preview.jpg","path":"images/hexo-next-preview.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/sidebar-quote-l.svg","path":"images/sidebar-quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/sidebar-quote-r.svg","path":"images/sidebar-quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/json/Ryze.json","path":"json/Ryze.json","modified":1,"renderable":1},{"_id":"themes/next/source/json/champions.json","path":"json/champions.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/yarn.lock","path":"lib/three/yarn.lock","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"source/images/luna.png","path":"images/luna.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"source/images/background/20180830_3.jpg","path":"images/background/20180830_3.jpg","modified":1,"renderable":0},{"_id":"source/images/background/20180920_2.jpg","path":"images/background/20180920_2.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"source/images/background/20180920_1.jpg","path":"images/background/20180920_1.jpg","modified":1,"renderable":0},{"_id":"source/images/background/20180830_1.jpg","path":"images/background/20180830_1.jpg","modified":1,"renderable":0},{"_id":"source/images/background/20180830_2.jpg","path":"images/background/20180830_2.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"43eb0149c78e464c695f0dd758bb8c59353182b3","modified":1557809267309},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1551599238816},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1551599238816},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1551599238816},{"_id":"themes/next/.gitignore","hash":"69e702b833c6aa9646ad24c45dd9cf00ab5ce6b9","modified":1557809267326},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1551599238816},{"_id":"themes/next/README.md","hash":"3f72e5a5051ca2bdaccdda684c46dc4fdb4413a6","modified":1557809267327},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1551599238832},{"_id":"themes/next/_config.yml","hash":"6b38b51c5e494186e958cdae1672ae3ceec55215","modified":1557818272491},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1551599238832},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1551599238832},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1551599238832},{"_id":"themes/next/bower.json","hash":"070292487d141982c9bef64bd32e1cb39d03d395","modified":1557809267328},{"_id":"themes/next/package.json","hash":"d3ea523f723aafd6bebcd8a47a0d976c69dfeaf5","modified":1557809267390},{"_id":"themes/next/gulpfile.coffee","hash":"6407d9063bd88ede299ff7c2a59cf2c82e079476","modified":1557809267340},{"_id":"source/README.md","hash":"332dd6a5c5d3f4587bc53001aa2d268ae4540bc3","modified":1551884683340},{"_id":"source/replace_yaml_link.py","hash":"8d7ab5b17fe891770e0b82399a024c495e817692","modified":1551701925996},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"f7ddb7faed8031a9f40eae4ee7bb48c1bc50fd14","modified":1557809267310},{"_id":"themes/next/.github/auto_assign.yml","hash":"9fe0dbe3f6edc59bf10ea25b14eba0e92e2c8f42","modified":1557809267318},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1551599238816},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"66e529edef048f3fab87d9670fa8999f483292bf","modified":1557809267317},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"78756d8a45b22bdaa51f12b06907bff44afee83e","modified":1557809267311},{"_id":"themes/next/.github/config.yml","hash":"cbd06d0c40afa9fdf056765120e9085826b00d20","modified":1557809267318},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"e06053d417579ed967a94166deb6bda5ce41d805","modified":1557809267319},{"_id":"themes/next/.github/mergeable.yml","hash":"1105a6eb0d4ee1b1bf1554c5c51a47160abed62a","modified":1557809267320},{"_id":"themes/next/.github/lock.yml","hash":"4f1070097b614b24050f238694127e3573ce8472","modified":1557809267320},{"_id":"themes/next/.github/topissuebot.yml","hash":"5091c3bc6f3df303d16d853ce65a302601c1e875","modified":1557809267324},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1557809267323},{"_id":"themes/next/.github/release-drafter.yml","hash":"0f826b5ea4646008e2e147dca8b4842ecf96d093","modified":1557809267321},{"_id":"themes/next/.github/stale.yml","hash":"85975c43d606c39b91c0ad32197154be9d482a09","modified":1557809267323},{"_id":"themes/next/.github/weekly-digest.yml","hash":"6db3bcad65c3156de298f6a3ffd3ba887af4aa4f","modified":1557809267324},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1e49c08b446678336b2eacc8bf581faca969f34b","modified":1557809267329},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1551599238848},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1551599238848},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1551599238832},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1551599238848},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"721a1aa9feed1b580ab99af8e69ed22699121e88","modified":1551599238848},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1551599238848},{"_id":"themes/next/docs/MATH.md","hash":"7d0330c250082a86897d1c96fbb4ef5df59538af","modified":1557809267331},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1551599238848},{"_id":"themes/next/languages/de.yml","hash":"79b3221344da335743b5ef5a82efa9338d64feb0","modified":1557809267342},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1551599238863},{"_id":"themes/next/languages/es.yml","hash":"db1a9f2af477212544c830c2dd986400e26ddd6a","modified":1557809267342},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1551599238863},{"_id":"themes/next/languages/fr.yml","hash":"2429c90dad5bb865e3a969be2b373f19b3a77b3b","modified":1557809267344},{"_id":"themes/next/languages/fa.yml","hash":"3227072c7e1bfb16ec0517394b60632f4be921dd","modified":1557809267343},{"_id":"themes/next/languages/it.yml","hash":"31eb878b53d60ff47e3e534cdd7a839c8801ac6e","modified":1557809267346},{"_id":"themes/next/languages/id.yml","hash":"f3302a4dfdc9be38a52d6e081411574b1ea01671","modified":1557809267345},{"_id":"themes/next/languages/nl.yml","hash":"08f16ce395dacc88847fc30dc6b985ce22fb8948","modified":1557809267349},{"_id":"themes/next/languages/ja.yml","hash":"3f25eca504ee5a519987b4402731f1bb7f5191c9","modified":1557809267347},{"_id":"themes/next/languages/pt-BR.yml","hash":"c7de8b77f44e75be4f04423088a1c891537aa601","modified":1557809267350},{"_id":"themes/next/languages/ko.yml","hash":"75f2fe142f76bf623e34ed3570598226f55f2b8b","modified":1557809267348},{"_id":"themes/next/languages/pt.yml","hash":"ca5072c967e5eb1178ffed91827459eda6e4e6e2","modified":1557809267352},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1551599238879},{"_id":"themes/next/languages/uk.yml","hash":"6320439c6e9ff81e5b8f8129ca16e9a744b37032","modified":1551599238879},{"_id":"themes/next/languages/vi.yml","hash":"e2f0dd7f020a36aa6b73ed4d00dcc4259a7e5e9d","modified":1557809267353},{"_id":"themes/next/languages/zh-CN.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1551599238879},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1551599238879},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1551599238879},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1551599238879},{"_id":"themes/next/layout/_layout.swig","hash":"ba786b1baba49021928e2e508da53f2fd1369b3f","modified":1557809267354},{"_id":"themes/next/layout/category.swig","hash":"ad0ac6a1ff341f8eab9570e7fb443962948c5f9d","modified":1551599238992},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1551599238992},{"_id":"themes/next/layout/archive.swig","hash":"61bc56e77e653684fc834f63dcbdadf18687c748","modified":1557809267387},{"_id":"themes/next/layout/post.swig","hash":"af74e97d57cf00cde6f8dbd4364f27910915454e","modified":1551599238992},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1551599238992},{"_id":"themes/next/layout/page.swig","hash":"5d06ee8f477ffc39932d0251aa792ffcaf8faf14","modified":1557809267388},{"_id":"themes/next/layout/tag.swig","hash":"283519d4d5b67814412863a3e0212bac18bcc5a0","modified":1551599238992},{"_id":"themes/next/scripts/fold.js","hash":"77d2d249fc58cfd575e6c514d617a8fd1bf552e9","modified":1551879702272},{"_id":"themes/next/scripts/include-variable.js","hash":"194b1b55e7eb036c4a8b800cce3f07805b1828f7","modified":1551640295202},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1551599239008},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1551599239008},{"_id":"themes/next/scripts/tags.js","hash":"26676d9dab98a3c51c7e96037e7f1d89b4d26948","modified":1551879593019},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1551599239213},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1551599239213},{"_id":"source/_posts/2013-12-24-elements.md","hash":"4e864430002895b6d46a41c0610efae729e67643","modified":1553282857677},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1551599239213},{"_id":"source/_posts/2014-02-16-Mathjax-with-jekyll.md","hash":"d30b07ba04151162f1f81a73b130b0b8ee18b102","modified":1553282861573},{"_id":"source/_posts/2018-01-04-thank-the-auther.md","hash":"fd3e675f05996013ad509b94c64fb9f83245eaf2","modified":1551704919535},{"_id":"source/_posts/2014-11-18-gallery-post.md","hash":"71f67a2baa09541cdb3ce913a482870d1ee70c1e","modified":1553282867335},{"_id":"source/_posts/2018-01-05-database-MySQL.md","hash":"5fb5f0d817a72ac1ce26973647c00d5403b74c86","modified":1551705344209},{"_id":"source/_posts/2018-01-06-linux-shell.md","hash":"265d11f1010fcbf03d54748cebccdefa1558ef52","modified":1551705335516},{"_id":"source/_posts/2018-01-12-linux-hadoop1.markdown","hash":"c21104526089ee3fad0cbdb4e3a09bf467f68e08","modified":1551705313394},{"_id":"source/_posts/2018-01-08-linux.markdown","hash":"5c8e9147441bc2b5e3d780025b32ab40262a2b90","modified":1551705326045},{"_id":"source/_posts/2018-01-24-connect-to-internet.markdown","hash":"469efe228cdf60656763f91f85d8bf46f76738f4","modified":1551705390714},{"_id":"source/_posts/2018-01-26-for-MR.dai-dai.markdown","hash":"48231ffaef753bdf382aeb2dd416b4da5e0a5461","modified":1551701469191},{"_id":"source/_posts/2018-01-27-crawling-magnet-links-from-the-pirate-bay.markdown","hash":"4226bf7dc938bb8c16329b52a7aedafa7a74791f","modified":1551883871643},{"_id":"source/_posts/2018-01-28-cloud-dns-to-github-pages.markdown","hash":"15fcb9504fa1a1ea4eb4886529187cf6900c552c","modified":1552369806727},{"_id":"source/_posts/2018-01-28-python-email.markdown","hash":"7fe46009948108d088e9a0403aaefc4f8f06a676","modified":1551705843342},{"_id":"source/_posts/2018-02-06-hive-type-of-data.markdown","hash":"666117fc5c9f979365ffe330af5cc97bd6427046","modified":1551705799016},{"_id":"source/_posts/2018-01-29-bigdata-hbase.markdown","hash":"6aa49b928eb8d9be123345f7cb6f632320fb6b38","modified":1551705829463},{"_id":"source/_posts/2018-02-02-python-word-cloud.markdown","hash":"8176de80ae414f4da6963f6dfc198d74c12c1d97","modified":1551707055536},{"_id":"source/_posts/2018-02-06-hive-text-encoding.markdown","hash":"b49160349ef8d7cece7dd404abf894cf120888f6","modified":1551701469196},{"_id":"source/_posts/2018-02-07-hive-hql.markdown","hash":"df31ee0e3a879759fa1cca16f73a1f01ca4a3419","modified":1551705781263},{"_id":"source/_posts/2018-02-08-hive-bucket.markdown","hash":"8852eb98bcb3144ba7c5a583817fe5aa88f12e86","modified":1551705580352},{"_id":"source/_posts/2018-02-23-x-man-to-bingxin.markdown","hash":"6247efe31e2de10f5330f1f7a30cdcf6bd4d39ef","modified":1551705609745},{"_id":"source/_posts/2018-04-12-network.markdown","hash":"21785b9046001d8bf459911e43f77733a2598533","modified":1551705660087},{"_id":"source/_posts/2018-03-16-how-to-use-pyinstaller.markdown","hash":"2a7c4da4f86bcc35f0474f52de8360d5e997ed2b","modified":1551711186977},{"_id":"source/_posts/2018-03-08-python-packages.markdown","hash":"79ec24098ef69fc2645dbcfe0aa9c5c6b06b3fbe","modified":1551711449417},{"_id":"source/_posts/2018-03-18-scala-function.markdown","hash":"cb6d6adf3e8542587efbecbdeaf38aa21649d622","modified":1551710910403},{"_id":"source/_posts/2018-04-22-python-code-for-example.markdown","hash":"dd39115033c0a13455691a0a620d1a725d6484c7","modified":1551710225906},{"_id":"source/_posts/2019-01-19-first-month.markdown","hash":"feeb56bd13cef87b7fc1b7a725cb6913049ff2ac","modified":1551704873889},{"_id":"source/_posts/2018-04-18-spark-cache.markdown","hash":"272007a75fe7ce94e363a3e32cb68de7a058bc68","modified":1551705725700},{"_id":"source/_posts/2019-01-19-short-stories-before-bed1.markdown","hash":"a7201a51f6e7e6432d2abf271f47f908137fec32","modified":1551704845664},{"_id":"source/_posts/2019-01-23-short-stories-before-bed4.markdown","hash":"993d5cbe18d454dd613939032fcf1b21d5f23d94","modified":1551704859111},{"_id":"source/_posts/2019-01-20-short-stories-before-bed2.markdown","hash":"3dc2fd185ebbe17fb26bc1f8cd7e5a1f5ee00a8e","modified":1551704859111},{"_id":"source/_posts/2019-01-22-short-stories-before-bed3.markdown","hash":"f9a938edaade4622b20d857846c14f129a5ea333","modified":1551704859111},{"_id":"source/_posts/2019-01-23-short-stories-before-bed5.markdown","hash":"512d48f509686845beb0896694bb29007dcc61b6","modified":1551704859112},{"_id":"source/_posts/2019-03-04-start-hexo.md","hash":"f02cb9748d1b654baf854193e5b7a7b114b0f8fe","modified":1553532287957},{"_id":"source/_posts/2019-03-01-how-to-start-a-vps.md","hash":"e8f8cdea8a36aeec1319b927de18d6352d25eebb","modified":1551772766340},{"_id":"source/_posts/2019-03-08-loline.md","hash":"55cd6b5bdadfb60e0da67de07d7e23e6b2138408","modified":1552209272458},{"_id":"source/_posts/2019-03-23-electron-note-1.md","hash":"16e7936f89b2eca4df676d16a45ca2718d302803","modified":1553532287957},{"_id":"source/_posts/2019-03-09-many-ways-to-loline.md","hash":"b6fb447162feca894a87273de4826d8998216292","modified":1552222733654},{"_id":"source/_posts/2019-03-26-electron-issues.md","hash":"2c62211b328e7f0411e346fe8afa8c1f11cc112b","modified":1554637083142},{"_id":"source/_posts/2019-03-26-how-to-cut-tiger.md","hash":"7e7eb68694392779fbc48c5fa3309884a47988b1","modified":1553610684804},{"_id":"source/_posts/2019-04-08-electron-note-2.md","hash":"8d29f4797712f1a60d693150b56ebe4d9224bc56","modified":1554707366311},{"_id":"source/_posts/2019-05-14-latex-notes.md","hash":"ebe8fd26a471c40151b5beedcb2683f650382cdd","modified":1557808955525},{"_id":"source/_posts/2019-05-29-deep-learning-notes-1.md","hash":"ae2f3d0c010ae3ad91023dfaef4ea6ea8a55b950","modified":1559062155707},{"_id":"source/_data/js_settings.yml","hash":"6c53e0b54f98b120282c88fc23ce3c136584d2b2","modified":1544950383000},{"_id":"source/_posts/2019-2-22-customize-font-in-latex.md","hash":"6ace13c08c14da8f3a01923b819016628c46d0e0","modified":1551704681829},{"_id":"source/categories/index.md","hash":"897cd90c75a3d9748adcb7ed4c1e6b134a113f40","modified":1551626688645},{"_id":"source/_posts/2019-2-22-software-installation-description.markdown","hash":"989cdfc6a0e8bbfdc892fb3db6ce5987686abf18","modified":1551704633014},{"_id":"source/about/index.md","hash":"317167ef82bc7e1c1906f1ea1c755a97b7f8b444","modified":1551792726856},{"_id":"source/images/collection-code.jpg","hash":"457a9f25eb54afd98b662d163d805678512843ab","modified":1545152072000},{"_id":"source/tags/index.md","hash":"c8a86e830d14431b89dde9bf353f972d9cd1dc27","modified":1551626647749},{"_id":"source/images/wechat.jpg","hash":"cad6002213f8d980a579ed1cc6ecc1a4e9f0f60d","modified":1551538488809},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239151},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"795b8ddb251da8e2327299d5f7dbf446fb9867c6","modified":1557809267313},{"_id":"source/images/hexo-next-preview.jpg","hash":"8915a3e2e60d2032067d3b0f7a268dc49689385a","modified":1551770826335},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"59b2b45e151972bbe08582cde22f398e58832765","modified":1557809267315},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"245917ffaa296bc2d9a85444acf639077ca25944","modified":1557809267314},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"ae22e700b7c63c60746321719a20d34022ad78d9","modified":1557809267315},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1551599238848},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1551599238848},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1551599238848},{"_id":"themes/next/docs/ru/README.md","hash":"aeb95129ab1da9ec41786bfa86dc32c739ee6358","modified":1557809267332},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"aaf25d304793344e2d026062768c93005723f5c6","modified":1557809267334},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"018a259694f4a8c7c384e1f323531442cba5fbf3","modified":1557809267335},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"508caa37443407860d03f4d8bd56b007585125ef","modified":1557809267336},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1551599238848},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"b17fc344ff61603f83387c0f9b2b2189aae81d50","modified":1551599238863},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1551599238863},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"db2797f161e1e7a4987cbfa3d1be682266dfbba6","modified":1557809267338},{"_id":"themes/next/docs/zh-CN/README.md","hash":"4016948fdb971e4f905efb7a5bb3add3dd58e7a8","modified":1557809267339},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1551599238863},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551599238879},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1551599238879},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1551599238894},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"891ab67815969dd8736cb22fbbb3f791b8fff4e4","modified":1551599238899},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5b1380a97a3f7109d5865ec28273d7baedf32a45","modified":1557809267557},{"_id":"themes/next/layout/_macro/post.swig","hash":"85b17818c26075a9d22aa938e8434b4a0bdde766","modified":1557809267356},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"c2e8f4b3a2bf991320ecc827dcdc227399ad5b51","modified":1557809267366},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"50c3ae6b50f173ae70f8c3312f7c6da1097eb9b6","modified":1557809267367},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"ce68fb975967baa2262b85d933e1bd89d34d0af5","modified":1557809267551},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"8a992b7fe42b9c1a5eb9d937b0827aed91586d94","modified":1557809267371},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"efb3404a3303622f3be60944d9d1926972c5c248","modified":1551599238930},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4130f995f0c4f81a44266194ecae9df96fad174c","modified":1557809267372},{"_id":"themes/next/layout/_partials/comments.swig","hash":"d0b9e841d55c974d02f43823a06a2627f8e46431","modified":1557809267357},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9a79dde1412b1b1473380e8b6cacfe1930ed321b","modified":1557809267358},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"1ad13269b43b900356f3bdab7947d6a86f035a2c","modified":1557809267359},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1551599238914},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"dee345054d564dd56f74bb143942d3edd1cb8150","modified":1551599238914},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"87bcb495f7ddd81cc3fe2c2a886e51c08053019b","modified":1551599238961},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"4b93dc7ac0573c402aabcb5c933bbcb893b07c51","modified":1551599238961},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"87182367d7954457cb2498bbfa9445c03c2d619e","modified":1557809267374},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"e0d65688661875200cb4dd401fc5ac833c697f91","modified":1557809267380},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"80dfc0879866e6512cb67590a3b2d8741a66f980","modified":1557809267382},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"7db4ad4a8dd5420dad2f6890f5299945df0af970","modified":1551599238977},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"76f5933925670044ec65b454295ba7e0a8439986","modified":1551599238977},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"4ae61c7efb16e962385bfe522a38c4d29cdcccbe","modified":1557809267384},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"c476dc3693a9dd0be2d136a45b0d7fdef55d4d92","modified":1551599238992},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"7cc1294a5fbedf3502688248a433c358339e5ae0","modified":1557809267384},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"882cd0b68c493af1b6d945660f9c21085e006ffc","modified":1551599238992},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"b44010cd577e4d063c3406772938c4b117ec7b7b","modified":1557809267386},{"_id":"themes/next/source/css/main.styl","hash":"5e7d28bc539e84f8b03e68df82292f7fc0f2d023","modified":1551599239135},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1551599239151},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1551599239151},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1551599239151},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1557809267474},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1551599239151},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1551599239151},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1551599239151},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1551599239151},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1551599239151},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1551599239151},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1551599239151},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551599239151},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551599239166},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1551599239151},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1551599239166},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1551599239151},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1557809267474},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1551599239166},{"_id":"themes/next/source/images/sidebar-quote-l.svg","hash":"a625a5a77db68f0f0982e738d8a6d7d3d73573f9","modified":1552127590536},{"_id":"themes/next/source/images/sidebar-quote-r.svg","hash":"5f69663f01532d5bf9e861a499b2743e3c9906f0","modified":1552127588314},{"_id":"themes/next/source/js/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1557809267526},{"_id":"themes/next/source/js/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1557809267525},{"_id":"themes/next/source/js/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1557809267524},{"_id":"themes/next/source/js/js.cookie.js","hash":"f11e84def0352b7dd6393f1b83e55a40ab468686","modified":1557809267523},{"_id":"themes/next/source/js/motion.js","hash":"d0a6d9dbcc57159e54bbb1f683b86632ae0b78f0","modified":1557809267522},{"_id":"themes/next/source/js/next-boot.js","hash":"696a0c2cf158001576d56b48195ec8e39e835b47","modified":1557809267520},{"_id":"themes/next/source/js/post-details.js","hash":"09d1dbc9dccf805ed17bd3ab4920f1d7e5622554","modified":1557809267519},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1557809267515},{"_id":"themes/next/source/js/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1557809267514},{"_id":"themes/next/source/js/utils.js","hash":"8cded0355b2c532ff14c995ab61bec193001ca52","modified":1557817695634},{"_id":"themes/next/source/json/Ryze.json","hash":"38946ce8b4e6991ef06f81dd5d4862b600c4e3d4","modified":1551946912038},{"_id":"themes/next/source/json/champions.json","hash":"01b495bcd0b8b531c491594abb96c44c18b225df","modified":1552123800756},{"_id":"themes/next/scripts/filters/exturl.js","hash":"b19c7c1021e57367b3b3bbf5678381017ed5667d","modified":1551599239008},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1551599239008},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"a40ce6bc852bb4bff8b9f984fa064741dd151e96","modified":1551599239008},{"_id":"themes/next/scripts/tags/button.js","hash":"95a520f6529424a03c7ead6dbfd5e626d672febb","modified":1557809267391},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1551599239008},{"_id":"themes/next/scripts/tags/exturl.js","hash":"f9f25905adecfb8be49def4ff3b0b8bbc6955d84","modified":1557809267392},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a6b2264215c555c553b2c5db85fa90678798d0d5","modified":1557809267393},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"23d839333422375e85d44e476f554faf49973a3c","modified":1557809267394},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1557809267394},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1551599239008},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1557809267395},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1557809267395},{"_id":"themes/next/scripts/tags/pdf.js","hash":"ab995f0fc60d60f637220e2651111b775b8a06de","modified":1557809267396},{"_id":"themes/next/scripts/tags/tabs.js","hash":"72a5adbd8f300bee1d0c289367598ca06b2bed17","modified":1557809267397},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1557809267397},{"_id":"source/_posts/2019-05-14-latex-notes/2019-05-14-多图.jpg","hash":"1ac495272273dab0a03635cb8c2406efe89db881","modified":1557803968628},{"_id":"source/_posts/2019-05-14-latex-notes/2019-05-14-公式编号.jpg","hash":"907083d56383f447e970cff8566e03a99c97af28","modified":1557807853433},{"_id":"source/_data/post_images/2019.yaml","hash":"39a3ab19516de7dbbeb1e986df3c96e2c911b9d0","modified":1551693653880},{"_id":"source/_data/year_book/January.yml","hash":"2ff2d6d5fdf5089b69868fff5ad27c5d2a8d3bf9","modified":1551641765089},{"_id":"source/_data/post_images/2018.yml","hash":"42166b7b160ccb0ddf95617e951453b3f915c85d","modified":1551693670431},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239102},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239102},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239102},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239135},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551599239135},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1551599238897},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"25aea3d764b952f3f6d28ab86d7212d138e892df","modified":1551599238899},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cf87ab778618a32119ec1c4ac2079a51385b1913","modified":1557809267368},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a62c93f19429f159bcf0c2e533ffc619aa399755","modified":1551599238945},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"3c548934b97cc426544947f7a2ae35c270b5e33f","modified":1551599238945},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7ef07edd2a97a3774229990d2f0a6eefa31bd015","modified":1557809267370},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"828eb9c47f34090c841a2e9a0b3f31b0e4ccf40a","modified":1557809267371},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1551599238914},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"03f669356bbaa70144b743f3312178e1981ac3a8","modified":1557809267362},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"39c4ad0e36b7c1260da98ba345f7bd72a2ac0f2e","modified":1551599238914},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"e015c7d9b84062b60b15b36be3ef11929dd10943","modified":1551599238914},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"be6683db6a269d83bb0441d7cf74db63a240fa8a","modified":1551599238914},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"b57bf9c865bed0f22157176a8085de168a1aef77","modified":1551599238899},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"fd079a414ca0f42f4cddd00247a9d5a5f58c4d8e","modified":1557809267361},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"466e69a4b4fbdc57f33e60a16b0d87e494385e21","modified":1557809267362},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f331ad02beea8990066d32ad6ec9f859672c3615","modified":1551599238914},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"fb7727e8ec63a58238a7206bf70eb273c8879993","modified":1551599238930},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"f62b801c7999da67b4bdca9c5e373b9b5ed039dc","modified":1557809267364},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"66d562b3778dbc839f7c00103bd0099c5d61602a","modified":1551599238945},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"2b905ddd5dea8558c3fd95aacad241da6b6800f4","modified":1557809267363},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"73576c9683d9ad9b124916dc6c660607fe7cc1fa","modified":1551599238961},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"f46699a9daa5fef599733cbab35cb75cf7a05444","modified":1551599238914},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"335005a9f8b36349f0ad0a7beeba6969c55fc7f7","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"83dd7df11b100bae38c9faab9a478f92149a0315","modified":1551599238945},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"2e1de38f44af00209129d4051b7ae307cb11ad68","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"53202062267391353d49f269e7eb74eb87d30921","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"623e73bedef067ac24a398ef27c8197295da872d","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"54d7993ae773573ee103c22802b7e98b193e1a3a","modified":1557809267374},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"71fb01bcad43bc9410ab19190373b9f7e59215b5","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"d18c87d7839e7407e39acd2998bcc9e0b34611b0","modified":1551599238961},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a22d1ea29a5ffe46199ab7d108a291a05af8d5b6","modified":1551599238961},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f14e9e8c27af82f1bfe794e252dec0d7e521f503","modified":1551599238930},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"4cff8bf5c42c62f7f0ac1f0d70f839dae39ba77a","modified":1551599238961},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1551599238930},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1551599238930},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c609097b95eb6127c2784f47f2230e6e6efc0be2","modified":1551599238930},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"31245e09ce0465b994cebd94223a531585c4eab4","modified":1551599238930},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"54b43d406cf37932e7b60f46814e864d31b1842c","modified":1551599238930},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"647e8677d1ccfb3f7918dd3ea2ff7078504a845d","modified":1557809267365},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"bc3fc9d053b3d1fc0cd3918bf9a629a6f38f6414","modified":1551599238977},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"d685df1516cb138d7a83bac5d7878a1e0fa8bc04","modified":1551599238977},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"8b4a94dd80b3bac7c5390c8a7fd377b88c2cb78e","modified":1557809267375},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"9a4923d2aa5182531ea7a7fb9abe824450026208","modified":1557809267377},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"4e86e1ace90a70bb8862f5e6de9dbe7bfc046bee","modified":1557809267376},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1a5d94f5779a2ce13abc886dd78e0617f89c34b9","modified":1551599238977},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"b3818fd0b3028dadf341b6d0b180e1243683de6a","modified":1557809267378},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"1b72c755101c9dfb85da13df9a0abccf37cd1dd2","modified":1557809267379},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"43a20fa0e9ae2f4254f04813f9c619dd36b49ae5","modified":1551599238977},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"767ba29f258db5d2e5baf875a6f36ac1d44df6a3","modified":1557809267381},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"ea1c136f960667a0a13b334db497b9b19c41f629","modified":1551599238977},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"078bd2d5815eb23e8c5f74467dc0042babea00ae","modified":1551599238992},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"143ef265c96a8ea2fb93c36c5ffb9c5e940f7693","modified":1557809267385},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"d45ca53af17d1d83fd27f8ed0917a72f0060e1a9","modified":1551599238992},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1551599239102},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"1aabac9e37a8f4451c86d09037b3a1f8b30eaf5e","modified":1557809267456},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"21a14a19149f1cb8e011c477f29dd1352675605b","modified":1557809267457},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"e91bb4fd313dadea102fbddb587806655e9c4ffb","modified":1552203725700},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1551599239135},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e9b0752f08398709e787546a246baca12b4c557f","modified":1551599239135},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"da7049f3d9a157abe0ecc62611edcf43605ba84d","modified":1551599239135},{"_id":"themes/next/source/css/_variables/base.styl","hash":"edfb2ae3ba42ebfed6d6164f0356ccfbca9aa276","modified":1557809267533},{"_id":"themes/next/source/js/schemes/muse.js","hash":"ccc0c5cd4ec6f8159c98990ad83f11a5c0b0234c","modified":1557809267518},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3eea56cc9ce47bb4760930c4c69cebf847a7fbb2","modified":1557809267516},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"6b4437a9cd8aa04329cc6220a595acfe1fb9b598","modified":1551621429617},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9c0e38750e26eb9e83e2b5ab9e069b66f0965ce4","modified":1551708970514},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551621429618},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1551621477981},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1551599239182},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551710655038},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551710655038},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551710655038},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551710655053},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1551710655053},{"_id":"themes/next/source/lib/three/README.md","hash":"6dd1906f6928a2d2dd5bfa12a28474e8cc650a77","modified":1551621462308},{"_id":"themes/next/source/lib/three/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1551621462306},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551710655053},{"_id":"themes/next/source/lib/three/package.json","hash":"74780a21c6e9e1e247f1fa18a0a4197e99d13fa8","modified":1551621462320},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"97f0e67570574dc8597c5819970508d4e7f7af25","modified":1551621462310},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"333fed4c256c7081e07c7844c097b7970b45b248","modified":1551621462312},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"cca4caa79ab23db0e99ea35699212bb39b469db8","modified":1551621462314},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"704e860183acbaaf8de1be65fe5c958e8105f4bf","modified":1551621462328},{"_id":"themes/next/source/lib/three/yarn.lock","hash":"c3aa170f7c465150c8acae37f5f394acb9c43ca0","modified":1551770386921},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1551599239213},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1551599239213},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1551599239213},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1551599239198},{"_id":"source/images/luna.png","hash":"7822bdf6ce788f863844edbe1e750089acc79d5a","modified":1551535407814},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1551599239024},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"9fd526db0527c71243f05e18086f937dc67b1c3e","modified":1557809267402},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"5c0ca7f801859cff254d2f5b7d1a70d66ff61a8d","modified":1557809267399},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"463817cbbd804ce134cb3e7e721431cb0e1616f2","modified":1557809267401},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"997058180065d986e05df72992cc2cbfd7febd7e","modified":1557809267403},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"a4c6ee546a94fd69e5b7a1e4c054ab8cacb73d2a","modified":1557809267413},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"cfa64bd8ee2ff9f943673e339d69341e76fbf031","modified":1557809267424},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"afdd21533db18d846e1a2663b1199761b1bd2c1e","modified":1557809267425},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"40144394fdfe05d400f39f6763f66f75479a2e34","modified":1557809267449},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"35c6fd7eab3779bd9e38b7ba8825ab0c67a1be7a","modified":1557809267451},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9c6194177533619a6f6685dc7e890dcbec456241","modified":1557809267452},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1551599239102},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"fec36a14080104b5862e9f021eab117d87c5f7c5","modified":1557809267454},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"1a4ac0d119f2126ef8951897338706edce112235","modified":1551599239086},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"107f42aa590ec4ba0765a0bc5d735f0f09edc0ff","modified":1557809267455},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a609ff811f2b2764f5470236fe2fb1f3aa6ccba5","modified":1557809267459},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1551599239117},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1551599239117},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"8da8416213127595dfc4d2b358639194647e7bd3","modified":1557809267460},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1557809267462},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"40f266e24af4dedc9497056ab18ebcfda38dd47d","modified":1557809267461},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"06d9d00257abd28414ec0b746f866bf9911cf5ec","modified":1551599239117},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"04706657af638f2746ae59520e6fc78577c7682c","modified":1557809267464},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"157e6915dcf5990566e463acffa71043b2651c07","modified":1551599239117},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"25f05ed8da68d034dce7f06e0f20f6cd55841070","modified":1557809267463},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"234b44cfd03f9c9e3e179ff5fd698ac876341913","modified":1557809267464},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"6aee54cd5a20181e18596565356bd54c66e33823","modified":1557809267465},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1557809267466},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"b9619c9827f969ca2e2f5878552362a7b858918f","modified":1557809267468},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"e73d6da74c5755442e831d8fd7d922c5b32bd892","modified":1557809267469},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"5b5e0a02a7bf63de9efcd33a4e482939cce5822d","modified":1557809267471},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0b3001909f3446843b226030524ea8498d4d8997","modified":1557809267470},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"adb7379f3b9001840eb38b260434e89365771a81","modified":1557809267472},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0d6f0df798449b710e1e5dbd43d470089b2a3c95","modified":1551599239135},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"f7b9796b5b50c2c267eae284fefb6456ba83d656","modified":1551708970525},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"b9a1185936351c902a3dfa179a3fde1d81d0ae68","modified":1551708970531},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"84adea69673c392c1d34a5a316e8e5960aa348b5","modified":1551708970529},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1551599239182},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1551599239182},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"10795d7f1e5393b2b5e1529b017ee4e0ffe82ac9","modified":1551621462323},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"71141daa39bbcedcf14ae95c05023a57828a5a43","modified":1551621462317},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"8381c792b161001a1b5cf39613c6d48e2588b3ce","modified":1551621462325},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"ac382962d408f16acf07b925b94bb15495b5207c","modified":1551621462326},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"69725cd0af6868c5aa059343cc6e18e0c10b2f2e","modified":1551621462319},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551599239198},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551599239198},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"c9cfb4b99e1ec8ec9cf075cb761b8f7fa5fe63fd","modified":1557809267406},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"3a0efe849587b34f20d4e260028dc799215b0bb3","modified":1557809267408},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"33200f60bd6a8bbfc66dd49a239bcc75c2f564c1","modified":1557809267407},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"024e8ff40ca881c6fbf45712897e22f58a3811ab","modified":1557809267409},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"9c1a082e6c1f96187a099c3f4cb5424c0c9fd06e","modified":1557809267410},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"4af5f83540d9f37c9b0a722500fa401c933384a8","modified":1551777804108},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"b8647d6140141b0a160607f6353e4d4594cca92e","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"a8f4d4b86acaa34c99111b2dde5d0779cc7e0de6","modified":1557809267405},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"e5a5f8747fdf2ca960e4e73c081b8952afd62224","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fa1cea6fcc3f552d57cc7d28380a304859139bf6","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"9a8fb61bd2d184de9d206e62ba8961d1845c5669","modified":1557809267411},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"2df409df04fdb52d7234876a9f6e502edd4e3929","modified":1551599239024},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1551599239039},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"c97c819a65f6967485184399397601e5133deda6","modified":1557809267544},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c27527cdeb9e3a9f447f7238f442a5dc33fde4e6","modified":1557809267411},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a73346f999b31355075cd58637946a8950cf6f7e","modified":1557809267415},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"f3b0d259e991ac86454ae5eac6bc94dc8691d8c9","modified":1557809267414},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d77f85d3af2d7090d84b28ab01c6a49f92eec647","modified":1557809267417},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"f14cefc99309934d4103a3aa785e1258d858813f","modified":1557809267416},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"b6a241626783d2ac115d683fd59ec283af68e5bb","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"4aad8e36178faaa71a767af0084d578df4c09f73","modified":1557809267420},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"13d365ee626c01f17ec664b3f54f51d8b9ee7cf4","modified":1557809267419},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ccd0b1309acff0c676fdcc848a8ae2d05f0369ab","modified":1557809267421},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"c8009fd9598a661b7d23158b5121b6ac266939e9","modified":1557809267422},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"981795aad232c8bd3f52a0ed8720db696d18a234","modified":1551599239055},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"615fca7dff197a2ca3df674cf963ce70b8525985","modified":1557809267424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"ab1776c5dc537beabb0ab81a0f04e08bebad070b","modified":1557809267427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"a5484d8436b2b7862faf6e7309a9e7b88cdd0027","modified":1557809267426},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"b36eea093bd4b32056b5de6f370ff57e50b25a49","modified":1557809267543},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"e58bb8b7127aa21e8260493a425ec00fcb25d338","modified":1557809267429},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"03a4e75e963e3e7cc393d588b1495a88d52e0e40","modified":1557809267428},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9204c79c05d620ecd5d411cdf11e27441b6281dc","modified":1557809267430},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"0eadef0381f696de7f88d7dc5f0ddc3cd5d309b3","modified":1557809267431},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"7e2ba73073daaea0a18c3d67ff137dd683af7011","modified":1551599239070},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"3cb387fa70017f3c24a1a1884461d29deda54585","modified":1557809267432},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1551599239070},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"b43421291bf85b589e8d0ec853e238d36ab80631","modified":1557809267436},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"ed3a2960ebce7396d1893bb8e08c99c7d9259140","modified":1557809267434},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"e361b0448e1be0be9e46ab99f1946a72e5d7c140","modified":1557809267541},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"6c9a59b452e585bfcca71f7565636392630dc230","modified":1551720475434},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"3baeeb51cfe123e99235ee1816d0e1f6a97c7852","modified":1557809267438},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"da7a21f5a2f7dcf4c5a4788d7670159ca4132b65","modified":1557809267441},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"020fac447d7a17c03e2802f0f724ae0738088354","modified":1557809267438},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"4305813408a1cd6aba764a7769b94b081d383d4f","modified":1557809267442},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"54c5398c7bf5b8bd9f38a9ece1dd82a9255f9a30","modified":1557809267440},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1551599239086},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"2a1008f1044b450b806adc166754ba9513e68375","modified":1551599239086},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"d9c244b1c3a09a7fccd3c3f732e6fb112a8cd565","modified":1557809267443},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"2fbe52f955da41c7a14eb09918bf86a252e4504f","modified":1557809267444},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"6880467b4f6d7b057fb8291aa10966429a0a3bff","modified":1557809267445},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"35dc9f3990fadff3ea038d4e8ac75923219886ed","modified":1557809267446},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"ed8a12982c0497eeb9d7642781abeb801428f83d","modified":1557809267445},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"9801977a23268e36c5deefd270423f6f1a0c3bb2","modified":1557809267447},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7cf42f96ba6b249c75e00dad251ebacf7de61e6c","modified":1557809267448},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1551599239117},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551599239117},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"e72794707ef26fbdf5995532d91d95766173ecd4","modified":1551708970534},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1551599239135},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"e72794707ef26fbdf5995532d91d95766173ecd4","modified":1551708970527},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551599239198},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1551599239213},{"_id":"source/images/background/20180830_3.jpg","hash":"d715c1c521d31fd6ab29cc0a72e89291e0670cf7","modified":1535602604000},{"_id":"source/images/background/20180920_2.jpg","hash":"5d01610e2bad2fc87a1f88234e99ec97c984130d","modified":1537403665000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1551621462334},{"_id":"source/images/background/20180920_1.jpg","hash":"05a8a4140ab6bf803ec75194fbf1d6280a4316f6","modified":1537403656000},{"_id":"source/images/background/20180830_1.jpg","hash":"f46d83f619729a2b014708895838698b539dcf6b","modified":1535601809000},{"_id":"source/images/background/20180830_2.jpg","hash":"8c2ea726d8d211173b5aafecad327e9c60cc4b19","modified":1535601919000}],"Category":[{"name":"模板","_id":"cjwj070c00002m8zavvx89h5t"},{"name":"Gallery","_id":"cjwj070cc000cm8zarc3ktog6"},{"name":"Github Pages","_id":"cjwj070ci000km8za2tujljow"},{"name":"MySQL","_id":"cjwj070ck000nm8za63eqv6ht"},{"name":"Linux","_id":"cjwj070cl000qm8zalb27hzik"},{"name":"Python","_id":"cjwj070cp000ym8zaf4ecm766"},{"name":"大数据","_id":"cjwj070cr0014m8zapi25y3nw"},{"name":"Hadoop","parent":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070ct0019m8za2fuxi6ak"},{"name":"Life","_id":"cjwj070e3001mm8zaxhiojlzd"},{"name":"Hive","parent":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070e9001um8zansmusej1"},{"name":"HBase","parent":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070eg0026m8zaenee8l98"},{"name":"电影","_id":"cjwj070ep002nm8za4txmsz3u"},{"name":"计算机网络","_id":"cjwj070eu002wm8zadzkdjuxc"},{"name":"Scala","_id":"cjwj070f00035m8zafn9gxsz4"},{"name":"Spark","_id":"cjwj070f6003dm8zaa7pxqt5x"},{"name":"Software","_id":"cjwj070fd003pm8za2ir3l3mx"},{"name":"Node.js","_id":"cjwj070fo0042m8zaq0yodcuq"},{"name":"游戏","_id":"cjwj070fs0048m8zah85qpfcf"},{"name":"Electron","_id":"cjwj070fy004nm8za1xbcxswt"},{"name":"LaTex","_id":"cjwj070fz004tm8zats99b08s"},{"name":"深度学习","_id":"cjwj070g20053m8zabljjnqpc"}],"Data":[{"_id":"js_settings","data":{"click_heart":true,"dynamic_title":true}},{"_id":"post_images/2019","data":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"}},{"_id":"year_book/January","data":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"}},{"_id":"post_images/2018","data":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}],"Page":[{"title":"分类","date":"2019-03-03T23:21:50.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-03-03 23:21:50\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-03-03T15:24:48.645Z","path":"categories/index.html","layout":"page","_id":"cjwj070e1001jm8za5858kwe7","content":"","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":""},{"title":"about","date":"2019-03-05T21:05:40.000Z","comments":0,"_content":"\nMaster Hammer\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-03-05 21:05:40\ncomments: false\n---\n\nMaster Hammer\n","updated":"2019-03-05T13:32:06.856Z","path":"about/index.html","layout":"page","_id":"cjwj070e3001lm8zakdukoz58","content":"<p>Master Hammer</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":"<p>Master Hammer</p>\n"},{"title":"标签","date":"2019-03-03T23:21:19.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-03-03 23:21:19\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-03-03T15:24:07.749Z","path":"tags/index.html","layout":"page","_id":"cjwj070e4001om8zap6sfxm6e","content":"","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"markdown 基本语法","date":"2013-01-24T00:00:00.000Z","_content":"\n\nThe purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don't forget to redefine the style by yourself.\n\n<!-- more -->\n\n---\n\n# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\n---\n\n## Paragraph\n\nLorem ipsum dolor sit amet, [test link]() consectetur adipiscing elit. **Strong text** pellentesque ligula commodo viverra vehicula. *Italic text* at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. ~~Deleted text~~ tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. `Sed erat diam`, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n\n## List Types\n\n### Definition List (dl)\n\n<dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n### Ordered List (ol)\n\n1. List Item 1\n2. List Item 2\n3. List Item 3\n\n### Unordered List (ul)\n\n- List Item 1\n- List Item 2\n- List Item 3\n\n## Table\n\n| Table Header 1 | Table Header 2 | Table Header 3 |\n| --- | --- | --- |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n\n## Misc Stuff - abbr, acronym, sub, sup, etc.\n\nLorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>\n","source":"_posts/2013-12-24-elements.md","raw":"---\nlayout: post\ntitle: markdown 基本语法\ndate: 2013-1-24 00:00:00 +0800\ncategories:\n- 模板\ntags: 示例\n---\n\n\nThe purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don't forget to redefine the style by yourself.\n\n<!-- more -->\n\n---\n\n# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\n---\n\n## Paragraph\n\nLorem ipsum dolor sit amet, [test link]() consectetur adipiscing elit. **Strong text** pellentesque ligula commodo viverra vehicula. *Italic text* at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. ~~Deleted text~~ tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. `Sed erat diam`, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n\n## List Types\n\n### Definition List (dl)\n\n<dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n### Ordered List (ol)\n\n1. List Item 1\n2. List Item 2\n3. List Item 3\n\n### Unordered List (ul)\n\n- List Item 1\n- List Item 2\n- List Item 3\n\n## Table\n\n| Table Header 1 | Table Header 2 | Table Header 3 |\n| --- | --- | --- |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n\n## Misc Stuff - abbr, acronym, sub, sup, etc.\n\nLorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>\n","slug":"elements","published":1,"updated":"2019-03-22T19:27:37.677Z","comments":1,"photos":[],"link":"","_id":"cjwj070br0000m8zadkkn6khs","content":"<p>The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself.</p>\n<a id=\"more\"></a>\n\n<hr>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><hr>\n<h2 id=\"Paragraph\"><a href=\"#Paragraph\" class=\"headerlink\" title=\"Paragraph\"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href>test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p>\n<p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p>\n<blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p>\n<h2 id=\"List-Types\"><a href=\"#List-Types\" class=\"headerlink\" title=\"List Types\"></a>List Types</h2><h3 id=\"Definition-List-dl\"><a href=\"#Definition-List-dl\" class=\"headerlink\" title=\"Definition List (dl)\"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n<h3 id=\"Ordered-List-ol\"><a href=\"#Ordered-List-ol\" class=\"headerlink\" title=\"Ordered List (ol)\"></a>Ordered List (ol)</h3><ol>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ol>\n<h3 id=\"Unordered-List-ul\"><a href=\"#Unordered-List-ul\" class=\"headerlink\" title=\"Unordered List (ul)\"></a>Unordered List (ul)</h3><ul>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ul>\n<h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><table>\n<thead>\n<tr>\n<th>Table Header 1</th>\n<th>Table Header 2</th>\n<th>Table Header 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n</tbody></table>\n<h2 id=\"Misc-Stuff-abbr-acronym-sub-sup-etc\"><a href=\"#Misc-Stuff-abbr-acronym-sub-sup-etc\" class=\"headerlink\" title=\"Misc Stuff - abbr, acronym, sub, sup, etc.\"></a>Misc Stuff - abbr, acronym, sub, sup, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr></p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself.</p>","more":"<hr>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><hr>\n<h2 id=\"Paragraph\"><a href=\"#Paragraph\" class=\"headerlink\" title=\"Paragraph\"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href>test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p>\n<p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p>\n<blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p>\n<h2 id=\"List-Types\"><a href=\"#List-Types\" class=\"headerlink\" title=\"List Types\"></a>List Types</h2><h3 id=\"Definition-List-dl\"><a href=\"#Definition-List-dl\" class=\"headerlink\" title=\"Definition List (dl)\"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n<h3 id=\"Ordered-List-ol\"><a href=\"#Ordered-List-ol\" class=\"headerlink\" title=\"Ordered List (ol)\"></a>Ordered List (ol)</h3><ol>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ol>\n<h3 id=\"Unordered-List-ul\"><a href=\"#Unordered-List-ul\" class=\"headerlink\" title=\"Unordered List (ul)\"></a>Unordered List (ul)</h3><ul>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ul>\n<h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><table>\n<thead>\n<tr>\n<th>Table Header 1</th>\n<th>Table Header 2</th>\n<th>Table Header 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n</tbody></table>\n<h2 id=\"Misc-Stuff-abbr-acronym-sub-sup-etc\"><a href=\"#Misc-Stuff-abbr-acronym-sub-sup-etc\" class=\"headerlink\" title=\"Misc Stuff - abbr, acronym, sub, sup, etc.\"></a>Misc Stuff - abbr, acronym, sub, sup, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr></p>"},{"layout":"post","title":"数学公式 MathJax","date":"2014-02-16T00:00:00.000Z","mathjax":true,"image":"http://gastonsanchez.com/images/blog/mathjax_logo.png","_content":"\n\nOne of the rewards of switching my website to [Jekyll](http://jekyllrb.com/) is the\nability to support **MathJax**, which means I can write LaTeX-like equations that get\nnicely displayed in a web browser, like this one \\\\( \\sqrt{\\frac{n!}{k!(n-k)!}} \\\\) or\nthis one \\\\( x^2 + y^2 = r^2 \\\\).\n\n<!--more-->\n\n<img class=\"centered\" src=\"https://www.mathjax.org/badge/mj-logo.svg\" />\n\n### What's MathJax?\n\nIf you check MathJax website [(www.mathjax.org)](http://www.mathjax.org/) you'll see\nthat it *is an open source JavaScript display engine for mathematics that works in all\nbrowsers*.\n\n\n### How to implement MathJax with Jekyll\n\nI followed the instructions described by Dason Kurkiewicz for\n[using Jekyll and Mathjax](http://dasonk.github.io/blog/2012/10/09/Using-Jekyll-and-Mathjax/).\n\nHere are some important details. I had to modify the Ruby library for Markdown in\nmy ```_config.yml``` file. Now I'm using redcarpet so the corresponding line in the\nconfiguration file is: ```markdown: redcarpet```\n\nTo load the MathJax javascript, I added the following lines in my layout ```page.html```\n(located in my folder ```_layouts```)\n\n``` r\n<script type=\"text/javascript\"\n    src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n```\n\nOf course you can choose a different file location in your jekyll layouts.\n\n\n### A Couple of Examples\n\nHere's a short list of examples. To know more about the details behind MathJax, you can\nalways checked the provided documentation available at\n[http://docs.mathjax.org/en/latest/](http://docs.mathjax.org/en/latest/)\n\nI'm assuming you are familiar with LaTeX. However, you should know that MathJax does not\nhave the exactly same behavior as LaTeX. By default, the **tex2jax** preprocessor defines the\nLaTeX math delimiters, which are ```\\\\(...\\\\)``` for in-line math, and ```\\\\[...\\\\]``` for\ndisplayed equations. It also defines the TeX delimiters ```$$...$$``` for displayed\nequations, but it does not define ```$...$``` as in-line math delimiters. Fortunately,\nyou can change these predefined specifications if you want to do so.\n\nLet's try a first example. Here's a dummy equation:\n\n$$a^2 + b^2 = c^2$$\n\nHow do you write such expression? Very simple: using **double dollar** signs\n\n``` r\n$$a^2 + b^2 = c^2$$\n```\n\nTo display inline math use ```\\\\( ... \\\\)``` like this ```\\\\( sin(x^2) \\\\)``` which gets\nrendered as \\\\( sin(x^2) \\\\)\n\n\nHere's another example using type ```\\mathsf```\n\n``` r\n$$ \\mathsf{Data = PCs} \\times \\mathsf{Loadings} $$\n``` \n\nwhich gets displayed as\n\n$$ \\mathsf{Data = PCs} \\times \\mathsf{Loadings} $$\n\nOr even better:\n\n``` r\n\\\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\\\]\n```\n\nis displayed as\n\n\\\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\\\]\n\nIf you want to use subscripts like this \\\\( \\mathbf{X}\\_{n,p} \\\\) you need to scape the\nunderscores with a backslash like so ``` \\mathbf{X}\\_{n,p} ```:\n\n``` r\n$$ \\mathbf{X}\\_{n,p} = \\mathbf{A}\\_{n,k} \\mathbf{B}\\_{k,p} $$\n```\n\nwill be displayed as\n\n\\\\[ \\mathbf{X}\\_{n,p} = \\mathbf{A}\\_{n,k} \\mathbf{B}\\_{k,p} \\\\]\n","source":"_posts/2014-02-16-Mathjax-with-jekyll.md","raw":"---\nlayout: post\ntitle: 数学公式 MathJax\ndate: 2014-02-16 00:00:00 +0800\nmathjax: true\ncategories: \n- 模板\ntags: \n- 示例\nimage: http://gastonsanchez.com/images/blog/mathjax_logo.png\n---\n\n\nOne of the rewards of switching my website to [Jekyll](http://jekyllrb.com/) is the\nability to support **MathJax**, which means I can write LaTeX-like equations that get\nnicely displayed in a web browser, like this one \\\\( \\sqrt{\\frac{n!}{k!(n-k)!}} \\\\) or\nthis one \\\\( x^2 + y^2 = r^2 \\\\).\n\n<!--more-->\n\n<img class=\"centered\" src=\"https://www.mathjax.org/badge/mj-logo.svg\" />\n\n### What's MathJax?\n\nIf you check MathJax website [(www.mathjax.org)](http://www.mathjax.org/) you'll see\nthat it *is an open source JavaScript display engine for mathematics that works in all\nbrowsers*.\n\n\n### How to implement MathJax with Jekyll\n\nI followed the instructions described by Dason Kurkiewicz for\n[using Jekyll and Mathjax](http://dasonk.github.io/blog/2012/10/09/Using-Jekyll-and-Mathjax/).\n\nHere are some important details. I had to modify the Ruby library for Markdown in\nmy ```_config.yml``` file. Now I'm using redcarpet so the corresponding line in the\nconfiguration file is: ```markdown: redcarpet```\n\nTo load the MathJax javascript, I added the following lines in my layout ```page.html```\n(located in my folder ```_layouts```)\n\n``` r\n<script type=\"text/javascript\"\n    src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n```\n\nOf course you can choose a different file location in your jekyll layouts.\n\n\n### A Couple of Examples\n\nHere's a short list of examples. To know more about the details behind MathJax, you can\nalways checked the provided documentation available at\n[http://docs.mathjax.org/en/latest/](http://docs.mathjax.org/en/latest/)\n\nI'm assuming you are familiar with LaTeX. However, you should know that MathJax does not\nhave the exactly same behavior as LaTeX. By default, the **tex2jax** preprocessor defines the\nLaTeX math delimiters, which are ```\\\\(...\\\\)``` for in-line math, and ```\\\\[...\\\\]``` for\ndisplayed equations. It also defines the TeX delimiters ```$$...$$``` for displayed\nequations, but it does not define ```$...$``` as in-line math delimiters. Fortunately,\nyou can change these predefined specifications if you want to do so.\n\nLet's try a first example. Here's a dummy equation:\n\n$$a^2 + b^2 = c^2$$\n\nHow do you write such expression? Very simple: using **double dollar** signs\n\n``` r\n$$a^2 + b^2 = c^2$$\n```\n\nTo display inline math use ```\\\\( ... \\\\)``` like this ```\\\\( sin(x^2) \\\\)``` which gets\nrendered as \\\\( sin(x^2) \\\\)\n\n\nHere's another example using type ```\\mathsf```\n\n``` r\n$$ \\mathsf{Data = PCs} \\times \\mathsf{Loadings} $$\n``` \n\nwhich gets displayed as\n\n$$ \\mathsf{Data = PCs} \\times \\mathsf{Loadings} $$\n\nOr even better:\n\n``` r\n\\\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\\\]\n```\n\nis displayed as\n\n\\\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\\\]\n\nIf you want to use subscripts like this \\\\( \\mathbf{X}\\_{n,p} \\\\) you need to scape the\nunderscores with a backslash like so ``` \\mathbf{X}\\_{n,p} ```:\n\n``` r\n$$ \\mathbf{X}\\_{n,p} = \\mathbf{A}\\_{n,k} \\mathbf{B}\\_{k,p} $$\n```\n\nwill be displayed as\n\n\\\\[ \\mathbf{X}\\_{n,p} = \\mathbf{A}\\_{n,k} \\mathbf{B}\\_{k,p} \\\\]\n","slug":"Mathjax-with-jekyll","published":1,"updated":"2019-03-22T19:27:41.573Z","comments":1,"photos":[],"link":"","_id":"cjwj070by0001m8zaj0cnwmvo","content":"<p>One of the rewards of switching my website to <a href=\"http://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a> is the<br>ability to support <strong>MathJax</strong>, which means I can write LaTeX-like equations that get<br>nicely displayed in a web browser, like this one \\( \\sqrt{\\frac{n!}{k!(n-k)!}} \\) or<br>this one \\( x^2 + y^2 = r^2 \\).</p>\n<a id=\"more\"></a>\n\n<img class=\"centered\" src=\"https://www.mathjax.org/badge/mj-logo.svg\">\n\n<h3 id=\"What’s-MathJax\"><a href=\"#What’s-MathJax\" class=\"headerlink\" title=\"What’s MathJax?\"></a>What’s MathJax?</h3><p>If you check MathJax website <a href=\"http://www.mathjax.org/\" target=\"_blank\" rel=\"noopener\">(www.mathjax.org)</a> you’ll see<br>that it <em>is an open source JavaScript display engine for mathematics that works in all<br>browsers</em>.</p>\n<h3 id=\"How-to-implement-MathJax-with-Jekyll\"><a href=\"#How-to-implement-MathJax-with-Jekyll\" class=\"headerlink\" title=\"How to implement MathJax with Jekyll\"></a>How to implement MathJax with Jekyll</h3><p>I followed the instructions described by Dason Kurkiewicz for<br><a href=\"http://dasonk.github.io/blog/2012/10/09/Using-Jekyll-and-Mathjax/\" target=\"_blank\" rel=\"noopener\">using Jekyll and Mathjax</a>.</p>\n<p>Here are some important details. I had to modify the Ruby library for Markdown in<br>my <figure class=\"highlight plain\"><figcaption><span>file. Now I'm using redcarpet so the corresponding line in the</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">configuration file is: ```markdown: redcarpet</span><br></pre></td></tr></table></figure></p>\n<p>To load the MathJax javascript, I added the following lines in my layout <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(located in my folder ```_layouts```)</span><br><span class=\"line\"></span><br><span class=\"line\">``` r</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;</span><br><span class=\"line\">    src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>Of course you can choose a different file location in your jekyll layouts.</p>\n<h3 id=\"A-Couple-of-Examples\"><a href=\"#A-Couple-of-Examples\" class=\"headerlink\" title=\"A Couple of Examples\"></a>A Couple of Examples</h3><p>Here’s a short list of examples. To know more about the details behind MathJax, you can<br>always checked the provided documentation available at<br><a href=\"http://docs.mathjax.org/en/latest/\" target=\"_blank\" rel=\"noopener\">http://docs.mathjax.org/en/latest/</a></p>\n<p>I’m assuming you are familiar with LaTeX. However, you should know that MathJax does not<br>have the exactly same behavior as LaTeX. By default, the <strong>tex2jax</strong> preprocessor defines the<br>LaTeX math delimiters, which are <figure class=\"highlight plain\"><figcaption><span>for in-line math, and ```\\\\[...\\\\]``` for</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">displayed equations. It also defines the TeX delimiters ```$$...$$``` for displayed</span><br><span class=\"line\">equations, but it does not define ```$...$``` as in-line math delimiters. Fortunately,</span><br><span class=\"line\">you can change these predefined specifications if you want to do so.</span><br><span class=\"line\"></span><br><span class=\"line\">Let&apos;s try a first example. Here&apos;s a dummy equation:</span><br><span class=\"line\"></span><br><span class=\"line\">$$a^2 + b^2 = c^2$$</span><br><span class=\"line\"></span><br><span class=\"line\">How do you write such expression? Very simple: using **double dollar** signs</span><br><span class=\"line\"></span><br><span class=\"line\">``` r</span><br><span class=\"line\">$$a^2 + b^2 = c^2$$</span><br></pre></td></tr></table></figure></p>\n<p>To display inline math use <figure class=\"highlight plain\"><figcaption><span>... \\\\)``` like this ```\\\\( sin(x^2) \\\\)``` which gets</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rendered as \\\\( sin(x^2) \\\\)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Here&apos;s another example using type ```\\mathsf</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$ \\mathsf&#123;Data = PCs&#125; \\times \\mathsf&#123;Loadings&#125; $$</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">which gets displayed as</span><br><span class=\"line\"></span><br><span class=\"line\">$$ \\mathsf&#123;Data = PCs&#125; \\times \\mathsf&#123;Loadings&#125; $$</span><br><span class=\"line\"></span><br><span class=\"line\">Or even better:</span><br><span class=\"line\"></span><br><span class=\"line\">``` r</span><br><span class=\"line\">\\\\[ \\mathbf&#123;X&#125; = \\mathbf&#123;Z&#125; \\mathbf&#123;P^\\mathsf&#123;<span class=\"literal\">T</span>&#125;&#125; \\\\]</span><br></pre></td></tr></table></figure>\n\n<p>is displayed as</p>\n<p>\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\]</p>\n<p>If you want to use subscripts like this \\( \\mathbf{X}_{n,p} \\) you need to scape the<br>underscores with a backslash like so <figure class=\"highlight plain\"><figcaption><span>```:</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">``` r</span><br><span class=\"line\">$$ \\mathbf&#123;X&#125;\\_&#123;n,p&#125; = \\mathbf&#123;A&#125;\\_&#123;n,k&#125; \\mathbf&#123;B&#125;\\_&#123;k,p&#125; $$</span><br></pre></td></tr></table></figure></p>\n<p>will be displayed as</p>\n<p>\\[ \\mathbf{X}_{n,p} = \\mathbf{A}_{n,k} \\mathbf{B}_{k,p} \\]</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>One of the rewards of switching my website to <a href=\"http://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a> is the<br>ability to support <strong>MathJax</strong>, which means I can write LaTeX-like equations that get<br>nicely displayed in a web browser, like this one \\( \\sqrt{\\frac{n!}{k!(n-k)!}} \\) or<br>this one \\( x^2 + y^2 = r^2 \\).</p>","more":"<img class=\"centered\" src=\"https://www.mathjax.org/badge/mj-logo.svg\">\n\n<h3 id=\"What’s-MathJax\"><a href=\"#What’s-MathJax\" class=\"headerlink\" title=\"What’s MathJax?\"></a>What’s MathJax?</h3><p>If you check MathJax website <a href=\"http://www.mathjax.org/\" target=\"_blank\" rel=\"noopener\">(www.mathjax.org)</a> you’ll see<br>that it <em>is an open source JavaScript display engine for mathematics that works in all<br>browsers</em>.</p>\n<h3 id=\"How-to-implement-MathJax-with-Jekyll\"><a href=\"#How-to-implement-MathJax-with-Jekyll\" class=\"headerlink\" title=\"How to implement MathJax with Jekyll\"></a>How to implement MathJax with Jekyll</h3><p>I followed the instructions described by Dason Kurkiewicz for<br><a href=\"http://dasonk.github.io/blog/2012/10/09/Using-Jekyll-and-Mathjax/\" target=\"_blank\" rel=\"noopener\">using Jekyll and Mathjax</a>.</p>\n<p>Here are some important details. I had to modify the Ruby library for Markdown in<br>my <!--�0--></p>\n<p>To load the MathJax javascript, I added the following lines in my layout <!--�1--></p>\n<p>Of course you can choose a different file location in your jekyll layouts.</p>\n<h3 id=\"A-Couple-of-Examples\"><a href=\"#A-Couple-of-Examples\" class=\"headerlink\" title=\"A Couple of Examples\"></a>A Couple of Examples</h3><p>Here’s a short list of examples. To know more about the details behind MathJax, you can<br>always checked the provided documentation available at<br><a href=\"http://docs.mathjax.org/en/latest/\" target=\"_blank\" rel=\"noopener\">http://docs.mathjax.org/en/latest/</a></p>\n<p>I’m assuming you are familiar with LaTeX. However, you should know that MathJax does not<br>have the exactly same behavior as LaTeX. By default, the <strong>tex2jax</strong> preprocessor defines the<br>LaTeX math delimiters, which are <!--�2--></p>\n<p>To display inline math use <!--�3--></p>\n<!--�4-->\n\n<p>is displayed as</p>\n<p>\\[ \\mathbf{X} = \\mathbf{Z} \\mathbf{P^\\mathsf{T}} \\]</p>\n<p>If you want to use subscripts like this \\( \\mathbf{X}_{n,p} \\) you need to scape the<br>underscores with a backslash like so <!--�5--></p>\n<p>will be displayed as</p>\n<p>\\[ \\mathbf{X}_{n,p} = \\mathbf{A}_{n,k} \\mathbf{B}_{k,p} \\]</p>"},{"type":"photo","title":"gallery-post","date":"2014-11-18T00:00:00.000Z","photos":["http://ww1.sinaimg.cn/mw690/81b78497jw1emfgwkasznj21hc0u0qb7.jpg","http://ww3.sinaimg.cn/mw690/81b78497jw1emfgwjrh2pj21hc0u01g3.jpg","http://ww2.sinaimg.cn/mw690/81b78497jw1emfgwil5xkj21hc0u0tpm.jpg","http://ww3.sinaimg.cn/mw690/81b78497jw1emfgvcdn25j21hc0u0qpa.jpg"],"_content":"\n\nNunc dignissim volutpat enim, non sollicitudin purus dignissim id. Nam sit amet urna eu velit lacinia eleifend. Proin auctor rhoncus ligula nec aliquet. Donec sodales molestie lacinia. Curabitur dictum faucibus urna at convallis. Aliquam in lectus at urna rutrum porta. In lacus arcu, molestie ut vestibulum ut, rhoncus sed eros. Sed et elit vitae risus pretium consectetur vel in mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus turpis quis lectus rhoncus adipiscing. Proin pulvinar placerat suscipit. Maecenas imperdiet, quam vitae varius auctor, enim mauris vulputate sapien, nec laoreet neque diam non quam.\n\n<!-- more -->\n\n![Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)](http://ww1.sinaimg.cn/large/81b78497jw1emfgts2pt4j21hc0u0k1c.jpg)\n\nEtiam luctus mauris at mi sollicitudin quis malesuada nibh porttitor. Vestibulum non dapibus magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin feugiat hendrerit viverra. Phasellus sit amet nunc mauris, eu ultricies tellus. Sed a mi tortor, eleifend varius erat. Proin consectetur molestie tortor eu gravida. Cras placerat orci id arcu tristique ut rutrum justo pulvinar. Maecenas lacinia fringilla diam non bibendum. Aenean vel viverra turpis. Integer ut leo nisi. Pellentesque vehicula quam ut sapien convallis consequat. Aliquam ut arcu purus, eget tempor purus. Integer eu tellus quis erat tristique gravida eu vel lorem.\n","source":"_posts/2014-11-18-gallery-post.md","raw":"---\ntype: photo\ntitle: gallery-post\ndate: 2014-11-18 00:00:00 +0800\nphotos:\n- http://ww1.sinaimg.cn/mw690/81b78497jw1emfgwkasznj21hc0u0qb7.jpg\n- http://ww3.sinaimg.cn/mw690/81b78497jw1emfgwjrh2pj21hc0u01g3.jpg\n- http://ww2.sinaimg.cn/mw690/81b78497jw1emfgwil5xkj21hc0u0tpm.jpg\n- http://ww3.sinaimg.cn/mw690/81b78497jw1emfgvcdn25j21hc0u0qpa.jpg\ncategory: \n- [Gallery]\n- [模板]\ntags:\n- 示例\n---\n\n\nNunc dignissim volutpat enim, non sollicitudin purus dignissim id. Nam sit amet urna eu velit lacinia eleifend. Proin auctor rhoncus ligula nec aliquet. Donec sodales molestie lacinia. Curabitur dictum faucibus urna at convallis. Aliquam in lectus at urna rutrum porta. In lacus arcu, molestie ut vestibulum ut, rhoncus sed eros. Sed et elit vitae risus pretium consectetur vel in mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus turpis quis lectus rhoncus adipiscing. Proin pulvinar placerat suscipit. Maecenas imperdiet, quam vitae varius auctor, enim mauris vulputate sapien, nec laoreet neque diam non quam.\n\n<!-- more -->\n\n![Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)](http://ww1.sinaimg.cn/large/81b78497jw1emfgts2pt4j21hc0u0k1c.jpg)\n\nEtiam luctus mauris at mi sollicitudin quis malesuada nibh porttitor. Vestibulum non dapibus magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin feugiat hendrerit viverra. Phasellus sit amet nunc mauris, eu ultricies tellus. Sed a mi tortor, eleifend varius erat. Proin consectetur molestie tortor eu gravida. Cras placerat orci id arcu tristique ut rutrum justo pulvinar. Maecenas lacinia fringilla diam non bibendum. Aenean vel viverra turpis. Integer ut leo nisi. Pellentesque vehicula quam ut sapien convallis consequat. Aliquam ut arcu purus, eget tempor purus. Integer eu tellus quis erat tristique gravida eu vel lorem.\n","slug":"gallery-post","published":1,"updated":"2019-03-22T19:27:47.335Z","comments":1,"layout":"post","link":"","_id":"cjwj070c30004m8zaf09e2kee","content":"<p>Nunc dignissim volutpat enim, non sollicitudin purus dignissim id. Nam sit amet urna eu velit lacinia eleifend. Proin auctor rhoncus ligula nec aliquet. Donec sodales molestie lacinia. Curabitur dictum faucibus urna at convallis. Aliquam in lectus at urna rutrum porta. In lacus arcu, molestie ut vestibulum ut, rhoncus sed eros. Sed et elit vitae risus pretium consectetur vel in mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus turpis quis lectus rhoncus adipiscing. Proin pulvinar placerat suscipit. Maecenas imperdiet, quam vitae varius auctor, enim mauris vulputate sapien, nec laoreet neque diam non quam.</p>\n<a id=\"more\"></a>\n\n<p><img src=\"http://ww1.sinaimg.cn/large/81b78497jw1emfgts2pt4j21hc0u0k1c.jpg\" alt=\"Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)\"></p>\n<p>Etiam luctus mauris at mi sollicitudin quis malesuada nibh porttitor. Vestibulum non dapibus magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin feugiat hendrerit viverra. Phasellus sit amet nunc mauris, eu ultricies tellus. Sed a mi tortor, eleifend varius erat. Proin consectetur molestie tortor eu gravida. Cras placerat orci id arcu tristique ut rutrum justo pulvinar. Maecenas lacinia fringilla diam non bibendum. Aenean vel viverra turpis. Integer ut leo nisi. Pellentesque vehicula quam ut sapien convallis consequat. Aliquam ut arcu purus, eget tempor purus. Integer eu tellus quis erat tristique gravida eu vel lorem.</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>Nunc dignissim volutpat enim, non sollicitudin purus dignissim id. Nam sit amet urna eu velit lacinia eleifend. Proin auctor rhoncus ligula nec aliquet. Donec sodales molestie lacinia. Curabitur dictum faucibus urna at convallis. Aliquam in lectus at urna rutrum porta. In lacus arcu, molestie ut vestibulum ut, rhoncus sed eros. Sed et elit vitae risus pretium consectetur vel in mi. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tempus turpis quis lectus rhoncus adipiscing. Proin pulvinar placerat suscipit. Maecenas imperdiet, quam vitae varius auctor, enim mauris vulputate sapien, nec laoreet neque diam non quam.</p>","more":"<p><img src=\"http://ww1.sinaimg.cn/large/81b78497jw1emfgts2pt4j21hc0u0k1c.jpg\" alt=\"Wallbase - dgnfly (wallbase.cc/wallpaper/1384450)\"></p>\n<p>Etiam luctus mauris at mi sollicitudin quis malesuada nibh porttitor. Vestibulum non dapibus magna. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin feugiat hendrerit viverra. Phasellus sit amet nunc mauris, eu ultricies tellus. Sed a mi tortor, eleifend varius erat. Proin consectetur molestie tortor eu gravida. Cras placerat orci id arcu tristique ut rutrum justo pulvinar. Maecenas lacinia fringilla diam non bibendum. Aenean vel viverra turpis. Integer ut leo nisi. Pellentesque vehicula quam ut sapien convallis consequat. Aliquam ut arcu purus, eget tempor purus. Integer eu tellus quis erat tristique gravida eu vel lorem.</p>"},{"layout":"post","title":"Thank The Auther","date":"2018-01-04T05:00:00.000Z","description":"这篇文章用来对新主题的 markdown 样式做测试","_content":"\n\n向 NexT 的作者们致敬。<br>\n浏览该[主题](http://simpleyyt.com/jekyll-theme-next/),和[GitHub](https://github.com/simpleyyt/jekyll-theme-next)\n\n# GitHub Pages\n*章鱼猫* <br>\n**喜欢GitHub的画风**\n\n根据下图所描述的情形，我们可以想象：元旦的晚上，狗哥欢渡春宵彻夜不归。寝室只剩一半人口，闪闪的彩灯让人倍感寂寞。我（中间最帅的那位）拉开正在搞基的两人（两边），拍下了这副**鄙视图**。注：他们俩在鄙视我\n![I and My friends](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg)\n\n下边的几种语言，你喜欢哪个？\n+ [Java](https://www.imooc.com/course/list?c=java)\n+ [Python](https://www.imooc.com/course/list?c=python)\n+ [jQuery](https://www.imooc.com/course/list?c=jquery)\n\n### 代码块测试\n\n这里的一行代码可以做内联代码 `print \"Hello World!\"`\n\n#### 普通代码块\n\n#### 高亮代码块\n\n``` ruby\ndef foo\n  puts 'foo'\nend\n```\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\n\n\ndef download(url, proxy=None, num_retries=2):\n\theaders = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n\tprint (\"Downloading: \"+url+\"...\")\n\trequest = ulb.Request(url=url, headers=headers)\n\ttime.sleep(1)\n\ttry:\n\t\thtml = ulb.urlopen(request).read()\n\texcept ulb.URLError as e:\n\t\tprint (\"Download Error: \" + str(e.reason))\n\t\thtml = None\n\t\tif num_retries > 0:\n\t\t\tif hasattr(e, 'code') and 500 <= e.code < 600:\n\t\t\t\treturn download(url, num_retries-1)\n\treturn html\n```\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\n\n\ndef download(url, proxy=None, num_retries=2):\n\theaders = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n\tprint (\"Downloading: \"+url+\"...\")\n\trequest = ulb.Request(url=url, headers=headers)\n\ttime.sleep(1)\n\ttry:\n\t\thtml = ulb.urlopen(request).read()\n\texcept ulb.URLError as e:\n\t\tprint (\"Download Error: \" + str(e.reason))\n\t\thtml = None\n\t\tif num_retries > 0:\n\t\t\tif hasattr(e, 'code') and 500 <= e.code < 600:\n\t\t\t\treturn download(url, num_retries-1)\n\treturn html\n```\n\n#### Gist\n\n{% gist 996818 %}\n\n\n飞鸟集\n\n>她的热切的脸，如夜雨似的，搅扰着我的梦魂。\n>>Her wiseful face hunts my dreams like the rain at night.\n\n","source":"_posts/2018-01-04-thank-the-auther.md","raw":"---\nlayout: post\ntitle: Thank The Auther\ndate: 2018-01-04 00:00:00 +0300\ndescription: 这篇文章用来对新主题的 markdown 样式做测试\ncategories: \n- Github Pages\n---\n\n\n向 NexT 的作者们致敬。<br>\n浏览该[主题](http://simpleyyt.com/jekyll-theme-next/),和[GitHub](https://github.com/simpleyyt/jekyll-theme-next)\n\n# GitHub Pages\n*章鱼猫* <br>\n**喜欢GitHub的画风**\n\n根据下图所描述的情形，我们可以想象：元旦的晚上，狗哥欢渡春宵彻夜不归。寝室只剩一半人口，闪闪的彩灯让人倍感寂寞。我（中间最帅的那位）拉开正在搞基的两人（两边），拍下了这副**鄙视图**。注：他们俩在鄙视我\n![I and My friends](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg)\n\n下边的几种语言，你喜欢哪个？\n+ [Java](https://www.imooc.com/course/list?c=java)\n+ [Python](https://www.imooc.com/course/list?c=python)\n+ [jQuery](https://www.imooc.com/course/list?c=jquery)\n\n### 代码块测试\n\n这里的一行代码可以做内联代码 `print \"Hello World!\"`\n\n#### 普通代码块\n\n#### 高亮代码块\n\n``` ruby\ndef foo\n  puts 'foo'\nend\n```\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\n\n\ndef download(url, proxy=None, num_retries=2):\n\theaders = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n\tprint (\"Downloading: \"+url+\"...\")\n\trequest = ulb.Request(url=url, headers=headers)\n\ttime.sleep(1)\n\ttry:\n\t\thtml = ulb.urlopen(request).read()\n\texcept ulb.URLError as e:\n\t\tprint (\"Download Error: \" + str(e.reason))\n\t\thtml = None\n\t\tif num_retries > 0:\n\t\t\tif hasattr(e, 'code') and 500 <= e.code < 600:\n\t\t\t\treturn download(url, num_retries-1)\n\treturn html\n```\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\n\n\ndef download(url, proxy=None, num_retries=2):\n\theaders = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n\tprint (\"Downloading: \"+url+\"...\")\n\trequest = ulb.Request(url=url, headers=headers)\n\ttime.sleep(1)\n\ttry:\n\t\thtml = ulb.urlopen(request).read()\n\texcept ulb.URLError as e:\n\t\tprint (\"Download Error: \" + str(e.reason))\n\t\thtml = None\n\t\tif num_retries > 0:\n\t\t\tif hasattr(e, 'code') and 500 <= e.code < 600:\n\t\t\t\treturn download(url, num_retries-1)\n\treturn html\n```\n\n#### Gist\n\n{% gist 996818 %}\n\n\n飞鸟集\n\n>她的热切的脸，如夜雨似的，搅扰着我的梦魂。\n>>Her wiseful face hunts my dreams like the rain at night.\n\n","slug":"thank-the-auther","published":1,"updated":"2019-03-04T13:08:39.535Z","comments":1,"photos":[],"link":"","_id":"cjwj070c50005m8zafbz15i8e","content":"<p>向 NexT 的作者们致敬。<br><br>浏览该<a href=\"http://simpleyyt.com/jekyll-theme-next/\" target=\"_blank\" rel=\"noopener\">主题</a>,和<a href=\"https://github.com/simpleyyt/jekyll-theme-next\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h1 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h1><p><em>章鱼猫</em> <br><br><strong>喜欢GitHub的画风</strong></p>\n<p>根据下图所描述的情形，我们可以想象：元旦的晚上，狗哥欢渡春宵彻夜不归。寝室只剩一半人口，闪闪的彩灯让人倍感寂寞。我（中间最帅的那位）拉开正在搞基的两人（两边），拍下了这副<strong>鄙视图</strong>。注：他们俩在鄙视我<br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg\" alt=\"I and My friends\"></p>\n<p>下边的几种语言，你喜欢哪个？</p>\n<ul>\n<li><a href=\"https://www.imooc.com/course/list?c=java\" target=\"_blank\" rel=\"noopener\">Java</a></li>\n<li><a href=\"https://www.imooc.com/course/list?c=python\" target=\"_blank\" rel=\"noopener\">Python</a></li>\n<li><a href=\"https://www.imooc.com/course/list?c=jquery\" target=\"_blank\" rel=\"noopener\">jQuery</a></li>\n</ul>\n<h3 id=\"代码块测试\"><a href=\"#代码块测试\" class=\"headerlink\" title=\"代码块测试\"></a>代码块测试</h3><p>这里的一行代码可以做内联代码 <code>print &quot;Hello World!&quot;</code></p>\n<h4 id=\"普通代码块\"><a href=\"#普通代码块\" class=\"headerlink\" title=\"普通代码块\"></a>普通代码块</h4><h4 id=\"高亮代码块\"><a href=\"#高亮代码块\" class=\"headerlink\" title=\"高亮代码块\"></a>高亮代码块</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span></span></span><br><span class=\"line\">  puts <span class=\"string\">'foo'</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*- </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> ulb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">\theaders = &#123;<span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span>+url+<span class=\"string\">\"...\"</span>)</span><br><span class=\"line\">\trequest = ulb.Request(url=url, headers=headers)</span><br><span class=\"line\">\ttime.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\thtml = ulb.urlopen(request).read()</span><br><span class=\"line\">\t<span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error: \"</span> + str(e.reason))</span><br><span class=\"line\">\t\thtml = <span class=\"literal\">None</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> download(url, num_retries<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> html</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*- </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> ulb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">\theaders = &#123;<span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'</span>&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span>+url+<span class=\"string\">\"...\"</span>)</span><br><span class=\"line\">\trequest = ulb.Request(url=url, headers=headers)</span><br><span class=\"line\">\ttime.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\thtml = ulb.urlopen(request).read()</span><br><span class=\"line\">\t<span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error: \"</span> + str(e.reason))</span><br><span class=\"line\">\t\thtml = <span class=\"literal\">None</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> download(url, num_retries<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> html</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h4><script src=\"//gist.github.com/996818.js\"></script>\n\n\n<p>飞鸟集</p>\n<blockquote>\n<p>她的热切的脸，如夜雨似的，搅扰着我的梦魂。</p>\n<blockquote>\n<p>Her wiseful face hunts my dreams like the rain at night.</p>\n</blockquote>\n</blockquote>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":"<p>向 NexT 的作者们致敬。<br><br>浏览该<a href=\"http://simpleyyt.com/jekyll-theme-next/\" target=\"_blank\" rel=\"noopener\">主题</a>,和<a href=\"https://github.com/simpleyyt/jekyll-theme-next\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h1 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h1><p><em>章鱼猫</em> <br><br><strong>喜欢GitHub的画风</strong></p>\n<p>根据下图所描述的情形，我们可以想象：元旦的晚上，狗哥欢渡春宵彻夜不归。寝室只剩一半人口，闪闪的彩灯让人倍感寂寞。我（中间最帅的那位）拉开正在搞基的两人（两边），拍下了这副<strong>鄙视图</strong>。注：他们俩在鄙视我<br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg\" alt=\"I and My friends\"></p>\n<p>下边的几种语言，你喜欢哪个？</p>\n<ul>\n<li><a href=\"https://www.imooc.com/course/list?c=java\" target=\"_blank\" rel=\"noopener\">Java</a></li>\n<li><a href=\"https://www.imooc.com/course/list?c=python\" target=\"_blank\" rel=\"noopener\">Python</a></li>\n<li><a href=\"https://www.imooc.com/course/list?c=jquery\" target=\"_blank\" rel=\"noopener\">jQuery</a></li>\n</ul>\n<h3 id=\"代码块测试\"><a href=\"#代码块测试\" class=\"headerlink\" title=\"代码块测试\"></a>代码块测试</h3><p>这里的一行代码可以做内联代码 <code>print &quot;Hello World!&quot;</code></p>\n<h4 id=\"普通代码块\"><a href=\"#普通代码块\" class=\"headerlink\" title=\"普通代码块\"></a>普通代码块</h4><h4 id=\"高亮代码块\"><a href=\"#高亮代码块\" class=\"headerlink\" title=\"高亮代码块\"></a>高亮代码块</h4><!--�6-->\n\n<!--�7-->\n\n<!--�8-->\n\n<h4 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h4><script src=\"//gist.github.com/996818.js\"></script>\n\n\n<p>飞鸟集</p>\n<blockquote>\n<p>她的热切的脸，如夜雨似的，搅扰着我的梦魂。</p>\n<blockquote>\n<p>Her wiseful face hunts my dreams like the rain at night.</p>\n</blockquote>\n</blockquote>\n"},{"layout":"post","title":"MySQL 进阶","date":"2018-01-05T00:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tMy day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.\n\t日间的工作完了，于是我像一只托在海滩上的小船，静静地听着晚潮跳舞的乐声。\n{% endblockquote %}\n\n<!-- more -->\n\n## 基础语法\n\n#### 简介\n\n数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，是一款高效存储数据和提供分析计算功能的软件。它描述的是数据和信息之间的关系。<br>\n众所周知，MySQL 为*关系型数据库*(Relational Database Management System)，这种数据库存储数据的模型称为“关系模型”，这种关系模型将生活中的每种数据抽象成一个表。\n\n  表       | table  是关系型数据库中基本存储单位 \n  表里有行 | row \n  表里有列 | column \n\nMySQL所使用的 SQL（结构化查询语言）语言是用于访问数据库的最常用标准化语言。主要分为四类：\n\n分类 |   说明   | 关键字\n---- | -------- | ------\n DDL | 定义语言 | creat\n DML | 操作语言 | insert、delete、update\n DCL | 控制语言 | grant、remove\n DQL | 查询语言 | select\n\n#### 登陆数据库 \n\nmysql [-D 所选择的数据库名] -h 主机名 -u 用户名 -p，括号中内容可选。\n\n#### PROMPT 提示符的修改\n\n\\D | 完整的日期\n\\d | 当前数据库\n\\h | 服务器名称\n\\u | 当前用户\n\n#### 数据库操作\n\ncreate database name | 创建数据库\nshow databases       | 查看所有数据库\ndrop database name   | 删除某数据库\nuse xxx              | 在下文使用某数据库\ntruncate 表明        | 清空表中的记录\n\n#### 表操作\n\ncreate table 表名 (列名 数据类型 约束, 列名1···, ···约束) | 创建表，表名一般是以tb_ 开头 \ndrop table  表名  | 删除表\nalter table  表名 | 添加列\nadd/drop  column  | 添加/删除行\n\n####约束\n\nnot null      | 非空约束\nunique        | 唯一约束\nprimary key   | 主键约束\nforeigner key | 外键约束\nchecked       | 检查约束   \n\n#### 增删查改（CRUD）\n\n插入数据 | insert into 表名 (列名1,列名2,...) values (值1,值2,...); <br>insert into 表名 values (值1,值2,...,值N); <br>insert into 表名 xxx values (),(),();\n修改数据 | update 表名 set 列名 = 列值 ,列名1=列值1,...;\n删除数据 | delete from 表名 where;\n\n``` sql\n-- 基本查询语法\nselect * from tableName --\n-- where 子句功能是增加选择条件  \nselect 列名1,... from tb_name where 条件 \n/*where 的条件{\n  > < >= <= = != <> \n  is null is not null\n  between and \n  in (1,2,3,4)\n  not in (1,2)\n  并且 and 或者 or}*/\n```\n\n## 高级查询\n\n#### 模糊查询\n\nselect \\* from tb_name where usr_name like '条件' \n\n%     | 表示任意0个或多个字符。可匹配任意类型和长度的字符 <br> select \\* from tb_name where usr_name like 'A%' 会找出所有名字以‘A'开头的记录，可使用‘and’增加条件\n_     | 表示任意单个字符，常用来限制表达式的字符长度语句 <br> select \\* from tb_name where usr_name like '_b' 会找出所有名字第二位是‘b’的记录\n[]    | 表示括号内所列字符中的一个 <br> select \\* from tb_name where usr_name like '_[a-c]' 会找出所有名字第二位为‘a、b、c’的记录\n[^]   | 表示不在括号所列之内的单个字符 <br> select \\* from tb_name where usr_name like '_[a-c]' 会找出所有名字第二位为不是‘a、b、c’的记录\n\n#### 分组查询\n\n语法：“*group by 要分组的列*，”列可以选择多个。一般都和聚合函数搭配使用，而聚合函数可以单独使用。<br>\n*聚合函数：* avg()、sum()、max()、min()、count()、group_concat()、select avg(sal)、depto from 表名 group by 列名 <br>\n注意：查询结果里只能出现被分组的列和聚合的列\n\n#### 排序\n\n在查询语句后加 *order by 要排序的列 desc(或asc)，*其中 desc 为降序，asc 为升序。\n\n#### 分页\n\nlimit m,n  限制，\nm=(页码-1)\\*n，\ntopN 问题：先排序，再分页\n\n#### 去重查询\n关键字：*distinct，*去掉重复记录，在select后使用即可。\n\n#### 子查询\n\n子查询就是在查询里写查询，一般用于解决一步不能查询求解的问题。其用法非常灵活，几乎可以写在查询的任何位置。<br>\n语法：<br>\n1. 子查询可以写在select后，作为查询结果\n2. 子查询可以写在 from 后，作为查询源\n3. 子查询可以写在 where 后，作为查询条件\n4. 子查询可以使用主查询的资源，子查询要加括号包裹使用\n5. 当子查询作为数据源在 from 后时，要起别名\n6. 子查询还可以用在 update、insert、delete 里\n7. **having** 限制条件和 where 的功能一样但是having是可以先分组再过滤，但where是先过滤再分组\n\n#### 表连接\n\n表连接的作用是将多个表放在一起查询，解决一个表的数据不满足查询需求的问题。<br>\n语法：*from a, b* <br>\n需要注意的是，表连接会产生笛卡尔积，使用的时候一定要使用条件加以限制。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-01-05-database-MySQL.md","raw":"---\nlayout: post\ntitle: MySQL 进阶\ndate: 2018-01-05 00:00:00 +0800\ncategories: \n- MySQL\ntags: \n- 数据库\n- MySQL\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tMy day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.\n\t日间的工作完了，于是我像一只托在海滩上的小船，静静地听着晚潮跳舞的乐声。\n{% endblockquote %}\n\n<!-- more -->\n\n## 基础语法\n\n#### 简介\n\n数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，是一款高效存储数据和提供分析计算功能的软件。它描述的是数据和信息之间的关系。<br>\n众所周知，MySQL 为*关系型数据库*(Relational Database Management System)，这种数据库存储数据的模型称为“关系模型”，这种关系模型将生活中的每种数据抽象成一个表。\n\n  表       | table  是关系型数据库中基本存储单位 \n  表里有行 | row \n  表里有列 | column \n\nMySQL所使用的 SQL（结构化查询语言）语言是用于访问数据库的最常用标准化语言。主要分为四类：\n\n分类 |   说明   | 关键字\n---- | -------- | ------\n DDL | 定义语言 | creat\n DML | 操作语言 | insert、delete、update\n DCL | 控制语言 | grant、remove\n DQL | 查询语言 | select\n\n#### 登陆数据库 \n\nmysql [-D 所选择的数据库名] -h 主机名 -u 用户名 -p，括号中内容可选。\n\n#### PROMPT 提示符的修改\n\n\\D | 完整的日期\n\\d | 当前数据库\n\\h | 服务器名称\n\\u | 当前用户\n\n#### 数据库操作\n\ncreate database name | 创建数据库\nshow databases       | 查看所有数据库\ndrop database name   | 删除某数据库\nuse xxx              | 在下文使用某数据库\ntruncate 表明        | 清空表中的记录\n\n#### 表操作\n\ncreate table 表名 (列名 数据类型 约束, 列名1···, ···约束) | 创建表，表名一般是以tb_ 开头 \ndrop table  表名  | 删除表\nalter table  表名 | 添加列\nadd/drop  column  | 添加/删除行\n\n####约束\n\nnot null      | 非空约束\nunique        | 唯一约束\nprimary key   | 主键约束\nforeigner key | 外键约束\nchecked       | 检查约束   \n\n#### 增删查改（CRUD）\n\n插入数据 | insert into 表名 (列名1,列名2,...) values (值1,值2,...); <br>insert into 表名 values (值1,值2,...,值N); <br>insert into 表名 xxx values (),(),();\n修改数据 | update 表名 set 列名 = 列值 ,列名1=列值1,...;\n删除数据 | delete from 表名 where;\n\n``` sql\n-- 基本查询语法\nselect * from tableName --\n-- where 子句功能是增加选择条件  \nselect 列名1,... from tb_name where 条件 \n/*where 的条件{\n  > < >= <= = != <> \n  is null is not null\n  between and \n  in (1,2,3,4)\n  not in (1,2)\n  并且 and 或者 or}*/\n```\n\n## 高级查询\n\n#### 模糊查询\n\nselect \\* from tb_name where usr_name like '条件' \n\n%     | 表示任意0个或多个字符。可匹配任意类型和长度的字符 <br> select \\* from tb_name where usr_name like 'A%' 会找出所有名字以‘A'开头的记录，可使用‘and’增加条件\n_     | 表示任意单个字符，常用来限制表达式的字符长度语句 <br> select \\* from tb_name where usr_name like '_b' 会找出所有名字第二位是‘b’的记录\n[]    | 表示括号内所列字符中的一个 <br> select \\* from tb_name where usr_name like '_[a-c]' 会找出所有名字第二位为‘a、b、c’的记录\n[^]   | 表示不在括号所列之内的单个字符 <br> select \\* from tb_name where usr_name like '_[a-c]' 会找出所有名字第二位为不是‘a、b、c’的记录\n\n#### 分组查询\n\n语法：“*group by 要分组的列*，”列可以选择多个。一般都和聚合函数搭配使用，而聚合函数可以单独使用。<br>\n*聚合函数：* avg()、sum()、max()、min()、count()、group_concat()、select avg(sal)、depto from 表名 group by 列名 <br>\n注意：查询结果里只能出现被分组的列和聚合的列\n\n#### 排序\n\n在查询语句后加 *order by 要排序的列 desc(或asc)，*其中 desc 为降序，asc 为升序。\n\n#### 分页\n\nlimit m,n  限制，\nm=(页码-1)\\*n，\ntopN 问题：先排序，再分页\n\n#### 去重查询\n关键字：*distinct，*去掉重复记录，在select后使用即可。\n\n#### 子查询\n\n子查询就是在查询里写查询，一般用于解决一步不能查询求解的问题。其用法非常灵活，几乎可以写在查询的任何位置。<br>\n语法：<br>\n1. 子查询可以写在select后，作为查询结果\n2. 子查询可以写在 from 后，作为查询源\n3. 子查询可以写在 where 后，作为查询条件\n4. 子查询可以使用主查询的资源，子查询要加括号包裹使用\n5. 当子查询作为数据源在 from 后时，要起别名\n6. 子查询还可以用在 update、insert、delete 里\n7. **having** 限制条件和 where 的功能一样但是having是可以先分组再过滤，但where是先过滤再分组\n\n#### 表连接\n\n表连接的作用是将多个表放在一起查询，解决一个表的数据不满足查询需求的问题。<br>\n语法：*from a, b* <br>\n需要注意的是，表连接会产生笛卡尔积，使用的时候一定要使用条件加以限制。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"database-MySQL","published":1,"updated":"2019-03-04T13:15:44.209Z","comments":1,"photos":[],"link":"","_id":"cjwj070c60006m8zas82r7w7c","content":"<blockquote><p>My day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.<br>日间的工作完了，于是我像一只托在海滩上的小船，静静地听着晚潮跳舞的乐声。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，是一款高效存储数据和提供分析计算功能的软件。它描述的是数据和信息之间的关系。<br><br>众所周知，MySQL 为<em>关系型数据库</em>(Relational Database Management System)，这种数据库存储数据的模型称为“关系模型”，这种关系模型将生活中的每种数据抽象成一个表。</p>\n<p>  表       | table  是关系型数据库中基本存储单位<br>  表里有行 | row<br>  表里有列 | column </p>\n<p>MySQL所使用的 SQL（结构化查询语言）语言是用于访问数据库的最常用标准化语言。主要分为四类：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>说明</th>\n<th>关键字</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DDL</td>\n<td>定义语言</td>\n<td>creat</td>\n</tr>\n<tr>\n<td>DML</td>\n<td>操作语言</td>\n<td>insert、delete、update</td>\n</tr>\n<tr>\n<td>DCL</td>\n<td>控制语言</td>\n<td>grant、remove</td>\n</tr>\n<tr>\n<td>DQL</td>\n<td>查询语言</td>\n<td>select</td>\n</tr>\n</tbody></table>\n<h4 id=\"登陆数据库\"><a href=\"#登陆数据库\" class=\"headerlink\" title=\"登陆数据库\"></a>登陆数据库</h4><p>mysql [-D 所选择的数据库名] -h 主机名 -u 用户名 -p，括号中内容可选。</p>\n<h4 id=\"PROMPT-提示符的修改\"><a href=\"#PROMPT-提示符的修改\" class=\"headerlink\" title=\"PROMPT 提示符的修改\"></a>PROMPT 提示符的修改</h4><p>\\D | 完整的日期<br>\\d | 当前数据库<br>\\h | 服务器名称<br>\\u | 当前用户</p>\n<h4 id=\"数据库操作\"><a href=\"#数据库操作\" class=\"headerlink\" title=\"数据库操作\"></a>数据库操作</h4><p>create database name | 创建数据库<br>show databases       | 查看所有数据库<br>drop database name   | 删除某数据库<br>use xxx              | 在下文使用某数据库<br>truncate 表明        | 清空表中的记录</p>\n<h4 id=\"表操作\"><a href=\"#表操作\" class=\"headerlink\" title=\"表操作\"></a>表操作</h4><p>create table 表名 (列名 数据类型 约束, 列名1···, ···约束) | 创建表，表名一般是以tb_ 开头<br>drop table  表名  | 删除表<br>alter table  表名 | 添加列<br>add/drop  column  | 添加/删除行</p>\n<p>####约束</p>\n<p>not null      | 非空约束<br>unique        | 唯一约束<br>primary key   | 主键约束<br>foreigner key | 外键约束<br>checked       | 检查约束   </p>\n<h4 id=\"增删查改（CRUD）\"><a href=\"#增删查改（CRUD）\" class=\"headerlink\" title=\"增删查改（CRUD）\"></a>增删查改（CRUD）</h4><p>插入数据 | insert into 表名 (列名1,列名2,…) values (值1,值2,…); <br>insert into 表名 values (值1,值2,…,值N); <br>insert into 表名 xxx values (),(),();<br>修改数据 | update 表名 set 列名 = 列值 ,列名1=列值1,…;<br>删除数据 | delete from 表名 where;</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 基本查询语法</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> tableName <span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- where 子句功能是增加选择条件  </span></span><br><span class=\"line\"><span class=\"keyword\">select</span> 列名<span class=\"number\">1</span>,... <span class=\"keyword\">from</span> tb_name <span class=\"keyword\">where</span> 条件 </span><br><span class=\"line\"><span class=\"comment\">/*where 的条件&#123;</span></span><br><span class=\"line\"><span class=\"comment\">  &gt; &lt; &gt;= &lt;= = != &lt;&gt; </span></span><br><span class=\"line\"><span class=\"comment\">  is null is not null</span></span><br><span class=\"line\"><span class=\"comment\">  between and </span></span><br><span class=\"line\"><span class=\"comment\">  in (1,2,3,4)</span></span><br><span class=\"line\"><span class=\"comment\">  not in (1,2)</span></span><br><span class=\"line\"><span class=\"comment\">  并且 and 或者 or&#125;*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级查询\"><a href=\"#高级查询\" class=\"headerlink\" title=\"高级查询\"></a>高级查询</h2><h4 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h4><p>select * from tb_name where usr_name like ‘条件’ </p>\n<p>%     | 表示任意0个或多个字符。可匹配任意类型和长度的字符 <br> select * from tb_name where usr_name like ‘A%’ 会找出所有名字以‘A’开头的记录，可使用‘and’增加条件<br>_     | 表示任意单个字符，常用来限制表达式的字符长度语句 <br> select * from tb_name where usr_name like ‘<em>b’ 会找出所有名字第二位是‘b’的记录<br>[]    | 表示括号内所列字符中的一个 <br> select * from tb_name where usr_name like ‘</em>[a-c]’ 会找出所有名字第二位为‘a、b、c’的记录<br>[^]   | 表示不在括号所列之内的单个字符 <br> select * from tb_name where usr_name like ‘_[a-c]’ 会找出所有名字第二位为不是‘a、b、c’的记录</p>\n<h4 id=\"分组查询\"><a href=\"#分组查询\" class=\"headerlink\" title=\"分组查询\"></a>分组查询</h4><p>语法：“<em>group by 要分组的列</em>，”列可以选择多个。一般都和聚合函数搭配使用，而聚合函数可以单独使用。<br><br><em>聚合函数：</em> avg()、sum()、max()、min()、count()、group_concat()、select avg(sal)、depto from 表名 group by 列名 <br><br>注意：查询结果里只能出现被分组的列和聚合的列</p>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><p>在查询语句后加 <em>order by 要排序的列 desc(或asc)，</em>其中 desc 为降序，asc 为升序。</p>\n<h4 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h4><p>limit m,n  限制，<br>m=(页码-1)*n，<br>topN 问题：先排序，再分页</p>\n<h4 id=\"去重查询\"><a href=\"#去重查询\" class=\"headerlink\" title=\"去重查询\"></a>去重查询</h4><p>关键字：<em>distinct，</em>去掉重复记录，在select后使用即可。</p>\n<h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4><p>子查询就是在查询里写查询，一般用于解决一步不能查询求解的问题。其用法非常灵活，几乎可以写在查询的任何位置。<br><br>语法：<br></p>\n<ol>\n<li>子查询可以写在select后，作为查询结果</li>\n<li>子查询可以写在 from 后，作为查询源</li>\n<li>子查询可以写在 where 后，作为查询条件</li>\n<li>子查询可以使用主查询的资源，子查询要加括号包裹使用</li>\n<li>当子查询作为数据源在 from 后时，要起别名</li>\n<li>子查询还可以用在 update、insert、delete 里</li>\n<li><strong>having</strong> 限制条件和 where 的功能一样但是having是可以先分组再过滤，但where是先过滤再分组</li>\n</ol>\n<h4 id=\"表连接\"><a href=\"#表连接\" class=\"headerlink\" title=\"表连接\"></a>表连接</h4><p>表连接的作用是将多个表放在一起查询，解决一个表的数据不满足查询需求的问题。<br><br>语法：<em>from a, b</em> <br><br>需要注意的是，表连接会产生笛卡尔积，使用的时候一定要使用条件加以限制。</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>My day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.<br>日间的工作完了，于是我像一只托在海滩上的小船，静静地听着晚潮跳舞的乐声。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，是一款高效存储数据和提供分析计算功能的软件。它描述的是数据和信息之间的关系。<br><br>众所周知，MySQL 为<em>关系型数据库</em>(Relational Database Management System)，这种数据库存储数据的模型称为“关系模型”，这种关系模型将生活中的每种数据抽象成一个表。</p>\n<p>  表       | table  是关系型数据库中基本存储单位<br>  表里有行 | row<br>  表里有列 | column </p>\n<p>MySQL所使用的 SQL（结构化查询语言）语言是用于访问数据库的最常用标准化语言。主要分为四类：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>说明</th>\n<th>关键字</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DDL</td>\n<td>定义语言</td>\n<td>creat</td>\n</tr>\n<tr>\n<td>DML</td>\n<td>操作语言</td>\n<td>insert、delete、update</td>\n</tr>\n<tr>\n<td>DCL</td>\n<td>控制语言</td>\n<td>grant、remove</td>\n</tr>\n<tr>\n<td>DQL</td>\n<td>查询语言</td>\n<td>select</td>\n</tr>\n</tbody></table>\n<h4 id=\"登陆数据库\"><a href=\"#登陆数据库\" class=\"headerlink\" title=\"登陆数据库\"></a>登陆数据库</h4><p>mysql [-D 所选择的数据库名] -h 主机名 -u 用户名 -p，括号中内容可选。</p>\n<h4 id=\"PROMPT-提示符的修改\"><a href=\"#PROMPT-提示符的修改\" class=\"headerlink\" title=\"PROMPT 提示符的修改\"></a>PROMPT 提示符的修改</h4><p>\\D | 完整的日期<br>\\d | 当前数据库<br>\\h | 服务器名称<br>\\u | 当前用户</p>\n<h4 id=\"数据库操作\"><a href=\"#数据库操作\" class=\"headerlink\" title=\"数据库操作\"></a>数据库操作</h4><p>create database name | 创建数据库<br>show databases       | 查看所有数据库<br>drop database name   | 删除某数据库<br>use xxx              | 在下文使用某数据库<br>truncate 表明        | 清空表中的记录</p>\n<h4 id=\"表操作\"><a href=\"#表操作\" class=\"headerlink\" title=\"表操作\"></a>表操作</h4><p>create table 表名 (列名 数据类型 约束, 列名1···, ···约束) | 创建表，表名一般是以tb_ 开头<br>drop table  表名  | 删除表<br>alter table  表名 | 添加列<br>add/drop  column  | 添加/删除行</p>\n<p>####约束</p>\n<p>not null      | 非空约束<br>unique        | 唯一约束<br>primary key   | 主键约束<br>foreigner key | 外键约束<br>checked       | 检查约束   </p>\n<h4 id=\"增删查改（CRUD）\"><a href=\"#增删查改（CRUD）\" class=\"headerlink\" title=\"增删查改（CRUD）\"></a>增删查改（CRUD）</h4><p>插入数据 | insert into 表名 (列名1,列名2,…) values (值1,值2,…); <br>insert into 表名 values (值1,值2,…,值N); <br>insert into 表名 xxx values (),(),();<br>修改数据 | update 表名 set 列名 = 列值 ,列名1=列值1,…;<br>删除数据 | delete from 表名 where;</p>\n<!--�9-->\n\n<h2 id=\"高级查询\"><a href=\"#高级查询\" class=\"headerlink\" title=\"高级查询\"></a>高级查询</h2><h4 id=\"模糊查询\"><a href=\"#模糊查询\" class=\"headerlink\" title=\"模糊查询\"></a>模糊查询</h4><p>select * from tb_name where usr_name like ‘条件’ </p>\n<p>%     | 表示任意0个或多个字符。可匹配任意类型和长度的字符 <br> select * from tb_name where usr_name like ‘A%’ 会找出所有名字以‘A’开头的记录，可使用‘and’增加条件<br>_     | 表示任意单个字符，常用来限制表达式的字符长度语句 <br> select * from tb_name where usr_name like ‘<em>b’ 会找出所有名字第二位是‘b’的记录<br>[]    | 表示括号内所列字符中的一个 <br> select * from tb_name where usr_name like ‘</em>[a-c]’ 会找出所有名字第二位为‘a、b、c’的记录<br>[^]   | 表示不在括号所列之内的单个字符 <br> select * from tb_name where usr_name like ‘_[a-c]’ 会找出所有名字第二位为不是‘a、b、c’的记录</p>\n<h4 id=\"分组查询\"><a href=\"#分组查询\" class=\"headerlink\" title=\"分组查询\"></a>分组查询</h4><p>语法：“<em>group by 要分组的列</em>，”列可以选择多个。一般都和聚合函数搭配使用，而聚合函数可以单独使用。<br><br><em>聚合函数：</em> avg()、sum()、max()、min()、count()、group_concat()、select avg(sal)、depto from 表名 group by 列名 <br><br>注意：查询结果里只能出现被分组的列和聚合的列</p>\n<h4 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h4><p>在查询语句后加 <em>order by 要排序的列 desc(或asc)，</em>其中 desc 为降序，asc 为升序。</p>\n<h4 id=\"分页\"><a href=\"#分页\" class=\"headerlink\" title=\"分页\"></a>分页</h4><p>limit m,n  限制，<br>m=(页码-1)*n，<br>topN 问题：先排序，再分页</p>\n<h4 id=\"去重查询\"><a href=\"#去重查询\" class=\"headerlink\" title=\"去重查询\"></a>去重查询</h4><p>关键字：<em>distinct，</em>去掉重复记录，在select后使用即可。</p>\n<h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4><p>子查询就是在查询里写查询，一般用于解决一步不能查询求解的问题。其用法非常灵活，几乎可以写在查询的任何位置。<br><br>语法：<br></p>\n<ol>\n<li>子查询可以写在select后，作为查询结果</li>\n<li>子查询可以写在 from 后，作为查询源</li>\n<li>子查询可以写在 where 后，作为查询条件</li>\n<li>子查询可以使用主查询的资源，子查询要加括号包裹使用</li>\n<li>当子查询作为数据源在 from 后时，要起别名</li>\n<li>子查询还可以用在 update、insert、delete 里</li>\n<li><strong>having</strong> 限制条件和 where 的功能一样但是having是可以先分组再过滤，但where是先过滤再分组</li>\n</ol>\n<h4 id=\"表连接\"><a href=\"#表连接\" class=\"headerlink\" title=\"表连接\"></a>表连接</h4><p>表连接的作用是将多个表放在一起查询，解决一个表的数据不满足查询需求的问题。<br><br>语法：<em>from a, b</em> <br><br>需要注意的是，表连接会产生笛卡尔积，使用的时候一定要使用条件加以限制。</p>"},{"layout":"post","title":"Shell 编程基础","date":"2018-01-06T05:00:00.000Z","_content":"\n\n{% blockquote 威廉·莎士比亚 %}\nThe time of life is short; to spend that shortness basely, it would be too long. \n\t人生短暂，若虚度年华，则短暂的人生就太长了。\n{% endblockquote %}\n\n<!-- more -->\n\n### Shell 介绍\n\nShell本身是一种用C语言编写的程序，从用户的角度来看，Shell是用户与Linux操作系统沟通的桥梁。用户既可以输入命令执行，又可以利用 Shell脚本编程，完成更加复杂的操作。在Linux GUI日益完善的今天，在系统管理等领域，Shell编程仍然起着不可忽视的作用。深入地了解和熟练地掌握Shell编程，是每一个Linux用户的必修课。\n<br>Linux的Shell种类众多，常见的有：Bourne Shell（/usr/bin/sh或/bin/sh）、Bourne Again Shell--Bash（/bin/bash）、C Shell（/usr/bin/csh）等等。每种Shell都有其特点，基本上，掌握其中一种就足够了。\n在本文中，我们使用的Shell版本是Bash，由于易用和免费，Bash在日常工作中被广泛使用；同时，Bash也是大多数Linux系统默认的Shell。\n\n### Shell 基本格式\n\n利用vi/vim等文本编辑器编写 Shell 脚本的固定格式如下：<br>\n\n``` shell\n#!/bin/sh\n#comments\n```\n\n首行中的符号#!告诉系统其后路径所指定的程序即是解释此脚本文件的Shell程序。如果首行没有这句话，在执行脚本文件的时候，将会出现错误。\n后续的部分就是主程序，除第一行外，以#开头的行就是注释行，直到此行的结束。如果一行空间不够，可以在行尾加 \" ，这个符号表明下一行与此行会合并为同一行。\n<br>\n编辑完毕后，将脚本存盘为 `filename.sh`，运行前首先将文件属性设为可执行：\n\n``` shell\nchmod +x filename.sh\n./finename.sh  #本行代码执行脚本\n```\n\n### Hello World\n\n新学习一门语言的第一步大抵就是 Hello World 了吧，和 C 语言、Java 等不同，Shell 一句话就能做到：\n\n``` shell\necho Hello World!\n```\n\n其中 echo 语句要输出的内容可加引号也可不加引号，要输出多个内容时只需将内容依次写出来即可。\n\n### 变量\n\n**注意：**赋值号两边应该没有空格,否则 num 会被当做一个命令\n\nShell Script是一种弱类型语言，使用变量的时候无需首先声明其类型。新的变量会在本地数据区分配内存进行存储，这个变量归当前的Shell所有，任何子进程都不能访问本地变量。这些变量与环境变量不同，环境变量被存储在另一内存区，叫做用户环境区，这块内存中的变量可以被子进程访问。\n\nShell 有两种类型的变量：<br>\n**临时变量：**Shell程序内部定义的，作用范围仅限于本程序，对其他程序不可见。包括了用户自定义变量、位置变量。<br>\n**永久变量：**永久变量是环境变量，其值不随shell脚本的执行结束而消失。\n\n变量的辅助命令：\n\n``` shell\nset  #查看系统中所有定义的变量\nunset 变量名  #删除变量\nenv #用于显示环境变量及其取值\nexport #用于将本地数据区中的变量转移到用户环境区\n```\n\n变量可以直接定义：\n\n``` shell\nvariable_name=variable_value\necho $variable_name # $ 用于取变量的值\n```\n\n`$variable_name` 可以在引号中使用，这一点和其他高级语言是明显不同的。如果出现混淆的情况，可以用花括号来区分，例如：\n\n``` shell\na=hello world\necho \"Hi, $as\"\n```\n\n就不会输出`Hi, hello world`，而是输出`Hi，`。这是因为 Shell 把 `$as` 当成一个变量，而 `$as` 未被赋值，其值为空。正确的方法是：\n\n`echo \"Hi, ${a}s`\n\n使用单引号，单引号中的变量不会进行变量替换操作。\n例如：\n\n``` shell\n$ABC = “time is $Date”\necho $ABC #输出：time is 2013-12-4\n$ABC = ‘time is $Date’\necho $ABC 输出：time is $Date \n```\n\n### 算术运算\n\n``` shell\n((i=$j+$k))  # 等价于  i=`expr $j + $k` \n((i=$j-$k))  # 等价于  i=`expr $j - $k` \n((i=$j*$k))  # 等价于  i=`expr $j * $k` \n((i=$j/$k))  # 等价于  i=`expr $j / $k` \n```\n\n### 条件控制\n\nif 语句：\n\n``` shell\nif [ 条件 ];\n  then\nelif …; \n  then\nelse\nfi\n```\n\ncase 语句：\n\n``` shell\ncase a in\n    \"A\") ;;\n    *) ;;  # 默认情况，相当于C语言的 default\n esac \n```\n\n与其他语言不同，Shell中if语句的条件部分要以分号来分隔。其中[]表示条件测试，常用的条件测试有下面几种：\n\n``` shell\n[ -f \"$file\" ]  #判断$file是否是一个文件\n[ $a -lt 3 ]  #判断$a的值是否小于3，同样-gt和-le分别表示大于或小于等于\n[ -x \"$file\" ]  #判断$file是否存在且有可执行权限，同样-r测试文件可读性\n[ -n \"$a\" ]  #判断变量$a是否有值，测试空串用-z\n[ \"$a\" = \"$b\" ]  #判断$a和$b的取值是否相等\n[ cond1 -a cond2 ]  #判断cond1和cond2是否同时成立，-o表示cond1和cond2有一成立\n```\n\n要注意条件测试部分中的空格。在方括号的两侧都有空格，在-f、-lt、=等符号两侧同样也有空格。如果没有这些空格，Shell解释脚本的时候就会出错。\n\n### 数组\n\n数组声明和使用的简单用法：\n\n``` shell\narray=(a b c)\n${array[0]} 通过下标去数组内容\n${array[*]} 取所有元素\n${#array[*]} 取长度\n```\n\n### 循环\n\n**for 循环：**\n\n语法1：\n\n``` shell\nfor n in a b c d \n    do \n    #  代码\ndone\n```\n\n语法2：\n\n``` shell\nfor((i=0;i<100;i++))\n    do \n    #  代码\ndone \n```\n\n**while 循环：**\n\n``` shell\nwhile [ 条件 ]\n    do\n    #  代码\ndone\n# 注意:在变量自增的时候 \n#   如果直接 $num+1 字符串拼接\nnum=$(($num+1)) #当数字计算\nnum=$[$num+1]\n```\n\n### 函数\n\n定义函数\n\n``` shell\nfunction 函数名() { \n    函数体\n    echo $1 #  取第一个参数\n}\n```\n\n调用函数: 函数名 参数1 参数2\n\necho 输出结果; $(函数名取结果)\n\n### 举个栗子\n\n这是代叔的一个练习\n\n``` shell\nfunction round(){\n    dat=$((`date +\"%s%N\"`))\n    echo ${dat:0-8}\n}\nfunction random(){\n    dat=$((`date +\"%s%N\"`))\n    num=$(($dat % 10))\n    num1=$(($num % $(($2 - $1))))\n    num2=$(($num1 + $1))\n    echo $num2\n}\nfunction cost(){\n    if [ $1 -le 3 ];\n    then echo 8\n    elif [ $1 -gt 3 ];\n    then \n        num1=$[$1-3]\n        num2=$[$num1*2]\n        num3=$[$num2+8]\n        echo $[$num3]\n    fi\n}\nphone1=('137' '192' '135' '155' '188')\nphone2=`round 00000000 99999999`\npho=`random 0 5`\nphone=${phone1[$pho]}$phone2\nmile=`random 1 21`\ntime=$(date +'%Y-%m-%d %H:%M:%S')\ncity=('哈尔滨' '北京' '上海' '大数据')\nharbin=('香坊区' '道里区' '道外区' '南岗区' )\nbeijing=('海淀区' '朝阳区' '宣武区' '丰台区')\nshanghai=('奉贤区' '嘉定区' '宝山区' '黄浦区')\nbigdata=('Java' 'Python' 'Hadoop' 'Linux')\nmoney=`cost $mile`\nlen=`random 0 4`\nlen2=`random 0 4`\ncase $len in\n\"0\") address1=${harbin[$len2]};;\n\"1\") address1=${beijing[$len2]};;\n\"2\") address1=${shanghai[$len2]};;\n\"3\") address1=${bigdata[$len2]};;\nesac\naddress=${city[$len]}\necho Time:$time Phone:$phone Address:$address$address1 Mile:$mile Sum:$money >> Taxi.log\n```\n\n\n","source":"_posts/2018-01-06-linux-shell.md","raw":"---\nlayout: post\ntitle: Shell 编程基础\ndate: 2018-01-06 00:00:00 +0300\ncategories:\n- Linux\ntags: [Linux, Shell] # add tag\n---\n\n\n{% blockquote 威廉·莎士比亚 %}\nThe time of life is short; to spend that shortness basely, it would be too long. \n\t人生短暂，若虚度年华，则短暂的人生就太长了。\n{% endblockquote %}\n\n<!-- more -->\n\n### Shell 介绍\n\nShell本身是一种用C语言编写的程序，从用户的角度来看，Shell是用户与Linux操作系统沟通的桥梁。用户既可以输入命令执行，又可以利用 Shell脚本编程，完成更加复杂的操作。在Linux GUI日益完善的今天，在系统管理等领域，Shell编程仍然起着不可忽视的作用。深入地了解和熟练地掌握Shell编程，是每一个Linux用户的必修课。\n<br>Linux的Shell种类众多，常见的有：Bourne Shell（/usr/bin/sh或/bin/sh）、Bourne Again Shell--Bash（/bin/bash）、C Shell（/usr/bin/csh）等等。每种Shell都有其特点，基本上，掌握其中一种就足够了。\n在本文中，我们使用的Shell版本是Bash，由于易用和免费，Bash在日常工作中被广泛使用；同时，Bash也是大多数Linux系统默认的Shell。\n\n### Shell 基本格式\n\n利用vi/vim等文本编辑器编写 Shell 脚本的固定格式如下：<br>\n\n``` shell\n#!/bin/sh\n#comments\n```\n\n首行中的符号#!告诉系统其后路径所指定的程序即是解释此脚本文件的Shell程序。如果首行没有这句话，在执行脚本文件的时候，将会出现错误。\n后续的部分就是主程序，除第一行外，以#开头的行就是注释行，直到此行的结束。如果一行空间不够，可以在行尾加 \" ，这个符号表明下一行与此行会合并为同一行。\n<br>\n编辑完毕后，将脚本存盘为 `filename.sh`，运行前首先将文件属性设为可执行：\n\n``` shell\nchmod +x filename.sh\n./finename.sh  #本行代码执行脚本\n```\n\n### Hello World\n\n新学习一门语言的第一步大抵就是 Hello World 了吧，和 C 语言、Java 等不同，Shell 一句话就能做到：\n\n``` shell\necho Hello World!\n```\n\n其中 echo 语句要输出的内容可加引号也可不加引号，要输出多个内容时只需将内容依次写出来即可。\n\n### 变量\n\n**注意：**赋值号两边应该没有空格,否则 num 会被当做一个命令\n\nShell Script是一种弱类型语言，使用变量的时候无需首先声明其类型。新的变量会在本地数据区分配内存进行存储，这个变量归当前的Shell所有，任何子进程都不能访问本地变量。这些变量与环境变量不同，环境变量被存储在另一内存区，叫做用户环境区，这块内存中的变量可以被子进程访问。\n\nShell 有两种类型的变量：<br>\n**临时变量：**Shell程序内部定义的，作用范围仅限于本程序，对其他程序不可见。包括了用户自定义变量、位置变量。<br>\n**永久变量：**永久变量是环境变量，其值不随shell脚本的执行结束而消失。\n\n变量的辅助命令：\n\n``` shell\nset  #查看系统中所有定义的变量\nunset 变量名  #删除变量\nenv #用于显示环境变量及其取值\nexport #用于将本地数据区中的变量转移到用户环境区\n```\n\n变量可以直接定义：\n\n``` shell\nvariable_name=variable_value\necho $variable_name # $ 用于取变量的值\n```\n\n`$variable_name` 可以在引号中使用，这一点和其他高级语言是明显不同的。如果出现混淆的情况，可以用花括号来区分，例如：\n\n``` shell\na=hello world\necho \"Hi, $as\"\n```\n\n就不会输出`Hi, hello world`，而是输出`Hi，`。这是因为 Shell 把 `$as` 当成一个变量，而 `$as` 未被赋值，其值为空。正确的方法是：\n\n`echo \"Hi, ${a}s`\n\n使用单引号，单引号中的变量不会进行变量替换操作。\n例如：\n\n``` shell\n$ABC = “time is $Date”\necho $ABC #输出：time is 2013-12-4\n$ABC = ‘time is $Date’\necho $ABC 输出：time is $Date \n```\n\n### 算术运算\n\n``` shell\n((i=$j+$k))  # 等价于  i=`expr $j + $k` \n((i=$j-$k))  # 等价于  i=`expr $j - $k` \n((i=$j*$k))  # 等价于  i=`expr $j * $k` \n((i=$j/$k))  # 等价于  i=`expr $j / $k` \n```\n\n### 条件控制\n\nif 语句：\n\n``` shell\nif [ 条件 ];\n  then\nelif …; \n  then\nelse\nfi\n```\n\ncase 语句：\n\n``` shell\ncase a in\n    \"A\") ;;\n    *) ;;  # 默认情况，相当于C语言的 default\n esac \n```\n\n与其他语言不同，Shell中if语句的条件部分要以分号来分隔。其中[]表示条件测试，常用的条件测试有下面几种：\n\n``` shell\n[ -f \"$file\" ]  #判断$file是否是一个文件\n[ $a -lt 3 ]  #判断$a的值是否小于3，同样-gt和-le分别表示大于或小于等于\n[ -x \"$file\" ]  #判断$file是否存在且有可执行权限，同样-r测试文件可读性\n[ -n \"$a\" ]  #判断变量$a是否有值，测试空串用-z\n[ \"$a\" = \"$b\" ]  #判断$a和$b的取值是否相等\n[ cond1 -a cond2 ]  #判断cond1和cond2是否同时成立，-o表示cond1和cond2有一成立\n```\n\n要注意条件测试部分中的空格。在方括号的两侧都有空格，在-f、-lt、=等符号两侧同样也有空格。如果没有这些空格，Shell解释脚本的时候就会出错。\n\n### 数组\n\n数组声明和使用的简单用法：\n\n``` shell\narray=(a b c)\n${array[0]} 通过下标去数组内容\n${array[*]} 取所有元素\n${#array[*]} 取长度\n```\n\n### 循环\n\n**for 循环：**\n\n语法1：\n\n``` shell\nfor n in a b c d \n    do \n    #  代码\ndone\n```\n\n语法2：\n\n``` shell\nfor((i=0;i<100;i++))\n    do \n    #  代码\ndone \n```\n\n**while 循环：**\n\n``` shell\nwhile [ 条件 ]\n    do\n    #  代码\ndone\n# 注意:在变量自增的时候 \n#   如果直接 $num+1 字符串拼接\nnum=$(($num+1)) #当数字计算\nnum=$[$num+1]\n```\n\n### 函数\n\n定义函数\n\n``` shell\nfunction 函数名() { \n    函数体\n    echo $1 #  取第一个参数\n}\n```\n\n调用函数: 函数名 参数1 参数2\n\necho 输出结果; $(函数名取结果)\n\n### 举个栗子\n\n这是代叔的一个练习\n\n``` shell\nfunction round(){\n    dat=$((`date +\"%s%N\"`))\n    echo ${dat:0-8}\n}\nfunction random(){\n    dat=$((`date +\"%s%N\"`))\n    num=$(($dat % 10))\n    num1=$(($num % $(($2 - $1))))\n    num2=$(($num1 + $1))\n    echo $num2\n}\nfunction cost(){\n    if [ $1 -le 3 ];\n    then echo 8\n    elif [ $1 -gt 3 ];\n    then \n        num1=$[$1-3]\n        num2=$[$num1*2]\n        num3=$[$num2+8]\n        echo $[$num3]\n    fi\n}\nphone1=('137' '192' '135' '155' '188')\nphone2=`round 00000000 99999999`\npho=`random 0 5`\nphone=${phone1[$pho]}$phone2\nmile=`random 1 21`\ntime=$(date +'%Y-%m-%d %H:%M:%S')\ncity=('哈尔滨' '北京' '上海' '大数据')\nharbin=('香坊区' '道里区' '道外区' '南岗区' )\nbeijing=('海淀区' '朝阳区' '宣武区' '丰台区')\nshanghai=('奉贤区' '嘉定区' '宝山区' '黄浦区')\nbigdata=('Java' 'Python' 'Hadoop' 'Linux')\nmoney=`cost $mile`\nlen=`random 0 4`\nlen2=`random 0 4`\ncase $len in\n\"0\") address1=${harbin[$len2]};;\n\"1\") address1=${beijing[$len2]};;\n\"2\") address1=${shanghai[$len2]};;\n\"3\") address1=${bigdata[$len2]};;\nesac\naddress=${city[$len]}\necho Time:$time Phone:$phone Address:$address$address1 Mile:$mile Sum:$money >> Taxi.log\n```\n\n\n","slug":"linux-shell","published":1,"updated":"2019-03-04T13:15:35.516Z","comments":1,"photos":[],"link":"","_id":"cjwj070ca000am8za0edizl0n","content":"<blockquote><p>The time of life is short; to spend that shortness basely, it would be too long.<br>    人生短暂，若虚度年华，则短暂的人生就太长了。</p>\n<footer><strong>威廉·莎士比亚</strong></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"Shell-介绍\"><a href=\"#Shell-介绍\" class=\"headerlink\" title=\"Shell 介绍\"></a>Shell 介绍</h3><p>Shell本身是一种用C语言编写的程序，从用户的角度来看，Shell是用户与Linux操作系统沟通的桥梁。用户既可以输入命令执行，又可以利用 Shell脚本编程，完成更加复杂的操作。在Linux GUI日益完善的今天，在系统管理等领域，Shell编程仍然起着不可忽视的作用。深入地了解和熟练地掌握Shell编程，是每一个Linux用户的必修课。<br><br>Linux的Shell种类众多，常见的有：Bourne Shell（/usr/bin/sh或/bin/sh）、Bourne Again Shell–Bash（/bin/bash）、C Shell（/usr/bin/csh）等等。每种Shell都有其特点，基本上，掌握其中一种就足够了。<br>在本文中，我们使用的Shell版本是Bash，由于易用和免费，Bash在日常工作中被广泛使用；同时，Bash也是大多数Linux系统默认的Shell。</p>\n<h3 id=\"Shell-基本格式\"><a href=\"#Shell-基本格式\" class=\"headerlink\" title=\"Shell 基本格式\"></a>Shell 基本格式</h3><p>利用vi/vim等文本编辑器编写 Shell 脚本的固定格式如下：<br></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\"><span class=\"meta\">#</span>comments</span><br></pre></td></tr></table></figure>\n\n<p>首行中的符号#!告诉系统其后路径所指定的程序即是解释此脚本文件的Shell程序。如果首行没有这句话，在执行脚本文件的时候，将会出现错误。<br>后续的部分就是主程序，除第一行外，以#开头的行就是注释行，直到此行的结束。如果一行空间不够，可以在行尾加 “ ，这个符号表明下一行与此行会合并为同一行。<br><br><br>编辑完毕后，将脚本存盘为 <code>filename.sh</code>，运行前首先将文件属性设为可执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x filename.sh</span><br><span class=\"line\">./finename.sh  #本行代码执行脚本</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p>新学习一门语言的第一步大抵就是 Hello World 了吧，和 C 语言、Java 等不同，Shell 一句话就能做到：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo Hello World!</span><br></pre></td></tr></table></figure>\n\n<p>其中 echo 语句要输出的内容可加引号也可不加引号，要输出多个内容时只需将内容依次写出来即可。</p>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>注意：</strong>赋值号两边应该没有空格,否则 num 会被当做一个命令</p>\n<p>Shell Script是一种弱类型语言，使用变量的时候无需首先声明其类型。新的变量会在本地数据区分配内存进行存储，这个变量归当前的Shell所有，任何子进程都不能访问本地变量。这些变量与环境变量不同，环境变量被存储在另一内存区，叫做用户环境区，这块内存中的变量可以被子进程访问。</p>\n<p>Shell 有两种类型的变量：<br><br><strong>临时变量：</strong>Shell程序内部定义的，作用范围仅限于本程序，对其他程序不可见。包括了用户自定义变量、位置变量。<br><br><strong>永久变量：</strong>永久变量是环境变量，其值不随shell脚本的执行结束而消失。</p>\n<p>变量的辅助命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set  #查看系统中所有定义的变量</span><br><span class=\"line\">unset 变量名  #删除变量</span><br><span class=\"line\">env #用于显示环境变量及其取值</span><br><span class=\"line\">export #用于将本地数据区中的变量转移到用户环境区</span><br></pre></td></tr></table></figure>\n\n<p>变量可以直接定义：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">variable_name=variable_value</span><br><span class=\"line\">echo $variable_name # $ 用于取变量的值</span><br></pre></td></tr></table></figure>\n\n<p><code>$variable_name</code> 可以在引号中使用，这一点和其他高级语言是明显不同的。如果出现混淆的情况，可以用花括号来区分，例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=hello world</span><br><span class=\"line\">echo \"Hi, $as\"</span><br></pre></td></tr></table></figure>\n\n<p>就不会输出<code>Hi, hello world</code>，而是输出<code>Hi，</code>。这是因为 Shell 把 <code>$as</code> 当成一个变量，而 <code>$as</code> 未被赋值，其值为空。正确的方法是：</p>\n<p><code>echo &quot;Hi, ${a}s</code></p>\n<p>使用单引号，单引号中的变量不会进行变量替换操作。<br>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>ABC = “time is $Date”</span><br><span class=\"line\">echo $ABC #输出：time is 2013-12-4</span><br><span class=\"line\"><span class=\"meta\">$</span>ABC = ‘time is $Date’</span><br><span class=\"line\">echo $ABC 输出：time is $Date</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"算术运算\"><a href=\"#算术运算\" class=\"headerlink\" title=\"算术运算\"></a>算术运算</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((i=$j+$k))  # 等价于  i=`expr $j + $k` </span><br><span class=\"line\">((i=$j-$k))  # 等价于  i=`expr $j - $k` </span><br><span class=\"line\">((i=$j*$k))  # 等价于  i=`expr $j * $k` </span><br><span class=\"line\">((i=$j/$k))  # 等价于  i=`expr $j / $k`</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"条件控制\"><a href=\"#条件控制\" class=\"headerlink\" title=\"条件控制\"></a>条件控制</h3><p>if 语句：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ 条件 ];</span><br><span class=\"line\">  then</span><br><span class=\"line\">elif …; </span><br><span class=\"line\">  then</span><br><span class=\"line\">else</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>case 语句：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case a in</span><br><span class=\"line\">    \"A\") ;;</span><br><span class=\"line\">    *) ;;  # 默认情况，相当于C语言的 default</span><br><span class=\"line\"> esac</span><br></pre></td></tr></table></figure>\n\n<p>与其他语言不同，Shell中if语句的条件部分要以分号来分隔。其中[]表示条件测试，常用的条件测试有下面几种：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ -f \"$file\" ]  #判断$file是否是一个文件</span><br><span class=\"line\">[ $a -lt 3 ]  #判断$a的值是否小于3，同样-gt和-le分别表示大于或小于等于</span><br><span class=\"line\">[ -x \"$file\" ]  #判断$file是否存在且有可执行权限，同样-r测试文件可读性</span><br><span class=\"line\">[ -n \"$a\" ]  #判断变量$a是否有值，测试空串用-z</span><br><span class=\"line\">[ \"$a\" = \"$b\" ]  #判断$a和$b的取值是否相等</span><br><span class=\"line\">[ cond1 -a cond2 ]  #判断cond1和cond2是否同时成立，-o表示cond1和cond2有一成立</span><br></pre></td></tr></table></figure>\n\n<p>要注意条件测试部分中的空格。在方括号的两侧都有空格，在-f、-lt、=等符号两侧同样也有空格。如果没有这些空格，Shell解释脚本的时候就会出错。</p>\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>数组声明和使用的简单用法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array=(a b c)</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;array[0]&#125; 通过下标去数组内容</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;array[*]&#125; 取所有元素</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;#array[*]&#125; 取长度</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h3><p><strong>for 循环：</strong></p>\n<p>语法1：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for n in a b c d </span><br><span class=\"line\">    do </span><br><span class=\"line\">    #  代码</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n<p>语法2：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for((i=0;i&lt;100;i++))</span><br><span class=\"line\">    do </span><br><span class=\"line\">    #  代码</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n\n<p><strong>while 循环：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while [ 条件 ]</span><br><span class=\"line\">    do</span><br><span class=\"line\">    #  代码</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta\">#</span> 注意:在变量自增的时候 </span><br><span class=\"line\"><span class=\"meta\">#</span>   如果直接 $num+1 字符串拼接</span><br><span class=\"line\">num=$(($num+1)) #当数字计算</span><br><span class=\"line\">num=$[$num+1]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>定义函数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function 函数名() &#123; </span><br><span class=\"line\">    函数体</span><br><span class=\"line\">    echo $1 #  取第一个参数</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>调用函数: 函数名 参数1 参数2</p>\n<p>echo 输出结果; $(函数名取结果)</p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>这是代叔的一个练习</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function round()&#123;</span><br><span class=\"line\">    dat=$((`date +\"%s%N\"`))</span><br><span class=\"line\">    echo $&#123;dat:0-8&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function random()&#123;</span><br><span class=\"line\">    dat=$((`date +\"%s%N\"`))</span><br><span class=\"line\">    num=$(($dat % 10))</span><br><span class=\"line\">    num1=$(($num % $(($2 - $1))))</span><br><span class=\"line\">    num2=$(($num1 + $1))</span><br><span class=\"line\">    echo $num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function cost()&#123;</span><br><span class=\"line\">    if [ $1 -le 3 ];</span><br><span class=\"line\">    then echo 8</span><br><span class=\"line\">    elif [ $1 -gt 3 ];</span><br><span class=\"line\">    then </span><br><span class=\"line\">        num1=$[$1-3]</span><br><span class=\"line\">        num2=$[$num1*2]</span><br><span class=\"line\">        num3=$[$num2+8]</span><br><span class=\"line\">        echo $[$num3]</span><br><span class=\"line\">    fi</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">phone1=('137' '192' '135' '155' '188')</span><br><span class=\"line\">phone2=`round 00000000 99999999`</span><br><span class=\"line\">pho=`random 0 5`</span><br><span class=\"line\">phone=$&#123;phone1[$pho]&#125;$phone2</span><br><span class=\"line\">mile=`random 1 21`</span><br><span class=\"line\">time=$(date +'%Y-%m-%d %H:%M:%S')</span><br><span class=\"line\">city=('哈尔滨' '北京' '上海' '大数据')</span><br><span class=\"line\">harbin=('香坊区' '道里区' '道外区' '南岗区' )</span><br><span class=\"line\">beijing=('海淀区' '朝阳区' '宣武区' '丰台区')</span><br><span class=\"line\">shanghai=('奉贤区' '嘉定区' '宝山区' '黄浦区')</span><br><span class=\"line\">bigdata=('Java' 'Python' 'Hadoop' 'Linux')</span><br><span class=\"line\">money=`cost $mile`</span><br><span class=\"line\">len=`random 0 4`</span><br><span class=\"line\">len2=`random 0 4`</span><br><span class=\"line\">case $len in</span><br><span class=\"line\">\"0\") address1=$&#123;harbin[$len2]&#125;;;</span><br><span class=\"line\">\"1\") address1=$&#123;beijing[$len2]&#125;;;</span><br><span class=\"line\">\"2\") address1=$&#123;shanghai[$len2]&#125;;;</span><br><span class=\"line\">\"3\") address1=$&#123;bigdata[$len2]&#125;;;</span><br><span class=\"line\">esac</span><br><span class=\"line\">address=$&#123;city[$len]&#125;</span><br><span class=\"line\">echo Time:$time Phone:$phone Address:$address$address1 Mile:$mile Sum:$money &gt;&gt; Taxi.log</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The time of life is short; to spend that shortness basely, it would be too long.<br>    人生短暂，若虚度年华，则短暂的人生就太长了。</p>\n<footer><strong>威廉·莎士比亚</strong></footer></blockquote>","more":"<h3 id=\"Shell-介绍\"><a href=\"#Shell-介绍\" class=\"headerlink\" title=\"Shell 介绍\"></a>Shell 介绍</h3><p>Shell本身是一种用C语言编写的程序，从用户的角度来看，Shell是用户与Linux操作系统沟通的桥梁。用户既可以输入命令执行，又可以利用 Shell脚本编程，完成更加复杂的操作。在Linux GUI日益完善的今天，在系统管理等领域，Shell编程仍然起着不可忽视的作用。深入地了解和熟练地掌握Shell编程，是每一个Linux用户的必修课。<br><br>Linux的Shell种类众多，常见的有：Bourne Shell（/usr/bin/sh或/bin/sh）、Bourne Again Shell–Bash（/bin/bash）、C Shell（/usr/bin/csh）等等。每种Shell都有其特点，基本上，掌握其中一种就足够了。<br>在本文中，我们使用的Shell版本是Bash，由于易用和免费，Bash在日常工作中被广泛使用；同时，Bash也是大多数Linux系统默认的Shell。</p>\n<h3 id=\"Shell-基本格式\"><a href=\"#Shell-基本格式\" class=\"headerlink\" title=\"Shell 基本格式\"></a>Shell 基本格式</h3><p>利用vi/vim等文本编辑器编写 Shell 脚本的固定格式如下：<br></p>\n<!--�10-->\n\n<p>首行中的符号#!告诉系统其后路径所指定的程序即是解释此脚本文件的Shell程序。如果首行没有这句话，在执行脚本文件的时候，将会出现错误。<br>后续的部分就是主程序，除第一行外，以#开头的行就是注释行，直到此行的结束。如果一行空间不够，可以在行尾加 “ ，这个符号表明下一行与此行会合并为同一行。<br><br><br>编辑完毕后，将脚本存盘为 <code>filename.sh</code>，运行前首先将文件属性设为可执行：</p>\n<!--�11-->\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p>新学习一门语言的第一步大抵就是 Hello World 了吧，和 C 语言、Java 等不同，Shell 一句话就能做到：</p>\n<!--�12-->\n\n<p>其中 echo 语句要输出的内容可加引号也可不加引号，要输出多个内容时只需将内容依次写出来即可。</p>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p><strong>注意：</strong>赋值号两边应该没有空格,否则 num 会被当做一个命令</p>\n<p>Shell Script是一种弱类型语言，使用变量的时候无需首先声明其类型。新的变量会在本地数据区分配内存进行存储，这个变量归当前的Shell所有，任何子进程都不能访问本地变量。这些变量与环境变量不同，环境变量被存储在另一内存区，叫做用户环境区，这块内存中的变量可以被子进程访问。</p>\n<p>Shell 有两种类型的变量：<br><br><strong>临时变量：</strong>Shell程序内部定义的，作用范围仅限于本程序，对其他程序不可见。包括了用户自定义变量、位置变量。<br><br><strong>永久变量：</strong>永久变量是环境变量，其值不随shell脚本的执行结束而消失。</p>\n<p>变量的辅助命令：</p>\n<!--�13-->\n\n<p>变量可以直接定义：</p>\n<!--�14-->\n\n<p><code>$variable_name</code> 可以在引号中使用，这一点和其他高级语言是明显不同的。如果出现混淆的情况，可以用花括号来区分，例如：</p>\n<!--�15-->\n\n<p>就不会输出<code>Hi, hello world</code>，而是输出<code>Hi，</code>。这是因为 Shell 把 <code>$as</code> 当成一个变量，而 <code>$as</code> 未被赋值，其值为空。正确的方法是：</p>\n<p><code>echo &quot;Hi, ${a}s</code></p>\n<p>使用单引号，单引号中的变量不会进行变量替换操作。<br>例如：</p>\n<!--�16-->\n\n<h3 id=\"算术运算\"><a href=\"#算术运算\" class=\"headerlink\" title=\"算术运算\"></a>算术运算</h3><!--�17-->\n\n<h3 id=\"条件控制\"><a href=\"#条件控制\" class=\"headerlink\" title=\"条件控制\"></a>条件控制</h3><p>if 语句：</p>\n<!--�18-->\n\n<p>case 语句：</p>\n<!--�19-->\n\n<p>与其他语言不同，Shell中if语句的条件部分要以分号来分隔。其中[]表示条件测试，常用的条件测试有下面几种：</p>\n<!--�20-->\n\n<p>要注意条件测试部分中的空格。在方括号的两侧都有空格，在-f、-lt、=等符号两侧同样也有空格。如果没有这些空格，Shell解释脚本的时候就会出错。</p>\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>数组声明和使用的简单用法：</p>\n<!--�21-->\n\n<h3 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h3><p><strong>for 循环：</strong></p>\n<p>语法1：</p>\n<!--�22-->\n\n<p>语法2：</p>\n<!--�23-->\n\n<p><strong>while 循环：</strong></p>\n<!--�24-->\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>定义函数</p>\n<!--�25-->\n\n<p>调用函数: 函数名 参数1 参数2</p>\n<p>echo 输出结果; $(函数名取结果)</p>\n<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><p>这是代叔的一个练习</p>\n<!--�26-->"},{"layout":"post","title":"Linux基础","date":"2018-01-08T05:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe sands in your way beg for your aong and your movement, dancing water. Will you carry the burden of their lameness? \n\t跳舞着的流水呀，在你途中的泥沙，要求你的歌声，你的流动呢。你肯挟瘸足的泥沙而俱下么？\n{% endblockquote %}\n\n<!-- more -->\n\n## Linux操作系统简介\n\nLinux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。\n\nLinux的特点：<br>\n+ 安全、免费、开源\n+ 多用户（完全的，区别于Windows），一个用户的操作不会影响到其他用户\n+ 稳定、快速、占用资源少\n+ Java、大数据环境抖默认支持 Linux\n\n### Linux 的版本\n\n1. 内核版：提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。就像手机的安卓系统一样，内核一般无法直接使用\n2. 发行版：由 Linux 内核与各种常用软件的集合产品。各个厂商会针对 Linux 内核发布自己的发行版\n    + redHat: 经典红帽系列(RedHat Enterprise Linux, RHEL)，拥有极强的性能与稳定性。*好，贵*\n    + CentOS: 把 RHEL 重新编译并发布的免费版本，具有广泛的使用人群。*好，免费*\n    + Fedora: 红帽公司发布的桌面版系统，用户可以免费体验到最新的技术或工具。\n    + openSUSE: 源自德国的一款著名的 Linux 系统，在全球范围内有着不错的声誉及市场占有率。\n    + Gentoo: 具有极高的自定制性，操作复杂，适合具有一定经验的人使用。\n    + Debian: 稳定性、安全性强，提供了免费的基础支持，可以良好地支持各种硬件架构\n    + Ubuntu：派生自 Debian 系列，对新款硬件具有极强的兼容能力。和 Fedora 都是极其出色的桌面系统。\n\n### 安装 Linux\n\nLinux 可以通过虚拟机 VMware Workstation 安装。虚拟机是能够让用户在一台物理机上模拟出多个操作系统的软件，安装 Linux 前需要设置 CPU 以支持虚拟化。在**任务管理器-性能-CPU**一栏右下角可以查看当前CPU是否支持虚拟化，若不支持则可去BIOS中设置。\n\n使用虚拟机的优点：不怕折腾，可以方便地还原到出错前的环境状态。\n\n## 使用\n\n### Linux 用户\n\nroot 用户具有最高权限，其他用户直接是安全的\n\n### Linux 目录\n\n> / 根目录 <br>\n> /bin 存放必要的命令 <br>\n> /boot 存放内核以及启动所需的文件 <br>\n> /dev 存放设备文件 <br>\n> /etc 存放系统配置文件 <br>\n> /home 普通用户的宿主目录，用户数据存放在其主目录中 <br>\n> /lib 存放必要的运行库 <br>\n> /mnt 存放临时的映射文件系统，通常用来挂载使用。<br>\n> /proc 存放存储进程和系统信息 <br>\n> /root 超级用户的主目录 <br>\n> /sbin 存放系统管理程序 <br>\n> /tmp 存放临时文件 <br>\n> /usr 存放应用程序，命令程序文件、程序库、手册和其它文档。 <br>\n> /var 系统默认日志存放目录\n\n### 远程登陆\n\n由于 Linux 在远程服务器上，一般不能直接在上面操作，所以有各种各样的客户端软件用来远程连接 Linux，比如 XShell、MobaXterm等。\n\n**连接方法：** <br>\n+ 要知道 Linux 的 IP 地址、用户名以及对应的密码\n+ 虚拟机和本地机要能 ping 通\n\n**注意：**虚拟机开机是不启动网卡的，需要手动调成自动开机启动。\n\n### 修改 Nat 连接方式\n\nNat 方式是给虚拟机一个独立的网卡，特点是稳定、IP不变。<br>\n虚拟机右键 -> 设置 -> 网络适配器 -> 右侧选自定义-vmnet8 -> 保存 <br>\n虚拟机 -> 编辑 -> 虚拟网络适配器 -> 更改设置 -> 将 net8 改为 NAT 模式 -> 保存\n\n-----------------------------------------------------------------------------\n\n### Linux 命令\n\n**Tip：** <br>\n命令查询[网址](http://man.linuxde.net/) ，此网站仅供参考<br>\nTab 键是命令提示\n\n**基本语法：** *命令名 -选项 参数*\n\n\n#### [cd](http://man.linuxde.net/cd) 切换目录 ，注意区分相对路径和绝对路径的概念\n\n```shell\ncd /    根目录\ncd ~    家目录\ncd a/b/c\ncd /a/b/c\ncd ..    返回上级目录\ncd ../..    返回上两级目录\ncd -    返回进入此目录之前所在的目录\n```\n\n#### [ls](http://man.linuxde.net/ls) ll 查看目录\n\n``` shell\nls 选项 -a 全部 包括隐藏文件 \n           -R 级联显示 \nll 详细查询 -h kb显示文件大小\n``` \n\n#### [mkdir](http://man.linuxde.net/mkdir) 创建文件夹\n\n``` shell\nmkdir  创建文件夹 \nmkdir -p 连续创建多层文件夹\n```\n\n#### [rm](http://man.linuxde.net/rm) 删除文件\n\n``` shell\nrm 删除文件 \nrm -r 删除文件夹\n``` \n\n#### [cp](http://man.linuxde.net/cp) 复制文件\n\n**说明：** cp 命令可以复制到当前目录或其他目录，同时可以修改文件名\n``` shell\ncp 要复制的文件名 目标目录/文件名 \ncp -r 复制目录\n```\n\n#### [mv](http://man.linuxde.net/mv) 移动文件\n\n``` shell\nmv 选项 -参数\n```\n\n#### [touch](http://man.linuxde.net/touch) 创建/更新文件\n\n``` shell\ntouch 文件名  \n    已存在的文件名 更新\n    Linux不分扩展名\n```\n\n#### [vi/vim](http://man.linuxde.net/vi) 文本编辑 \n\n``` shell\ni 写入模式 \nesc 编辑模式切换到命令模式 \n:-> wq 保存并退出 \n:-> q！强制退出 \n```\n\n#### [cat](http://man.linuxde.net/cat) 查看文本内容\n\n``` shell\ncat a 查看 a 的内容\ncat a >  b 将 a 的内容给 b\ncat a >> b 将 a 的内容追加给 b\n```\n\n#### [tar](http://man.linuxde.net/tar) 归档压缩 \n\n``` shell\n两个功能 一个压缩 一个是解压缩 \n选项  -c 压缩   \n      -x 解压缩\n      -f 文件 \n      -v 显示 \n压缩  tar -czvf 压缩后文件名 目标\n解压缩    tar -xzvf 目标名 \n            -xzvf 目标名 -C 目标目录\n```\n\n\n\n\n\n\n\n","source":"_posts/2018-01-08-linux.markdown","raw":"---\nlayout: post\ntitle: Linux基础\ndate: 2018-01-08 00:00:00 +0300\ncategories:\n- Linux\ntags: \n- Linux命令\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe sands in your way beg for your aong and your movement, dancing water. Will you carry the burden of their lameness? \n\t跳舞着的流水呀，在你途中的泥沙，要求你的歌声，你的流动呢。你肯挟瘸足的泥沙而俱下么？\n{% endblockquote %}\n\n<!-- more -->\n\n## Linux操作系统简介\n\nLinux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。\n\nLinux的特点：<br>\n+ 安全、免费、开源\n+ 多用户（完全的，区别于Windows），一个用户的操作不会影响到其他用户\n+ 稳定、快速、占用资源少\n+ Java、大数据环境抖默认支持 Linux\n\n### Linux 的版本\n\n1. 内核版：提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。就像手机的安卓系统一样，内核一般无法直接使用\n2. 发行版：由 Linux 内核与各种常用软件的集合产品。各个厂商会针对 Linux 内核发布自己的发行版\n    + redHat: 经典红帽系列(RedHat Enterprise Linux, RHEL)，拥有极强的性能与稳定性。*好，贵*\n    + CentOS: 把 RHEL 重新编译并发布的免费版本，具有广泛的使用人群。*好，免费*\n    + Fedora: 红帽公司发布的桌面版系统，用户可以免费体验到最新的技术或工具。\n    + openSUSE: 源自德国的一款著名的 Linux 系统，在全球范围内有着不错的声誉及市场占有率。\n    + Gentoo: 具有极高的自定制性，操作复杂，适合具有一定经验的人使用。\n    + Debian: 稳定性、安全性强，提供了免费的基础支持，可以良好地支持各种硬件架构\n    + Ubuntu：派生自 Debian 系列，对新款硬件具有极强的兼容能力。和 Fedora 都是极其出色的桌面系统。\n\n### 安装 Linux\n\nLinux 可以通过虚拟机 VMware Workstation 安装。虚拟机是能够让用户在一台物理机上模拟出多个操作系统的软件，安装 Linux 前需要设置 CPU 以支持虚拟化。在**任务管理器-性能-CPU**一栏右下角可以查看当前CPU是否支持虚拟化，若不支持则可去BIOS中设置。\n\n使用虚拟机的优点：不怕折腾，可以方便地还原到出错前的环境状态。\n\n## 使用\n\n### Linux 用户\n\nroot 用户具有最高权限，其他用户直接是安全的\n\n### Linux 目录\n\n> / 根目录 <br>\n> /bin 存放必要的命令 <br>\n> /boot 存放内核以及启动所需的文件 <br>\n> /dev 存放设备文件 <br>\n> /etc 存放系统配置文件 <br>\n> /home 普通用户的宿主目录，用户数据存放在其主目录中 <br>\n> /lib 存放必要的运行库 <br>\n> /mnt 存放临时的映射文件系统，通常用来挂载使用。<br>\n> /proc 存放存储进程和系统信息 <br>\n> /root 超级用户的主目录 <br>\n> /sbin 存放系统管理程序 <br>\n> /tmp 存放临时文件 <br>\n> /usr 存放应用程序，命令程序文件、程序库、手册和其它文档。 <br>\n> /var 系统默认日志存放目录\n\n### 远程登陆\n\n由于 Linux 在远程服务器上，一般不能直接在上面操作，所以有各种各样的客户端软件用来远程连接 Linux，比如 XShell、MobaXterm等。\n\n**连接方法：** <br>\n+ 要知道 Linux 的 IP 地址、用户名以及对应的密码\n+ 虚拟机和本地机要能 ping 通\n\n**注意：**虚拟机开机是不启动网卡的，需要手动调成自动开机启动。\n\n### 修改 Nat 连接方式\n\nNat 方式是给虚拟机一个独立的网卡，特点是稳定、IP不变。<br>\n虚拟机右键 -> 设置 -> 网络适配器 -> 右侧选自定义-vmnet8 -> 保存 <br>\n虚拟机 -> 编辑 -> 虚拟网络适配器 -> 更改设置 -> 将 net8 改为 NAT 模式 -> 保存\n\n-----------------------------------------------------------------------------\n\n### Linux 命令\n\n**Tip：** <br>\n命令查询[网址](http://man.linuxde.net/) ，此网站仅供参考<br>\nTab 键是命令提示\n\n**基本语法：** *命令名 -选项 参数*\n\n\n#### [cd](http://man.linuxde.net/cd) 切换目录 ，注意区分相对路径和绝对路径的概念\n\n```shell\ncd /    根目录\ncd ~    家目录\ncd a/b/c\ncd /a/b/c\ncd ..    返回上级目录\ncd ../..    返回上两级目录\ncd -    返回进入此目录之前所在的目录\n```\n\n#### [ls](http://man.linuxde.net/ls) ll 查看目录\n\n``` shell\nls 选项 -a 全部 包括隐藏文件 \n           -R 级联显示 \nll 详细查询 -h kb显示文件大小\n``` \n\n#### [mkdir](http://man.linuxde.net/mkdir) 创建文件夹\n\n``` shell\nmkdir  创建文件夹 \nmkdir -p 连续创建多层文件夹\n```\n\n#### [rm](http://man.linuxde.net/rm) 删除文件\n\n``` shell\nrm 删除文件 \nrm -r 删除文件夹\n``` \n\n#### [cp](http://man.linuxde.net/cp) 复制文件\n\n**说明：** cp 命令可以复制到当前目录或其他目录，同时可以修改文件名\n``` shell\ncp 要复制的文件名 目标目录/文件名 \ncp -r 复制目录\n```\n\n#### [mv](http://man.linuxde.net/mv) 移动文件\n\n``` shell\nmv 选项 -参数\n```\n\n#### [touch](http://man.linuxde.net/touch) 创建/更新文件\n\n``` shell\ntouch 文件名  \n    已存在的文件名 更新\n    Linux不分扩展名\n```\n\n#### [vi/vim](http://man.linuxde.net/vi) 文本编辑 \n\n``` shell\ni 写入模式 \nesc 编辑模式切换到命令模式 \n:-> wq 保存并退出 \n:-> q！强制退出 \n```\n\n#### [cat](http://man.linuxde.net/cat) 查看文本内容\n\n``` shell\ncat a 查看 a 的内容\ncat a >  b 将 a 的内容给 b\ncat a >> b 将 a 的内容追加给 b\n```\n\n#### [tar](http://man.linuxde.net/tar) 归档压缩 \n\n``` shell\n两个功能 一个压缩 一个是解压缩 \n选项  -c 压缩   \n      -x 解压缩\n      -f 文件 \n      -v 显示 \n压缩  tar -czvf 压缩后文件名 目标\n解压缩    tar -xzvf 目标名 \n            -xzvf 目标名 -C 目标目录\n```\n\n\n\n\n\n\n\n","slug":"linux","published":1,"updated":"2019-03-04T13:15:26.045Z","comments":1,"photos":[],"link":"","_id":"cjwj070cc000bm8zaz4y3yjc1","content":"<blockquote><p>The sands in your way beg for your aong and your movement, dancing water. Will you carry the burden of their lameness?<br>    跳舞着的流水呀，在你途中的泥沙，要求你的歌声，你的流动呢。你肯挟瘸足的泥沙而俱下么？</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"Linux操作系统简介\"><a href=\"#Linux操作系统简介\" class=\"headerlink\" title=\"Linux操作系统简介\"></a>Linux操作系统简介</h2><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>Linux的特点：<br></p>\n<ul>\n<li>安全、免费、开源</li>\n<li>多用户（完全的，区别于Windows），一个用户的操作不会影响到其他用户</li>\n<li>稳定、快速、占用资源少</li>\n<li>Java、大数据环境抖默认支持 Linux</li>\n</ul>\n<h3 id=\"Linux-的版本\"><a href=\"#Linux-的版本\" class=\"headerlink\" title=\"Linux 的版本\"></a>Linux 的版本</h3><ol>\n<li>内核版：提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。就像手机的安卓系统一样，内核一般无法直接使用</li>\n<li>发行版：由 Linux 内核与各种常用软件的集合产品。各个厂商会针对 Linux 内核发布自己的发行版<ul>\n<li>redHat: 经典红帽系列(RedHat Enterprise Linux, RHEL)，拥有极强的性能与稳定性。<em>好，贵</em></li>\n<li>CentOS: 把 RHEL 重新编译并发布的免费版本，具有广泛的使用人群。<em>好，免费</em></li>\n<li>Fedora: 红帽公司发布的桌面版系统，用户可以免费体验到最新的技术或工具。</li>\n<li>openSUSE: 源自德国的一款著名的 Linux 系统，在全球范围内有着不错的声誉及市场占有率。</li>\n<li>Gentoo: 具有极高的自定制性，操作复杂，适合具有一定经验的人使用。</li>\n<li>Debian: 稳定性、安全性强，提供了免费的基础支持，可以良好地支持各种硬件架构</li>\n<li>Ubuntu：派生自 Debian 系列，对新款硬件具有极强的兼容能力。和 Fedora 都是极其出色的桌面系统。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"安装-Linux\"><a href=\"#安装-Linux\" class=\"headerlink\" title=\"安装 Linux\"></a>安装 Linux</h3><p>Linux 可以通过虚拟机 VMware Workstation 安装。虚拟机是能够让用户在一台物理机上模拟出多个操作系统的软件，安装 Linux 前需要设置 CPU 以支持虚拟化。在<strong>任务管理器-性能-CPU</strong>一栏右下角可以查看当前CPU是否支持虚拟化，若不支持则可去BIOS中设置。</p>\n<p>使用虚拟机的优点：不怕折腾，可以方便地还原到出错前的环境状态。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"Linux-用户\"><a href=\"#Linux-用户\" class=\"headerlink\" title=\"Linux 用户\"></a>Linux 用户</h3><p>root 用户具有最高权限，其他用户直接是安全的</p>\n<h3 id=\"Linux-目录\"><a href=\"#Linux-目录\" class=\"headerlink\" title=\"Linux 目录\"></a>Linux 目录</h3><blockquote>\n<p>/ 根目录 <br><br>/bin 存放必要的命令 <br><br>/boot 存放内核以及启动所需的文件 <br><br>/dev 存放设备文件 <br><br>/etc 存放系统配置文件 <br><br>/home 普通用户的宿主目录，用户数据存放在其主目录中 <br><br>/lib 存放必要的运行库 <br><br>/mnt 存放临时的映射文件系统，通常用来挂载使用。<br><br>/proc 存放存储进程和系统信息 <br><br>/root 超级用户的主目录 <br><br>/sbin 存放系统管理程序 <br><br>/tmp 存放临时文件 <br><br>/usr 存放应用程序，命令程序文件、程序库、手册和其它文档。 <br><br>/var 系统默认日志存放目录</p>\n</blockquote>\n<h3 id=\"远程登陆\"><a href=\"#远程登陆\" class=\"headerlink\" title=\"远程登陆\"></a>远程登陆</h3><p>由于 Linux 在远程服务器上，一般不能直接在上面操作，所以有各种各样的客户端软件用来远程连接 Linux，比如 XShell、MobaXterm等。</p>\n<p><strong>连接方法：</strong> <br></p>\n<ul>\n<li>要知道 Linux 的 IP 地址、用户名以及对应的密码</li>\n<li>虚拟机和本地机要能 ping 通</li>\n</ul>\n<p><strong>注意：</strong>虚拟机开机是不启动网卡的，需要手动调成自动开机启动。</p>\n<h3 id=\"修改-Nat-连接方式\"><a href=\"#修改-Nat-连接方式\" class=\"headerlink\" title=\"修改 Nat 连接方式\"></a>修改 Nat 连接方式</h3><p>Nat 方式是给虚拟机一个独立的网卡，特点是稳定、IP不变。<br><br>虚拟机右键 -&gt; 设置 -&gt; 网络适配器 -&gt; 右侧选自定义-vmnet8 -&gt; 保存 <br><br>虚拟机 -&gt; 编辑 -&gt; 虚拟网络适配器 -&gt; 更改设置 -&gt; 将 net8 改为 NAT 模式 -&gt; 保存</p>\n<hr>\n<h3 id=\"Linux-命令\"><a href=\"#Linux-命令\" class=\"headerlink\" title=\"Linux 命令\"></a>Linux 命令</h3><p><strong>Tip：</strong> <br><br>命令查询<a href=\"http://man.linuxde.net/\" target=\"_blank\" rel=\"noopener\">网址</a> ，此网站仅供参考<br><br>Tab 键是命令提示</p>\n<p><strong>基本语法：</strong> <em>命令名 -选项 参数</em></p>\n<h4 id=\"cd-切换目录-，注意区分相对路径和绝对路径的概念\"><a href=\"#cd-切换目录-，注意区分相对路径和绝对路径的概念\" class=\"headerlink\" title=\"cd 切换目录 ，注意区分相对路径和绝对路径的概念\"></a><a href=\"http://man.linuxde.net/cd\" target=\"_blank\" rel=\"noopener\">cd</a> 切换目录 ，注意区分相对路径和绝对路径的概念</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /    根目录</span><br><span class=\"line\">cd ~    家目录</span><br><span class=\"line\">cd a/b/c</span><br><span class=\"line\">cd /a/b/c</span><br><span class=\"line\">cd ..    返回上级目录</span><br><span class=\"line\">cd ../..    返回上两级目录</span><br><span class=\"line\">cd -    返回进入此目录之前所在的目录</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ls-ll-查看目录\"><a href=\"#ls-ll-查看目录\" class=\"headerlink\" title=\"ls ll 查看目录\"></a><a href=\"http://man.linuxde.net/ls\" target=\"_blank\" rel=\"noopener\">ls</a> ll 查看目录</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls 选项 -a 全部 包括隐藏文件 </span><br><span class=\"line\">           -R 级联显示 </span><br><span class=\"line\">ll 详细查询 -h kb显示文件大小</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>### [mkdir](http://man.linuxde.net/mkdir) 创建文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">``` shell</span><br><span class=\"line\">mkdir  创建文件夹 </span><br><span class=\"line\">mkdir -p 连续创建多层文件夹</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"rm-删除文件\"><a href=\"#rm-删除文件\" class=\"headerlink\" title=\"rm 删除文件\"></a><a href=\"http://man.linuxde.net/rm\" target=\"_blank\" rel=\"noopener\">rm</a> 删除文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm 删除文件 </span><br><span class=\"line\">rm -r 删除文件夹</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>### [cp](http://man.linuxde.net/cp) 复制文件</span><br><span class=\"line\"></span><br><span class=\"line\">**说明：** cp 命令可以复制到当前目录或其他目录，同时可以修改文件名</span><br><span class=\"line\">``` shell</span><br><span class=\"line\">cp 要复制的文件名 目标目录/文件名 </span><br><span class=\"line\">cp -r 复制目录</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mv-移动文件\"><a href=\"#mv-移动文件\" class=\"headerlink\" title=\"mv 移动文件\"></a><a href=\"http://man.linuxde.net/mv\" target=\"_blank\" rel=\"noopener\">mv</a> 移动文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv 选项 -参数</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"touch-创建-更新文件\"><a href=\"#touch-创建-更新文件\" class=\"headerlink\" title=\"touch 创建/更新文件\"></a><a href=\"http://man.linuxde.net/touch\" target=\"_blank\" rel=\"noopener\">touch</a> 创建/更新文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch 文件名  </span><br><span class=\"line\">    已存在的文件名 更新</span><br><span class=\"line\">    Linux不分扩展名</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"vi-vim-文本编辑\"><a href=\"#vi-vim-文本编辑\" class=\"headerlink\" title=\"vi/vim 文本编辑\"></a><a href=\"http://man.linuxde.net/vi\" target=\"_blank\" rel=\"noopener\">vi/vim</a> 文本编辑</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i 写入模式 </span><br><span class=\"line\">esc 编辑模式切换到命令模式 </span><br><span class=\"line\">:-&gt; wq 保存并退出 </span><br><span class=\"line\">:-&gt; q！强制退出</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"cat-查看文本内容\"><a href=\"#cat-查看文本内容\" class=\"headerlink\" title=\"cat 查看文本内容\"></a><a href=\"http://man.linuxde.net/cat\" target=\"_blank\" rel=\"noopener\">cat</a> 查看文本内容</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat a 查看 a 的内容</span><br><span class=\"line\">cat a &gt;  b 将 a 的内容给 b</span><br><span class=\"line\">cat a &gt;&gt; b 将 a 的内容追加给 b</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"tar-归档压缩\"><a href=\"#tar-归档压缩\" class=\"headerlink\" title=\"tar 归档压缩\"></a><a href=\"http://man.linuxde.net/tar\" target=\"_blank\" rel=\"noopener\">tar</a> 归档压缩</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个功能 一个压缩 一个是解压缩 </span><br><span class=\"line\">选项  -c 压缩   </span><br><span class=\"line\">      -x 解压缩</span><br><span class=\"line\">      -f 文件 </span><br><span class=\"line\">      -v 显示 </span><br><span class=\"line\">压缩  tar -czvf 压缩后文件名 目标</span><br><span class=\"line\">解压缩    tar -xzvf 目标名 </span><br><span class=\"line\">            -xzvf 目标名 -C 目标目录</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The sands in your way beg for your aong and your movement, dancing water. Will you carry the burden of their lameness?<br>    跳舞着的流水呀，在你途中的泥沙，要求你的歌声，你的流动呢。你肯挟瘸足的泥沙而俱下么？</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h2 id=\"Linux操作系统简介\"><a href=\"#Linux操作系统简介\" class=\"headerlink\" title=\"Linux操作系统简介\"></a>Linux操作系统简介</h2><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>Linux的特点：<br></p>\n<ul>\n<li>安全、免费、开源</li>\n<li>多用户（完全的，区别于Windows），一个用户的操作不会影响到其他用户</li>\n<li>稳定、快速、占用资源少</li>\n<li>Java、大数据环境抖默认支持 Linux</li>\n</ul>\n<h3 id=\"Linux-的版本\"><a href=\"#Linux-的版本\" class=\"headerlink\" title=\"Linux 的版本\"></a>Linux 的版本</h3><ol>\n<li>内核版：提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。就像手机的安卓系统一样，内核一般无法直接使用</li>\n<li>发行版：由 Linux 内核与各种常用软件的集合产品。各个厂商会针对 Linux 内核发布自己的发行版<ul>\n<li>redHat: 经典红帽系列(RedHat Enterprise Linux, RHEL)，拥有极强的性能与稳定性。<em>好，贵</em></li>\n<li>CentOS: 把 RHEL 重新编译并发布的免费版本，具有广泛的使用人群。<em>好，免费</em></li>\n<li>Fedora: 红帽公司发布的桌面版系统，用户可以免费体验到最新的技术或工具。</li>\n<li>openSUSE: 源自德国的一款著名的 Linux 系统，在全球范围内有着不错的声誉及市场占有率。</li>\n<li>Gentoo: 具有极高的自定制性，操作复杂，适合具有一定经验的人使用。</li>\n<li>Debian: 稳定性、安全性强，提供了免费的基础支持，可以良好地支持各种硬件架构</li>\n<li>Ubuntu：派生自 Debian 系列，对新款硬件具有极强的兼容能力。和 Fedora 都是极其出色的桌面系统。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"安装-Linux\"><a href=\"#安装-Linux\" class=\"headerlink\" title=\"安装 Linux\"></a>安装 Linux</h3><p>Linux 可以通过虚拟机 VMware Workstation 安装。虚拟机是能够让用户在一台物理机上模拟出多个操作系统的软件，安装 Linux 前需要设置 CPU 以支持虚拟化。在<strong>任务管理器-性能-CPU</strong>一栏右下角可以查看当前CPU是否支持虚拟化，若不支持则可去BIOS中设置。</p>\n<p>使用虚拟机的优点：不怕折腾，可以方便地还原到出错前的环境状态。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"Linux-用户\"><a href=\"#Linux-用户\" class=\"headerlink\" title=\"Linux 用户\"></a>Linux 用户</h3><p>root 用户具有最高权限，其他用户直接是安全的</p>\n<h3 id=\"Linux-目录\"><a href=\"#Linux-目录\" class=\"headerlink\" title=\"Linux 目录\"></a>Linux 目录</h3><blockquote>\n<p>/ 根目录 <br><br>/bin 存放必要的命令 <br><br>/boot 存放内核以及启动所需的文件 <br><br>/dev 存放设备文件 <br><br>/etc 存放系统配置文件 <br><br>/home 普通用户的宿主目录，用户数据存放在其主目录中 <br><br>/lib 存放必要的运行库 <br><br>/mnt 存放临时的映射文件系统，通常用来挂载使用。<br><br>/proc 存放存储进程和系统信息 <br><br>/root 超级用户的主目录 <br><br>/sbin 存放系统管理程序 <br><br>/tmp 存放临时文件 <br><br>/usr 存放应用程序，命令程序文件、程序库、手册和其它文档。 <br><br>/var 系统默认日志存放目录</p>\n</blockquote>\n<h3 id=\"远程登陆\"><a href=\"#远程登陆\" class=\"headerlink\" title=\"远程登陆\"></a>远程登陆</h3><p>由于 Linux 在远程服务器上，一般不能直接在上面操作，所以有各种各样的客户端软件用来远程连接 Linux，比如 XShell、MobaXterm等。</p>\n<p><strong>连接方法：</strong> <br></p>\n<ul>\n<li>要知道 Linux 的 IP 地址、用户名以及对应的密码</li>\n<li>虚拟机和本地机要能 ping 通</li>\n</ul>\n<p><strong>注意：</strong>虚拟机开机是不启动网卡的，需要手动调成自动开机启动。</p>\n<h3 id=\"修改-Nat-连接方式\"><a href=\"#修改-Nat-连接方式\" class=\"headerlink\" title=\"修改 Nat 连接方式\"></a>修改 Nat 连接方式</h3><p>Nat 方式是给虚拟机一个独立的网卡，特点是稳定、IP不变。<br><br>虚拟机右键 -&gt; 设置 -&gt; 网络适配器 -&gt; 右侧选自定义-vmnet8 -&gt; 保存 <br><br>虚拟机 -&gt; 编辑 -&gt; 虚拟网络适配器 -&gt; 更改设置 -&gt; 将 net8 改为 NAT 模式 -&gt; 保存</p>\n<hr>\n<h3 id=\"Linux-命令\"><a href=\"#Linux-命令\" class=\"headerlink\" title=\"Linux 命令\"></a>Linux 命令</h3><p><strong>Tip：</strong> <br><br>命令查询<a href=\"http://man.linuxde.net/\" target=\"_blank\" rel=\"noopener\">网址</a> ，此网站仅供参考<br><br>Tab 键是命令提示</p>\n<p><strong>基本语法：</strong> <em>命令名 -选项 参数</em></p>\n<h4 id=\"cd-切换目录-，注意区分相对路径和绝对路径的概念\"><a href=\"#cd-切换目录-，注意区分相对路径和绝对路径的概念\" class=\"headerlink\" title=\"cd 切换目录 ，注意区分相对路径和绝对路径的概念\"></a><a href=\"http://man.linuxde.net/cd\" target=\"_blank\" rel=\"noopener\">cd</a> 切换目录 ，注意区分相对路径和绝对路径的概念</h4><!--�27-->\n\n<h4 id=\"ls-ll-查看目录\"><a href=\"#ls-ll-查看目录\" class=\"headerlink\" title=\"ls ll 查看目录\"></a><a href=\"http://man.linuxde.net/ls\" target=\"_blank\" rel=\"noopener\">ls</a> ll 查看目录</h4><!--�28-->\n\n<h4 id=\"rm-删除文件\"><a href=\"#rm-删除文件\" class=\"headerlink\" title=\"rm 删除文件\"></a><a href=\"http://man.linuxde.net/rm\" target=\"_blank\" rel=\"noopener\">rm</a> 删除文件</h4><!--�29-->\n\n<h4 id=\"mv-移动文件\"><a href=\"#mv-移动文件\" class=\"headerlink\" title=\"mv 移动文件\"></a><a href=\"http://man.linuxde.net/mv\" target=\"_blank\" rel=\"noopener\">mv</a> 移动文件</h4><!--�30-->\n\n<h4 id=\"touch-创建-更新文件\"><a href=\"#touch-创建-更新文件\" class=\"headerlink\" title=\"touch 创建/更新文件\"></a><a href=\"http://man.linuxde.net/touch\" target=\"_blank\" rel=\"noopener\">touch</a> 创建/更新文件</h4><!--�31-->\n\n<h4 id=\"vi-vim-文本编辑\"><a href=\"#vi-vim-文本编辑\" class=\"headerlink\" title=\"vi/vim 文本编辑\"></a><a href=\"http://man.linuxde.net/vi\" target=\"_blank\" rel=\"noopener\">vi/vim</a> 文本编辑</h4><!--�32-->\n\n<h4 id=\"cat-查看文本内容\"><a href=\"#cat-查看文本内容\" class=\"headerlink\" title=\"cat 查看文本内容\"></a><a href=\"http://man.linuxde.net/cat\" target=\"_blank\" rel=\"noopener\">cat</a> 查看文本内容</h4><!--�33-->\n\n<h4 id=\"tar-归档压缩\"><a href=\"#tar-归档压缩\" class=\"headerlink\" title=\"tar 归档压缩\"></a><a href=\"http://man.linuxde.net/tar\" target=\"_blank\" rel=\"noopener\">tar</a> 归档压缩</h4><!--�34-->"},{"layout":"post","title":"Python 自动登陆 WiFi 和 拨号","date":"2018-01-24T05:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe mighty desert is burning for the love of a blade of grass who shakes her head and laughs and flies away. \n    广袤无垠的沙漠热烈地追求着一叶绿草的爱，但她摇摇头，笑起来，飞了开去。\n{% endblockquote %}\n\n<!-- more -->\n    \n## 登陆 WiFi\n\n用 Python 自动登陆WiFi的原理是利用 Requests 发送一个http请求，并得到相应的回复，以完成登陆 WiFi 的目的。\n我们学校用的是深澜的校园网认证系统。\n\n### 获取请求头\n\n获取请求头最好的办法是在登陆页面查看 Headers：F12 打开开发者工具，选择 Network 选项，但是现在该选项是空的，刷新一次即可看到所有网络请求。\n\nName 一栏，点击当前主页，选中 Headers，在 Request Headers 里即可看到你打开该页面时浏览器向服务器发送的所有请求。\n\n### 获取 data\n\n要知道你点击登陆时浏览器发送了那些数据(当然是有用户名和密码的)，就要点击登陆进行测试。该测试最好在断开 WiFi 的情况下进行。\n登陆页面上点击登陆或注销，在 Network-Name 一栏里就会出现相应的数据报，点击查看 Form Data 并记录，即完成信息的收集\n\n*注意：*登陆时的密码是已经加密了的，仔细观察 network-Name 栏会发现如 base64.js （或MD5）的js文件，说明密码的加密是用的 base64 加密，这样子如果想自己加密密码的话可以导入 base64 的包自行加密。当然也可以直接写入 Form Data 的加密过了的密码。\n\n### 代码\n\n*注意：*代码为美观已把制表符 ('\\t') 全部替换为四个空格\n\n``` python\n#! python2\n#encoding: utf-8\n\nimport os\nimport requests as Req\n\nclass conn(object):\n    def __init__(self):\n        self.post_url = \"http://10.10.8.2:801/srun_portal_pc.php?ac_id=3&\"\n        self.username = # 这里填写用户名\n        self.password = # 这里填写密码\n        self.login_headers = {\n            'Host': '10.10.8.2:801',\n            'Connection': 'keep-alive',\n            'Cache-Control': 'max-age=0',\n            'Upgrade-Insecure-Requests': '1',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n            'Accept': 'text/html,application/xhtml+xml,application/xml;\\\n                q=0.9,image/webp,image/apng,*/*;q=0.8',\n            'Referer': 'http://10.10.8.2/index_3.html',\n            'Accept-Encoding': 'gzip, deflate',\n            'Accept-Language': 'zh-CN,zh;q=0.9',\n            'Cookie': 'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\\n                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\\n                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\\n                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\\n                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'\n            }\n        self.login_data = {\n            'action': 'login',\n            'username': self.username,\n            'password': ,# 这里填写加密了的密码，通常是 \"{B}\"+base64.b64.encode(password)\n            'ac_id': '3',\n            'save_me': '1',\n            'ajax': '1'\n            }\n        self.logout_headers = {\n            'Host': '10.10.8.2:801',\n            'Proxy-Connection': 'keep-alive',\n            'Content-Length': '57',\n            'Accept': '*/*',\n            'Origin': 'http://10.10.8.2:803',\n            'X-Requested-With': 'XMLHttpRequest',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Referer': 'http://10.10.8.2:803/srun_portal_pc.php?ac_id=3&',\n            'Accept-Encoding': 'gzip, deflate',\n            'Accept-Language': 'zh-CN,zh;q=0.9',\n            'Cookie': 'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\\n                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\\n                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\\n                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\\n                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D',\n            }\n        self.logout_data = {\n            'action': 'logout',\n            'username': self.username,\n            'password': self.password,\n            'ajax': '1'\n            }\n    \n    def wifi_connect(self):\n        response = Req.post(url=self.post_url, data=self.login_data, headers=self.login_headers)\n        print (\"状态码: \", response.status_code)\n        print (\"响应头: \", response.headers)\n        print (\"响应内容\", response.text.encode('UTF-8'))\n        os.system('pause')\n\n    def wifi_disconn(self):\n        response = Req.post(url=self.post_url, data=self.logout_data, headers=self.logout_headers)\n        print (\"状态码: \", response.status_code)\n        print (\"响应头: \", response.headers)\n        print (\"响应内容\", response.text.encode('UTF-8'))\n        os.system('pause')\n\ndef main():\n    connect = conn()\n    detect = os.system('ping baidu.com -n 1')\n    if detect:\n        connect.wifi_connect()\n    else:\n        connect.wifi_disconn()\n\nif __name__ == '__main__':\n    main()\n    \n``` \n\n## 自动拨号\n\nWindows 下自动拨号比较简单，就是利用 os 库模拟 cmd 命令，没有技术含量。但是值得注意的是，在我的电脑上，命令行执行没有问题，但是放到脚本里会报错。\n\n\"你没有连接到 xxx。<br>\n命令已完成。\"\n\n``` python\n#coding: utf-8\nimport os\n\nconn=u\"rasdial 鱼丸粗面a 2015212605 ****\"\ndisc=\"rasdial 鱼丸粗面a /disconnect\"\n\nos.system(conn) # 连接\nos.system(disc) # 断开\n``` ","source":"_posts/2018-01-24-connect-to-internet.markdown","raw":"---\nlayout: post\ntitle: Python 自动登陆 WiFi 和 拨号\ndate: 2018-01-24 00:00:00 +0300\ncategories:\n- Python\ntags: [Python, 网络编程] # add tag\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe mighty desert is burning for the love of a blade of grass who shakes her head and laughs and flies away. \n    广袤无垠的沙漠热烈地追求着一叶绿草的爱，但她摇摇头，笑起来，飞了开去。\n{% endblockquote %}\n\n<!-- more -->\n    \n## 登陆 WiFi\n\n用 Python 自动登陆WiFi的原理是利用 Requests 发送一个http请求，并得到相应的回复，以完成登陆 WiFi 的目的。\n我们学校用的是深澜的校园网认证系统。\n\n### 获取请求头\n\n获取请求头最好的办法是在登陆页面查看 Headers：F12 打开开发者工具，选择 Network 选项，但是现在该选项是空的，刷新一次即可看到所有网络请求。\n\nName 一栏，点击当前主页，选中 Headers，在 Request Headers 里即可看到你打开该页面时浏览器向服务器发送的所有请求。\n\n### 获取 data\n\n要知道你点击登陆时浏览器发送了那些数据(当然是有用户名和密码的)，就要点击登陆进行测试。该测试最好在断开 WiFi 的情况下进行。\n登陆页面上点击登陆或注销，在 Network-Name 一栏里就会出现相应的数据报，点击查看 Form Data 并记录，即完成信息的收集\n\n*注意：*登陆时的密码是已经加密了的，仔细观察 network-Name 栏会发现如 base64.js （或MD5）的js文件，说明密码的加密是用的 base64 加密，这样子如果想自己加密密码的话可以导入 base64 的包自行加密。当然也可以直接写入 Form Data 的加密过了的密码。\n\n### 代码\n\n*注意：*代码为美观已把制表符 ('\\t') 全部替换为四个空格\n\n``` python\n#! python2\n#encoding: utf-8\n\nimport os\nimport requests as Req\n\nclass conn(object):\n    def __init__(self):\n        self.post_url = \"http://10.10.8.2:801/srun_portal_pc.php?ac_id=3&\"\n        self.username = # 这里填写用户名\n        self.password = # 这里填写密码\n        self.login_headers = {\n            'Host': '10.10.8.2:801',\n            'Connection': 'keep-alive',\n            'Cache-Control': 'max-age=0',\n            'Upgrade-Insecure-Requests': '1',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n            'Accept': 'text/html,application/xhtml+xml,application/xml;\\\n                q=0.9,image/webp,image/apng,*/*;q=0.8',\n            'Referer': 'http://10.10.8.2/index_3.html',\n            'Accept-Encoding': 'gzip, deflate',\n            'Accept-Language': 'zh-CN,zh;q=0.9',\n            'Cookie': 'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\\n                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\\n                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\\n                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\\n                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'\n            }\n        self.login_data = {\n            'action': 'login',\n            'username': self.username,\n            'password': ,# 这里填写加密了的密码，通常是 \"{B}\"+base64.b64.encode(password)\n            'ac_id': '3',\n            'save_me': '1',\n            'ajax': '1'\n            }\n        self.logout_headers = {\n            'Host': '10.10.8.2:801',\n            'Proxy-Connection': 'keep-alive',\n            'Content-Length': '57',\n            'Accept': '*/*',\n            'Origin': 'http://10.10.8.2:803',\n            'X-Requested-With': 'XMLHttpRequest',\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Referer': 'http://10.10.8.2:803/srun_portal_pc.php?ac_id=3&',\n            'Accept-Encoding': 'gzip, deflate',\n            'Accept-Language': 'zh-CN,zh;q=0.9',\n            'Cookie': 'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\\n                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\\n                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\\n                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\\n                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D',\n            }\n        self.logout_data = {\n            'action': 'logout',\n            'username': self.username,\n            'password': self.password,\n            'ajax': '1'\n            }\n    \n    def wifi_connect(self):\n        response = Req.post(url=self.post_url, data=self.login_data, headers=self.login_headers)\n        print (\"状态码: \", response.status_code)\n        print (\"响应头: \", response.headers)\n        print (\"响应内容\", response.text.encode('UTF-8'))\n        os.system('pause')\n\n    def wifi_disconn(self):\n        response = Req.post(url=self.post_url, data=self.logout_data, headers=self.logout_headers)\n        print (\"状态码: \", response.status_code)\n        print (\"响应头: \", response.headers)\n        print (\"响应内容\", response.text.encode('UTF-8'))\n        os.system('pause')\n\ndef main():\n    connect = conn()\n    detect = os.system('ping baidu.com -n 1')\n    if detect:\n        connect.wifi_connect()\n    else:\n        connect.wifi_disconn()\n\nif __name__ == '__main__':\n    main()\n    \n``` \n\n## 自动拨号\n\nWindows 下自动拨号比较简单，就是利用 os 库模拟 cmd 命令，没有技术含量。但是值得注意的是，在我的电脑上，命令行执行没有问题，但是放到脚本里会报错。\n\n\"你没有连接到 xxx。<br>\n命令已完成。\"\n\n``` python\n#coding: utf-8\nimport os\n\nconn=u\"rasdial 鱼丸粗面a 2015212605 ****\"\ndisc=\"rasdial 鱼丸粗面a /disconnect\"\n\nos.system(conn) # 连接\nos.system(disc) # 断开\n``` ","slug":"connect-to-internet","published":1,"updated":"2019-03-04T13:16:30.714Z","comments":1,"photos":[],"link":"","_id":"cjwj070ce000gm8za2crmnbz1","content":"<blockquote><p>The mighty desert is burning for the love of a blade of grass who shakes her head and laughs and flies away.<br>    广袤无垠的沙漠热烈地追求着一叶绿草的爱，但她摇摇头，笑起来，飞了开去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"登陆-WiFi\"><a href=\"#登陆-WiFi\" class=\"headerlink\" title=\"登陆 WiFi\"></a>登陆 WiFi</h2><p>用 Python 自动登陆WiFi的原理是利用 Requests 发送一个http请求，并得到相应的回复，以完成登陆 WiFi 的目的。<br>我们学校用的是深澜的校园网认证系统。</p>\n<h3 id=\"获取请求头\"><a href=\"#获取请求头\" class=\"headerlink\" title=\"获取请求头\"></a>获取请求头</h3><p>获取请求头最好的办法是在登陆页面查看 Headers：F12 打开开发者工具，选择 Network 选项，但是现在该选项是空的，刷新一次即可看到所有网络请求。</p>\n<p>Name 一栏，点击当前主页，选中 Headers，在 Request Headers 里即可看到你打开该页面时浏览器向服务器发送的所有请求。</p>\n<h3 id=\"获取-data\"><a href=\"#获取-data\" class=\"headerlink\" title=\"获取 data\"></a>获取 data</h3><p>要知道你点击登陆时浏览器发送了那些数据(当然是有用户名和密码的)，就要点击登陆进行测试。该测试最好在断开 WiFi 的情况下进行。<br>登陆页面上点击登陆或注销，在 Network-Name 一栏里就会出现相应的数据报，点击查看 Form Data 并记录，即完成信息的收集</p>\n<p><em>注意：</em>登陆时的密码是已经加密了的，仔细观察 network-Name 栏会发现如 base64.js （或MD5）的js文件，说明密码的加密是用的 base64 加密，这样子如果想自己加密密码的话可以导入 base64 的包自行加密。当然也可以直接写入 Form Data 的加密过了的密码。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><em>注意：</em>代码为美观已把制表符 (‘\\t’) 全部替换为四个空格</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python2</span>\n<span class=\"comment\">#encoding: utf-8</span>\n\n<span class=\"keyword\">import</span> os\n<span class=\"keyword\">import</span> requests <span class=\"keyword\">as</span> Req\n\n<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">conn</span><span class=\"params\">(object)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span>\n        self.post_url = <span class=\"string\">\"http://10.10.8.2:801/srun_portal_pc.php?ac_id=3&amp;\"</span>\n        self.username = <span class=\"comment\"># 这里填写用户名</span>\n        self.password = <span class=\"comment\"># 这里填写密码</span>\n        self.login_headers = {\n            <span class=\"string\">'Host'</span>: <span class=\"string\">'10.10.8.2:801'</span>,\n            <span class=\"string\">'Connection'</span>: <span class=\"string\">'keep-alive'</span>,\n            <span class=\"string\">'Cache-Control'</span>: <span class=\"string\">'max-age=0'</span>,\n            <span class=\"string\">'Upgrade-Insecure-Requests'</span>: <span class=\"string\">'1'</span>,\n            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\</span>\n<span class=\"string\">                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,\n            <span class=\"string\">'Accept'</span>: <span class=\"string\">'text/html,application/xhtml+xml,application/xml;\\</span>\n<span class=\"string\">                q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,\n            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://10.10.8.2/index_3.html'</span>,\n            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'gzip, deflate'</span>,\n            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.9'</span>,\n            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\</span>\n<span class=\"string\">                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\</span>\n<span class=\"string\">                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\</span>\n<span class=\"string\">                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\</span>\n<span class=\"string\">                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'</span>\n            }\n        self.login_data = {\n            <span class=\"string\">'action'</span>: <span class=\"string\">'login'</span>,\n            <span class=\"string\">'username'</span>: self.username,\n            <span class=\"string\">'password'</span>: ,<span class=\"comment\"># 这里填写加密了的密码，通常是 \"{B}\"+base64.b64.encode(password)</span>\n            <span class=\"string\">'ac_id'</span>: <span class=\"string\">'3'</span>,\n            <span class=\"string\">'save_me'</span>: <span class=\"string\">'1'</span>,\n            <span class=\"string\">'ajax'</span>: <span class=\"string\">'1'</span>\n            }\n        self.logout_headers = {\n            <span class=\"string\">'Host'</span>: <span class=\"string\">'10.10.8.2:801'</span>,\n            <span class=\"string\">'Proxy-Connection'</span>: <span class=\"string\">'keep-alive'</span>,\n            <span class=\"string\">'Content-Length'</span>: <span class=\"string\">'57'</span>,\n            <span class=\"string\">'Accept'</span>: <span class=\"string\">'*/*'</span>,\n            <span class=\"string\">'Origin'</span>: <span class=\"string\">'http://10.10.8.2:803'</span>,\n            <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,\n            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\</span>\n<span class=\"string\">                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,\n            <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span>,\n            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://10.10.8.2:803/srun_portal_pc.php?ac_id=3&amp;'</span>,\n            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'gzip, deflate'</span>,\n            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.9'</span>,\n            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\</span>\n<span class=\"string\">                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\</span>\n<span class=\"string\">                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\</span>\n<span class=\"string\">                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\</span>\n<span class=\"string\">                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'</span>,\n            }\n        self.logout_data = {\n            <span class=\"string\">'action'</span>: <span class=\"string\">'logout'</span>,\n            <span class=\"string\">'username'</span>: self.username,\n            <span class=\"string\">'password'</span>: self.password,\n            <span class=\"string\">'ajax'</span>: <span class=\"string\">'1'</span>\n            }\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifi_connect</span><span class=\"params\">(self)</span>:</span>\n        response = Req.post(url=self.post_url, data=self.login_data, headers=self.login_headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"状态码: \"</span>, response.status_code)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应头: \"</span>, response.headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应内容\"</span>, response.text.encode(<span class=\"string\">'UTF-8'</span>))\n        os.system(<span class=\"string\">'pause'</span>)\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifi_disconn</span><span class=\"params\">(self)</span>:</span>\n        response = Req.post(url=self.post_url, data=self.logout_data, headers=self.logout_headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"状态码: \"</span>, response.status_code)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应头: \"</span>, response.headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应内容\"</span>, response.text.encode(<span class=\"string\">'UTF-8'</span>))\n        os.system(<span class=\"string\">'pause'</span>)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span>\n    connect = conn()\n    detect = os.system(<span class=\"string\">'ping baidu.com -n 1'</span>)\n    <span class=\"keyword\">if</span> detect:\n        connect.wifi_connect()\n    <span class=\"keyword\">else</span>:\n        connect.wifi_disconn()\n\n<span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:\n    main()\n</code></pre>\n<h2 id=\"自动拨号\"><a href=\"#自动拨号\" class=\"headerlink\" title=\"自动拨号\"></a>自动拨号</h2><p>Windows 下自动拨号比较简单，就是利用 os 库模拟 cmd 命令，没有技术含量。但是值得注意的是，在我的电脑上，命令行执行没有问题，但是放到脚本里会报错。</p>\n<p>“你没有连接到 xxx。<br><br>命令已完成。”</p>\n<pre><code class=\"python\"><span class=\"comment\">#coding: utf-8</span>\n<span class=\"keyword\">import</span> os\n\nconn=<span class=\"string\">u\"rasdial 鱼丸粗面a 2015212605 ****\"</span>\ndisc=<span class=\"string\">\"rasdial 鱼丸粗面a /disconnect\"</span>\n\nos.system(conn) <span class=\"comment\"># 连接</span>\nos.system(disc) <span class=\"comment\"># 断开</span></code></pre>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The mighty desert is burning for the love of a blade of grass who shakes her head and laughs and flies away.<br>    广袤无垠的沙漠热烈地追求着一叶绿草的爱，但她摇摇头，笑起来，飞了开去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h2 id=\"登陆-WiFi\"><a href=\"#登陆-WiFi\" class=\"headerlink\" title=\"登陆 WiFi\"></a>登陆 WiFi</h2><p>用 Python 自动登陆WiFi的原理是利用 Requests 发送一个http请求，并得到相应的回复，以完成登陆 WiFi 的目的。<br>我们学校用的是深澜的校园网认证系统。</p>\n<h3 id=\"获取请求头\"><a href=\"#获取请求头\" class=\"headerlink\" title=\"获取请求头\"></a>获取请求头</h3><p>获取请求头最好的办法是在登陆页面查看 Headers：F12 打开开发者工具，选择 Network 选项，但是现在该选项是空的，刷新一次即可看到所有网络请求。</p>\n<p>Name 一栏，点击当前主页，选中 Headers，在 Request Headers 里即可看到你打开该页面时浏览器向服务器发送的所有请求。</p>\n<h3 id=\"获取-data\"><a href=\"#获取-data\" class=\"headerlink\" title=\"获取 data\"></a>获取 data</h3><p>要知道你点击登陆时浏览器发送了那些数据(当然是有用户名和密码的)，就要点击登陆进行测试。该测试最好在断开 WiFi 的情况下进行。<br>登陆页面上点击登陆或注销，在 Network-Name 一栏里就会出现相应的数据报，点击查看 Form Data 并记录，即完成信息的收集</p>\n<p><em>注意：</em>登陆时的密码是已经加密了的，仔细观察 network-Name 栏会发现如 base64.js （或MD5）的js文件，说明密码的加密是用的 base64 加密，这样子如果想自己加密密码的话可以导入 base64 的包自行加密。当然也可以直接写入 Form Data 的加密过了的密码。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><em>注意：</em>代码为美观已把制表符 (‘\\t’) 全部替换为四个空格</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python2</span>\n<span class=\"comment\">#encoding: utf-8</span>\n\n<span class=\"keyword\">import</span> os\n<span class=\"keyword\">import</span> requests <span class=\"keyword\">as</span> Req\n\n<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">conn</span><span class=\"params\">(object)</span>:</span>\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span>\n        self.post_url = <span class=\"string\">\"http://10.10.8.2:801/srun_portal_pc.php?ac_id=3&amp;\"</span>\n        self.username = <span class=\"comment\"># 这里填写用户名</span>\n        self.password = <span class=\"comment\"># 这里填写密码</span>\n        self.login_headers = {\n            <span class=\"string\">'Host'</span>: <span class=\"string\">'10.10.8.2:801'</span>,\n            <span class=\"string\">'Connection'</span>: <span class=\"string\">'keep-alive'</span>,\n            <span class=\"string\">'Cache-Control'</span>: <span class=\"string\">'max-age=0'</span>,\n            <span class=\"string\">'Upgrade-Insecure-Requests'</span>: <span class=\"string\">'1'</span>,\n            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\</span>\n<span class=\"string\">                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,\n            <span class=\"string\">'Accept'</span>: <span class=\"string\">'text/html,application/xhtml+xml,application/xml;\\</span>\n<span class=\"string\">                q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,\n            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://10.10.8.2/index_3.html'</span>,\n            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'gzip, deflate'</span>,\n            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.9'</span>,\n            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\</span>\n<span class=\"string\">                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\</span>\n<span class=\"string\">                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\</span>\n<span class=\"string\">                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\</span>\n<span class=\"string\">                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'</span>\n            }\n        self.login_data = {\n            <span class=\"string\">'action'</span>: <span class=\"string\">'login'</span>,\n            <span class=\"string\">'username'</span>: self.username,\n            <span class=\"string\">'password'</span>: ,<span class=\"comment\"># 这里填写加密了的密码，通常是 \"{B}\"+base64.b64.encode(password)</span>\n            <span class=\"string\">'ac_id'</span>: <span class=\"string\">'3'</span>,\n            <span class=\"string\">'save_me'</span>: <span class=\"string\">'1'</span>,\n            <span class=\"string\">'ajax'</span>: <span class=\"string\">'1'</span>\n            }\n        self.logout_headers = {\n            <span class=\"string\">'Host'</span>: <span class=\"string\">'10.10.8.2:801'</span>,\n            <span class=\"string\">'Proxy-Connection'</span>: <span class=\"string\">'keep-alive'</span>,\n            <span class=\"string\">'Content-Length'</span>: <span class=\"string\">'57'</span>,\n            <span class=\"string\">'Accept'</span>: <span class=\"string\">'*/*'</span>,\n            <span class=\"string\">'Origin'</span>: <span class=\"string\">'http://10.10.8.2:803'</span>,\n            <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,\n            <span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\</span>\n<span class=\"string\">                AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,\n            <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span>,\n            <span class=\"string\">'Referer'</span>: <span class=\"string\">'http://10.10.8.2:803/srun_portal_pc.php?ac_id=3&amp;'</span>,\n            <span class=\"string\">'Accept-Encoding'</span>: <span class=\"string\">'gzip, deflate'</span>,\n            <span class=\"string\">'Accept-Language'</span>: <span class=\"string\">'zh-CN,zh;q=0.9'</span>,\n            <span class=\"string\">'Cookie'</span>: <span class=\"string\">'login=bQ0pOyR6IXU7PJaQQqRAcBPxGAvxAcroYylaKZYk0c%\\</span>\n<span class=\"string\">                252Fq867bbRsRHvJQZaJnkCcFccbII9J6frGj6wJSCrpp%252Blg9n1pbnr4\\</span>\n<span class=\"string\">                ywa7fTlPvrkdU62P6Evm5v0udhgtIcVXLjCUfu9%252BDEmyZUVldnmfPop6\\</span>\n<span class=\"string\">                1pjVIRxZ5KLhArGI9tCOvJNxdTMmLCBU%252Fwukw%252BuvtiKv9J9RYUVP\\</span>\n<span class=\"string\">                5nAPFqLBoHp12OtUq3dRN%252FIAxfnHsqNeIsQ%253D%253D'</span>,\n            }\n        self.logout_data = {\n            <span class=\"string\">'action'</span>: <span class=\"string\">'logout'</span>,\n            <span class=\"string\">'username'</span>: self.username,\n            <span class=\"string\">'password'</span>: self.password,\n            <span class=\"string\">'ajax'</span>: <span class=\"string\">'1'</span>\n            }\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifi_connect</span><span class=\"params\">(self)</span>:</span>\n        response = Req.post(url=self.post_url, data=self.login_data, headers=self.login_headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"状态码: \"</span>, response.status_code)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应头: \"</span>, response.headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应内容\"</span>, response.text.encode(<span class=\"string\">'UTF-8'</span>))\n        os.system(<span class=\"string\">'pause'</span>)\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wifi_disconn</span><span class=\"params\">(self)</span>:</span>\n        response = Req.post(url=self.post_url, data=self.logout_data, headers=self.logout_headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"状态码: \"</span>, response.status_code)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应头: \"</span>, response.headers)\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"响应内容\"</span>, response.text.encode(<span class=\"string\">'UTF-8'</span>))\n        os.system(<span class=\"string\">'pause'</span>)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span>\n    connect = conn()\n    detect = os.system(<span class=\"string\">'ping baidu.com -n 1'</span>)\n    <span class=\"keyword\">if</span> detect:\n        connect.wifi_connect()\n    <span class=\"keyword\">else</span>:\n        connect.wifi_disconn()\n\n<span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:\n    main()\n</code></pre>\n<h2 id=\"自动拨号\"><a href=\"#自动拨号\" class=\"headerlink\" title=\"自动拨号\"></a>自动拨号</h2><p>Windows 下自动拨号比较简单，就是利用 os 库模拟 cmd 命令，没有技术含量。但是值得注意的是，在我的电脑上，命令行执行没有问题，但是放到脚本里会报错。</p>\n<p>“你没有连接到 xxx。<br><br>命令已完成。”</p>\n<pre><code class=\"python\"><span class=\"comment\">#coding: utf-8</span>\n<span class=\"keyword\">import</span> os\n\nconn=<span class=\"string\">u\"rasdial 鱼丸粗面a 2015212605 ****\"</span>\ndisc=<span class=\"string\">\"rasdial 鱼丸粗面a /disconnect\"</span>\n\nos.system(conn) <span class=\"comment\"># 连接</span>\nos.system(disc) <span class=\"comment\"># 断开</span></code></pre>"},{"layout":"post","title":"Hadoop 的安装","date":"2018-01-12T00:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nMy heart beats her waves at the shore of the world and writes upon it her signature in tears with the words, \"I love thee.\"\n我的心冲激着她的波浪在“世界”的海岸上，蘸着眼泪在上边写着她的题记：“我爱你。”\n{% endblockquote %}\n\n<!-- more -->\n\n### 大数据与 Hadoop 简单介绍\n\n**什么是大数据？**\n\n大数据的4V特性：海量的数据规模（volume）、快速的数据流转和动态的数据体系（velocity）、多样的数据类型（variety）和巨大的数据价值（value）。\n\n**Hadoop**\n\nHadoop 解决的就是 数据的存储（HDFS）和计算分析（MapReduce）的问题。\n\n分布式集群：集群里的每台机器叫一个节点，伪分布式只有一个节点。master 节点负责管理元数据 (Name Node)，slave 负责存储数据 (Data Node)。\n\n保存数据块的信息的数据叫元数据，数据块默认为128MB(Hadoop2)，默认备份3份。\n### Hadoop 平台的搭建\n\n**Hadoop 搭建前提：**需要安装 jdk 和 SSH 免密。\n\n**搭建步骤**\n\n1. 上传 Jdk 和 Hadoop 的包到服务器\n2. 解压\n3. 修改解压后文件夹名，方便以后升级而不用修改环境变量\n4. 配置环境变量，路径：用户家目录的 “.bashrc”\n``` shell\nexport JAVA_HOME=/home/groot/soft/jdk\nexport HADOOP_HOME=/home/groot/soft/hadoop\nexport PATH=$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:${PATH}\n```\n5. 修改配置文件，路径 /home/groot/hadoop/etc/hadoop/\n> `A: hadoop-env.sh 找到 “# export JAVA_HOME=${JAVA_HOME}” 字样，在下方修改 jdk 的安装路径 ` <br>\n> `B: core-site.xml 配置访问的主机名和端口 (8020)，<name>fs.default.name</name> <value>hdfs://master:8020</value>` <br>\n> `C: hdfs-site 配置备份数，指定元数据和数据块的存储目录` <br>\n> `D: 用户名不一样的地方都需要改` <br>\n> `E: 配置主机名：/etc/sysconfig/network 文件中，修改为 master/slave` <br>\n> `F: 配置 IP 和主机名的映射：/etc/hosts 文件，master 和 slave 都要改` <br>\n> `G: 配置 SSH 免密，假设在 master 节点家目录的 “.ssh” 文件夹` <br>\n>> `a: 生成密钥，ssh-keygen -t rsa -p '' ` <br>\n>> `b: 这是本机免密，cat id_rsa.pub >> authorized_keys` <br>\n>> `c: 上传公钥到slave，scp id_rsa.pub groot@slave:/home/groot/.ssh/aa.pub` <br>\n>> `d: 免密登陆另一台机器，cat aa.pub >> authorized_keys` <br>\n>> `e: slave 节点重复 master 节点的做法` <br>\n6. `./start-all.sh` 启动 Hadoop\n7. 关闭防火墙（需要 root 权限）：`service iptables stop` <br>\n8. 浏览器访问50070端口进入 HDFS 的管理界面\n9. jps 命令查看进程 主要是查看 Name Node 和 Data Node\n\n### HDFS 的 shell 命令\n\n**操作 HDFS 的三种手段**\n\n1. 通过客户端管理界面查看\n2. 通过 HDFS 的 shell 命令\n3. 通过 Java 的 API\n\n**Shell 命令**\n\n执行 Shell 命令的根目录应该是 `hdfs:192.168.208.132:8020/`，但是我们一般用 / 代替\n\n1. 创建目录：`hadoop fs -mkdir` 目录名\n2. 查看目录：`hadoop fs -ls`\n3. 上传文件：`hadoop fs -put` 文件名 路径名\n\n","source":"_posts/2018-01-12-linux-hadoop1.markdown","raw":"---\nlayout: post\ntitle: Hadoop 的安装\ndate: 2018-01-12 00:00:00 +0800\ncategories:\n- 大数据\n- Hadoop\ntags: \n- Hadoop\n- HDFS\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nMy heart beats her waves at the shore of the world and writes upon it her signature in tears with the words, \"I love thee.\"\n我的心冲激着她的波浪在“世界”的海岸上，蘸着眼泪在上边写着她的题记：“我爱你。”\n{% endblockquote %}\n\n<!-- more -->\n\n### 大数据与 Hadoop 简单介绍\n\n**什么是大数据？**\n\n大数据的4V特性：海量的数据规模（volume）、快速的数据流转和动态的数据体系（velocity）、多样的数据类型（variety）和巨大的数据价值（value）。\n\n**Hadoop**\n\nHadoop 解决的就是 数据的存储（HDFS）和计算分析（MapReduce）的问题。\n\n分布式集群：集群里的每台机器叫一个节点，伪分布式只有一个节点。master 节点负责管理元数据 (Name Node)，slave 负责存储数据 (Data Node)。\n\n保存数据块的信息的数据叫元数据，数据块默认为128MB(Hadoop2)，默认备份3份。\n### Hadoop 平台的搭建\n\n**Hadoop 搭建前提：**需要安装 jdk 和 SSH 免密。\n\n**搭建步骤**\n\n1. 上传 Jdk 和 Hadoop 的包到服务器\n2. 解压\n3. 修改解压后文件夹名，方便以后升级而不用修改环境变量\n4. 配置环境变量，路径：用户家目录的 “.bashrc”\n``` shell\nexport JAVA_HOME=/home/groot/soft/jdk\nexport HADOOP_HOME=/home/groot/soft/hadoop\nexport PATH=$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:${PATH}\n```\n5. 修改配置文件，路径 /home/groot/hadoop/etc/hadoop/\n> `A: hadoop-env.sh 找到 “# export JAVA_HOME=${JAVA_HOME}” 字样，在下方修改 jdk 的安装路径 ` <br>\n> `B: core-site.xml 配置访问的主机名和端口 (8020)，<name>fs.default.name</name> <value>hdfs://master:8020</value>` <br>\n> `C: hdfs-site 配置备份数，指定元数据和数据块的存储目录` <br>\n> `D: 用户名不一样的地方都需要改` <br>\n> `E: 配置主机名：/etc/sysconfig/network 文件中，修改为 master/slave` <br>\n> `F: 配置 IP 和主机名的映射：/etc/hosts 文件，master 和 slave 都要改` <br>\n> `G: 配置 SSH 免密，假设在 master 节点家目录的 “.ssh” 文件夹` <br>\n>> `a: 生成密钥，ssh-keygen -t rsa -p '' ` <br>\n>> `b: 这是本机免密，cat id_rsa.pub >> authorized_keys` <br>\n>> `c: 上传公钥到slave，scp id_rsa.pub groot@slave:/home/groot/.ssh/aa.pub` <br>\n>> `d: 免密登陆另一台机器，cat aa.pub >> authorized_keys` <br>\n>> `e: slave 节点重复 master 节点的做法` <br>\n6. `./start-all.sh` 启动 Hadoop\n7. 关闭防火墙（需要 root 权限）：`service iptables stop` <br>\n8. 浏览器访问50070端口进入 HDFS 的管理界面\n9. jps 命令查看进程 主要是查看 Name Node 和 Data Node\n\n### HDFS 的 shell 命令\n\n**操作 HDFS 的三种手段**\n\n1. 通过客户端管理界面查看\n2. 通过 HDFS 的 shell 命令\n3. 通过 Java 的 API\n\n**Shell 命令**\n\n执行 Shell 命令的根目录应该是 `hdfs:192.168.208.132:8020/`，但是我们一般用 / 代替\n\n1. 创建目录：`hadoop fs -mkdir` 目录名\n2. 查看目录：`hadoop fs -ls`\n3. 上传文件：`hadoop fs -put` 文件名 路径名\n\n","slug":"linux-hadoop1","published":1,"updated":"2019-03-04T13:15:13.394Z","comments":1,"photos":[],"link":"","_id":"cjwj070ch000hm8zao6rpauj8","content":"<blockquote><p>My heart beats her waves at the shore of the world and writes upon it her signature in tears with the words, “I love thee.”<br>我的心冲激着她的波浪在“世界”的海岸上，蘸着眼泪在上边写着她的题记：“我爱你。”</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"大数据与-Hadoop-简单介绍\"><a href=\"#大数据与-Hadoop-简单介绍\" class=\"headerlink\" title=\"大数据与 Hadoop 简单介绍\"></a>大数据与 Hadoop 简单介绍</h3><p><strong>什么是大数据？</strong></p>\n<p>大数据的4V特性：海量的数据规模（volume）、快速的数据流转和动态的数据体系（velocity）、多样的数据类型（variety）和巨大的数据价值（value）。</p>\n<p><strong>Hadoop</strong></p>\n<p>Hadoop 解决的就是 数据的存储（HDFS）和计算分析（MapReduce）的问题。</p>\n<p>分布式集群：集群里的每台机器叫一个节点，伪分布式只有一个节点。master 节点负责管理元数据 (Name Node)，slave 负责存储数据 (Data Node)。</p>\n<p>保存数据块的信息的数据叫元数据，数据块默认为128MB(Hadoop2)，默认备份3份。</p>\n<h3 id=\"Hadoop-平台的搭建\"><a href=\"#Hadoop-平台的搭建\" class=\"headerlink\" title=\"Hadoop 平台的搭建\"></a>Hadoop 平台的搭建</h3><p><strong>Hadoop 搭建前提：</strong>需要安装 jdk 和 SSH 免密。</p>\n<p><strong>搭建步骤</strong></p>\n<ol>\n<li><p>上传 Jdk 和 Hadoop 的包到服务器</p>\n</li>\n<li><p>解压</p>\n</li>\n<li><p>修改解压后文件夹名，方便以后升级而不用修改环境变量</p>\n</li>\n<li><p>配置环境变量，路径：用户家目录的 “.bashrc”</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/home/groot/soft/jdk</span><br><span class=\"line\">export HADOOP_HOME=/home/groot/soft/hadoop</span><br><span class=\"line\">export PATH=$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置文件，路径 /home/groot/hadoop/etc/hadoop/</p>\n<blockquote>\n<p><code>A: hadoop-env.sh 找到 “# export JAVA_HOME=${JAVA_HOME}” 字样，在下方修改 jdk 的安装路径</code> <br><br><code>B: core-site.xml 配置访问的主机名和端口 (8020)，&lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://master:8020&lt;/value&gt;</code> <br><br><code>C: hdfs-site 配置备份数，指定元数据和数据块的存储目录</code> <br><br><code>D: 用户名不一样的地方都需要改</code> <br><br><code>E: 配置主机名：/etc/sysconfig/network 文件中，修改为 master/slave</code> <br><br><code>F: 配置 IP 和主机名的映射：/etc/hosts 文件，master 和 slave 都要改</code> <br><br><code>G: 配置 SSH 免密，假设在 master 节点家目录的 “.ssh” 文件夹</code> <br></p>\n<blockquote>\n<p><code>a: 生成密钥，ssh-keygen -t rsa -p &#39;&#39;</code> <br><br><code>b: 这是本机免密，cat id_rsa.pub &gt;&gt; authorized_keys</code> <br><br><code>c: 上传公钥到slave，scp id_rsa.pub groot@slave:/home/groot/.ssh/aa.pub</code> <br><br><code>d: 免密登陆另一台机器，cat aa.pub &gt;&gt; authorized_keys</code> <br><br><code>e: slave 节点重复 master 节点的做法</code> <br></p>\n</blockquote>\n</blockquote>\n</li>\n<li><p><code>./start-all.sh</code> 启动 Hadoop</p>\n</li>\n<li><p>关闭防火墙（需要 root 权限）：<code>service iptables stop</code> <br></p>\n</li>\n<li><p>浏览器访问50070端口进入 HDFS 的管理界面</p>\n</li>\n<li><p>jps 命令查看进程 主要是查看 Name Node 和 Data Node</p>\n</li>\n</ol>\n<h3 id=\"HDFS-的-shell-命令\"><a href=\"#HDFS-的-shell-命令\" class=\"headerlink\" title=\"HDFS 的 shell 命令\"></a>HDFS 的 shell 命令</h3><p><strong>操作 HDFS 的三种手段</strong></p>\n<ol>\n<li>通过客户端管理界面查看</li>\n<li>通过 HDFS 的 shell 命令</li>\n<li>通过 Java 的 API</li>\n</ol>\n<p><strong>Shell 命令</strong></p>\n<p>执行 Shell 命令的根目录应该是 <code>hdfs:192.168.208.132:8020/</code>，但是我们一般用 / 代替</p>\n<ol>\n<li>创建目录：<code>hadoop fs -mkdir</code> 目录名</li>\n<li>查看目录：<code>hadoop fs -ls</code></li>\n<li>上传文件：<code>hadoop fs -put</code> 文件名 路径名</li>\n</ol>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>My heart beats her waves at the shore of the world and writes upon it her signature in tears with the words, “I love thee.”<br>我的心冲激着她的波浪在“世界”的海岸上，蘸着眼泪在上边写着她的题记：“我爱你。”</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"大数据与-Hadoop-简单介绍\"><a href=\"#大数据与-Hadoop-简单介绍\" class=\"headerlink\" title=\"大数据与 Hadoop 简单介绍\"></a>大数据与 Hadoop 简单介绍</h3><p><strong>什么是大数据？</strong></p>\n<p>大数据的4V特性：海量的数据规模（volume）、快速的数据流转和动态的数据体系（velocity）、多样的数据类型（variety）和巨大的数据价值（value）。</p>\n<p><strong>Hadoop</strong></p>\n<p>Hadoop 解决的就是 数据的存储（HDFS）和计算分析（MapReduce）的问题。</p>\n<p>分布式集群：集群里的每台机器叫一个节点，伪分布式只有一个节点。master 节点负责管理元数据 (Name Node)，slave 负责存储数据 (Data Node)。</p>\n<p>保存数据块的信息的数据叫元数据，数据块默认为128MB(Hadoop2)，默认备份3份。</p>\n<h3 id=\"Hadoop-平台的搭建\"><a href=\"#Hadoop-平台的搭建\" class=\"headerlink\" title=\"Hadoop 平台的搭建\"></a>Hadoop 平台的搭建</h3><p><strong>Hadoop 搭建前提：</strong>需要安装 jdk 和 SSH 免密。</p>\n<p><strong>搭建步骤</strong></p>\n<ol>\n<li><p>上传 Jdk 和 Hadoop 的包到服务器</p>\n</li>\n<li><p>解压</p>\n</li>\n<li><p>修改解压后文件夹名，方便以后升级而不用修改环境变量</p>\n</li>\n<li><p>配置环境变量，路径：用户家目录的 “.bashrc”</p>\n<!--�35-->\n</li>\n<li><p>修改配置文件，路径 /home/groot/hadoop/etc/hadoop/</p>\n<blockquote>\n<p><code>A: hadoop-env.sh 找到 “# export JAVA_HOME=${JAVA_HOME}” 字样，在下方修改 jdk 的安装路径</code> <br><br><code>B: core-site.xml 配置访问的主机名和端口 (8020)，&lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://master:8020&lt;/value&gt;</code> <br><br><code>C: hdfs-site 配置备份数，指定元数据和数据块的存储目录</code> <br><br><code>D: 用户名不一样的地方都需要改</code> <br><br><code>E: 配置主机名：/etc/sysconfig/network 文件中，修改为 master/slave</code> <br><br><code>F: 配置 IP 和主机名的映射：/etc/hosts 文件，master 和 slave 都要改</code> <br><br><code>G: 配置 SSH 免密，假设在 master 节点家目录的 “.ssh” 文件夹</code> <br></p>\n<blockquote>\n<p><code>a: 生成密钥，ssh-keygen -t rsa -p &#39;&#39;</code> <br><br><code>b: 这是本机免密，cat id_rsa.pub &gt;&gt; authorized_keys</code> <br><br><code>c: 上传公钥到slave，scp id_rsa.pub groot@slave:/home/groot/.ssh/aa.pub</code> <br><br><code>d: 免密登陆另一台机器，cat aa.pub &gt;&gt; authorized_keys</code> <br><br><code>e: slave 节点重复 master 节点的做法</code> <br></p>\n</blockquote>\n</blockquote>\n</li>\n<li><p><code>./start-all.sh</code> 启动 Hadoop</p>\n</li>\n<li><p>关闭防火墙（需要 root 权限）：<code>service iptables stop</code> <br></p>\n</li>\n<li><p>浏览器访问50070端口进入 HDFS 的管理界面</p>\n</li>\n<li><p>jps 命令查看进程 主要是查看 Name Node 和 Data Node</p>\n</li>\n</ol>\n<h3 id=\"HDFS-的-shell-命令\"><a href=\"#HDFS-的-shell-命令\" class=\"headerlink\" title=\"HDFS 的 shell 命令\"></a>HDFS 的 shell 命令</h3><p><strong>操作 HDFS 的三种手段</strong></p>\n<ol>\n<li>通过客户端管理界面查看</li>\n<li>通过 HDFS 的 shell 命令</li>\n<li>通过 Java 的 API</li>\n</ol>\n<p><strong>Shell 命令</strong></p>\n<p>执行 Shell 命令的根目录应该是 <code>hdfs:192.168.208.132:8020/</code>，但是我们一般用 / 代替</p>\n<ol>\n<li>创建目录：<code>hadoop fs -mkdir</code> 目录名</li>\n<li>查看目录：<code>hadoop fs -ls</code></li>\n<li>上传文件：<code>hadoop fs -put</code> 文件名 路径名</li>\n</ol>"},{"layout":"post","title":"纪念代叔","date":"2018-01-26T00:00:00.000Z","description":"这里藏了一只逗比","_content":"\n代叔( ﾟдﾟ)つBye，我们很想你\n\n希望你早点回来哟(＾Ｕ＾)ノ~ＹＯ\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG)\n\n骚气又幽默的老代，带给我们欢笑与快乐\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG)\n\n","source":"_posts/2018-01-26-for-MR.dai-dai.markdown","raw":"---\nlayout: post\ntitle: 纪念代叔\ndate: 2018-01-26 00:00:00 +0800\ndescription: 这里藏了一只逗比\ncategories: Life\n---\n\n代叔( ﾟдﾟ)つBye，我们很想你\n\n希望你早点回来哟(＾Ｕ＾)ノ~ＹＯ\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG)\n\n骚气又幽默的老代，带给我们欢笑与快乐\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG)\n\n","slug":"for-MR.dai-dai","published":1,"updated":"2019-03-04T12:11:09.191Z","comments":1,"photos":[],"link":"","_id":"cjwj070e0001im8zay42p0l0q","content":"<p>代叔( ﾟдﾟ)つBye，我们很想你</p>\n<p>希望你早点回来哟(＾Ｕ＾)ノ~ＹＯ</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG\" alt></p>\n<p>骚气又幽默的老代，带给我们欢笑与快乐</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG\" alt></p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":"<p>代叔( ﾟдﾟ)つBye，我们很想你</p>\n<p>希望你早点回来哟(＾Ｕ＾)ノ~ＹＯ</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG\" alt></p>\n<p>骚气又幽默的老代，带给我们欢笑与快乐</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG\" alt></p>\n"},{"layout":"post","title":"Python 爬取磁力链","date":"2018-01-27T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe mystery of creation is like the darkness of night------it is great. Delusions of knowledge are like the fog of the morning. \n\t创造的神秘，有如夜间的黑暗，——是伟大的。而知识的幻影，不过是晨间之雾。\n{% endblockquote %}\n\n<!-- more -->\n\n### 海盗湾简介\n\n大名鼎鼎的[**海盗湾**](https://thepiratebay.cd/ \"The Pirate Bay\")，号称是全银河系最大的 BitTorrent 服务器，拥有数百万资源。是一个专门存储、分类及搜索 BitTorrent 种子文件的  *反版权*  网站，现今大多资源的提供形式为磁力链 (Magnet)。\n\n![main page](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png)\n![search page](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png)\n\n### 设计思想\n\n直接构造搜索页面的 url，把要查询的关键字替换掉浏览器查询的关键字，并借此发送请求。由于该网站构造比较简单，可以在搜索界面直接分析，找出磁力链接并进行翻页。\n\n### 代码\n\n**使用注意：**要搜索的内容需要写到 name_list （列表）里，作为变量传到 main() 模块里。\n\n代码为了美观已将制表符替换为四个空格（页面制表符默认显示8个空格）。\n\n**用到的模块**\n{% code lang:python %}\nimport os\nimport re\nimport time\nimport random\nimport urlparse\nimport urllib2 as ulb\nfrom     4 import BeautifulSoup as     \n\n\n'''\n该模块接受要下载的url、用户代理（默认‘wswp’）、\n代理服务器（默认为空）和重新尝试次数（默认为2），\n返回该网页的内容和搜索内容的最大页数（只在第一次返回）。\n'''\ndef download(url, user_agent='wswp', proxy=None, num_retries=2):\n    print (\"Downloading: \" + url)\n    headers = {'User-agent': user_agent}\n    request = ulb.Request(url, headers=headers)\n    opener = ulb.build_opener()\n    if proxy:\n        proxy_params = {urlparse.urlparse(url).scheme: proxy}\n        opener.add_handler(ulb.ProxyHandler(proxy_params))\n    try:\n        html = opener.open(request).read()\n    except ulb.URLError as e:\n        print (\"Download Error:\" + e.reason)\n        html = None\n        if num_retries > 0:\n            if hasattr(e, 'code') and 500 <= e.code < 600:\n                return download(url, user_agent, num_retries-1)\n    if url[-4] == '0':\n        soup =     (html, \"html5lib\")\n        max_href_index = int(soup.find('div',align=\"center\").contents[-4].string) - 1\n        return html, max_href_index\n    else:\n        return html\n\n\n# 根据给定的网页内容，转化为 BeautifulSoup 文档对象，搜索磁力链节点并以列表形式返回\ndef get_links(html):\n    soup =     (html, \"html5lib\")\n    list = soup.find_all('a', href=re.compile(r'^magnet'))\n    return list\n\n\n# 创建一个以关键字命名的文本文件，将下载的磁力链依次写入并保存。\ndef main(name_list):    \n    for name in name_list:\n        page = 0\n        f = open(name+'.txt','a')\n        magnet_num = 0\n        while True:\n            url = \"http://thepiratebay.cd/search/\" + name +\"/\" + str(page) + \"/7/\"\n            if page == 0:\n                html, max_page_index = download(url)\n            else:\n                html = download(url)\n            magnet_list = get_links(html)\n            for magnet in magnet_list:\n                f.write(magnet['href']+'\\n')\n                magnet_num += 1\n            if page < max_page_index:\n                page += 1\n                print(r\"Sleep for one second...\")\n                time.sleep(random.random()*2)\n            else:\n                break\n        print(\"From \"+name+\" get \"+str(magnet_num)+\" magnets\")\n        f.flush()\n        f.close()\n        os.rename(name+'.txt',name+'-'+str(magnet_num)+'.txt')\n{% endcode %} \n\n**总结**\n\n移步[Github](https://github.com/yuwancumian666/Spiders/tree/master/PirateBay)看代码，有惊喜\n\n这好像是第一次比较正式的爬虫，代码比较 low，好在能用么么哒(づ￣ 3￣)づ","source":"_posts/2018-01-27-crawling-magnet-links-from-the-pirate-bay.markdown","raw":"---\nlayout: post\ntitle: Python 爬取磁力链\ndate: 2018-01-27 00:00:00 +0800\ncategories:\n- Python\ntags: [Python, 爬虫] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nThe mystery of creation is like the darkness of night------it is great. Delusions of knowledge are like the fog of the morning. \n\t创造的神秘，有如夜间的黑暗，——是伟大的。而知识的幻影，不过是晨间之雾。\n{% endblockquote %}\n\n<!-- more -->\n\n### 海盗湾简介\n\n大名鼎鼎的[**海盗湾**](https://thepiratebay.cd/ \"The Pirate Bay\")，号称是全银河系最大的 BitTorrent 服务器，拥有数百万资源。是一个专门存储、分类及搜索 BitTorrent 种子文件的  *反版权*  网站，现今大多资源的提供形式为磁力链 (Magnet)。\n\n![main page](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png)\n![search page](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png)\n\n### 设计思想\n\n直接构造搜索页面的 url，把要查询的关键字替换掉浏览器查询的关键字，并借此发送请求。由于该网站构造比较简单，可以在搜索界面直接分析，找出磁力链接并进行翻页。\n\n### 代码\n\n**使用注意：**要搜索的内容需要写到 name_list （列表）里，作为变量传到 main() 模块里。\n\n代码为了美观已将制表符替换为四个空格（页面制表符默认显示8个空格）。\n\n**用到的模块**\n{% code lang:python %}\nimport os\nimport re\nimport time\nimport random\nimport urlparse\nimport urllib2 as ulb\nfrom     4 import BeautifulSoup as     \n\n\n'''\n该模块接受要下载的url、用户代理（默认‘wswp’）、\n代理服务器（默认为空）和重新尝试次数（默认为2），\n返回该网页的内容和搜索内容的最大页数（只在第一次返回）。\n'''\ndef download(url, user_agent='wswp', proxy=None, num_retries=2):\n    print (\"Downloading: \" + url)\n    headers = {'User-agent': user_agent}\n    request = ulb.Request(url, headers=headers)\n    opener = ulb.build_opener()\n    if proxy:\n        proxy_params = {urlparse.urlparse(url).scheme: proxy}\n        opener.add_handler(ulb.ProxyHandler(proxy_params))\n    try:\n        html = opener.open(request).read()\n    except ulb.URLError as e:\n        print (\"Download Error:\" + e.reason)\n        html = None\n        if num_retries > 0:\n            if hasattr(e, 'code') and 500 <= e.code < 600:\n                return download(url, user_agent, num_retries-1)\n    if url[-4] == '0':\n        soup =     (html, \"html5lib\")\n        max_href_index = int(soup.find('div',align=\"center\").contents[-4].string) - 1\n        return html, max_href_index\n    else:\n        return html\n\n\n# 根据给定的网页内容，转化为 BeautifulSoup 文档对象，搜索磁力链节点并以列表形式返回\ndef get_links(html):\n    soup =     (html, \"html5lib\")\n    list = soup.find_all('a', href=re.compile(r'^magnet'))\n    return list\n\n\n# 创建一个以关键字命名的文本文件，将下载的磁力链依次写入并保存。\ndef main(name_list):    \n    for name in name_list:\n        page = 0\n        f = open(name+'.txt','a')\n        magnet_num = 0\n        while True:\n            url = \"http://thepiratebay.cd/search/\" + name +\"/\" + str(page) + \"/7/\"\n            if page == 0:\n                html, max_page_index = download(url)\n            else:\n                html = download(url)\n            magnet_list = get_links(html)\n            for magnet in magnet_list:\n                f.write(magnet['href']+'\\n')\n                magnet_num += 1\n            if page < max_page_index:\n                page += 1\n                print(r\"Sleep for one second...\")\n                time.sleep(random.random()*2)\n            else:\n                break\n        print(\"From \"+name+\" get \"+str(magnet_num)+\" magnets\")\n        f.flush()\n        f.close()\n        os.rename(name+'.txt',name+'-'+str(magnet_num)+'.txt')\n{% endcode %} \n\n**总结**\n\n移步[Github](https://github.com/yuwancumian666/Spiders/tree/master/PirateBay)看代码，有惊喜\n\n这好像是第一次比较正式的爬虫，代码比较 low，好在能用么么哒(づ￣ 3￣)づ","slug":"crawling-magnet-links-from-the-pirate-bay","published":1,"updated":"2019-03-06T14:51:11.643Z","comments":1,"photos":[],"link":"","_id":"cjwj070e1001km8zacjx6s8m6","content":"<blockquote><p>The mystery of creation is like the darkness of night——it is great. Delusions of knowledge are like the fog of the morning.<br>    创造的神秘，有如夜间的黑暗，——是伟大的。而知识的幻影，不过是晨间之雾。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"海盗湾简介\"><a href=\"#海盗湾简介\" class=\"headerlink\" title=\"海盗湾简介\"></a>海盗湾简介</h3><p>大名鼎鼎的<a href=\"https://thepiratebay.cd/\" title=\"The Pirate Bay\" target=\"_blank\" rel=\"noopener\"><strong>海盗湾</strong></a>，号称是全银河系最大的 BitTorrent 服务器，拥有数百万资源。是一个专门存储、分类及搜索 BitTorrent 种子文件的  <em>反版权</em>  网站，现今大多资源的提供形式为磁力链 (Magnet)。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png\" alt=\"main page\"><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png\" alt=\"search page\"></p>\n<h3 id=\"设计思想\"><a href=\"#设计思想\" class=\"headerlink\" title=\"设计思想\"></a>设计思想</h3><p>直接构造搜索页面的 url，把要查询的关键字替换掉浏览器查询的关键字，并借此发送请求。由于该网站构造比较简单，可以在搜索界面直接分析，找出磁力链接并进行翻页。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><strong>使用注意：</strong>要搜索的内容需要写到 name_list （列表）里，作为变量传到 main() 模块里。</p>\n<p>代码为了美观已将制表符替换为四个空格（页面制表符默认显示8个空格）。</p>\n<p><strong>用到的模块</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> urlparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib2 <span class=\"keyword\">as</span> ulb</span><br><span class=\"line\"><span class=\"keyword\">from</span>     <span class=\"number\">4</span> <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span>     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">该模块接受要下载的url、用户代理（默认‘wswp’）、</span></span><br><span class=\"line\"><span class=\"string\">代理服务器（默认为空）和重新尝试次数（默认为2），</span></span><br><span class=\"line\"><span class=\"string\">返回该网页的内容和搜索内容的最大页数（只在第一次返回）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, user_agent=<span class=\"string\">'wswp'</span>, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span> + url)</span><br><span class=\"line\">    headers = &#123;<span class=\"string\">'User-agent'</span>: user_agent&#125;</span><br><span class=\"line\">    request = ulb.Request(url, headers=headers)</span><br><span class=\"line\">    opener = ulb.build_opener()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> proxy:</span><br><span class=\"line\">        proxy_params = &#123;urlparse.urlparse(url).scheme: proxy&#125;</span><br><span class=\"line\">        opener.add_handler(ulb.ProxyHandler(proxy_params))</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        html = opener.open(request).read()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error:\"</span> + e.reason)</span><br><span class=\"line\">        html = <span class=\"literal\">None</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> download(url, user_agent, num_retries<span class=\"number\">-1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> url[<span class=\"number\">-4</span>] == <span class=\"string\">'0'</span>:</span><br><span class=\"line\">        soup =     (html, <span class=\"string\">\"html5lib\"</span>)</span><br><span class=\"line\">        max_href_index = int(soup.find(<span class=\"string\">'div'</span>,align=<span class=\"string\">\"center\"</span>).contents[<span class=\"number\">-4</span>].string) - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> html, max_href_index</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> html</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据给定的网页内容，转化为 BeautifulSoup 文档对象，搜索磁力链节点并以列表形式返回</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_links</span><span class=\"params\">(html)</span>:</span></span><br><span class=\"line\">    soup =     (html, <span class=\"string\">\"html5lib\"</span>)</span><br><span class=\"line\">    list = soup.find_all(<span class=\"string\">'a'</span>, href=re.compile(<span class=\"string\">r'^magnet'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个以关键字命名的文本文件，将下载的磁力链依次写入并保存。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(name_list)</span>:</span>    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> name_list:</span><br><span class=\"line\">        page = <span class=\"number\">0</span></span><br><span class=\"line\">        f = open(name+<span class=\"string\">'.txt'</span>,<span class=\"string\">'a'</span>)</span><br><span class=\"line\">        magnet_num = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            url = <span class=\"string\">\"http://thepiratebay.cd/search/\"</span> + name +<span class=\"string\">\"/\"</span> + str(page) + <span class=\"string\">\"/7/\"</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> page == <span class=\"number\">0</span>:</span><br><span class=\"line\">                html, max_page_index = download(url)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                html = download(url)</span><br><span class=\"line\">            magnet_list = get_links(html)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> magnet <span class=\"keyword\">in</span> magnet_list:</span><br><span class=\"line\">                f.write(magnet[<span class=\"string\">'href'</span>]+<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">                magnet_num += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> page &lt; max_page_index:</span><br><span class=\"line\">                page += <span class=\"number\">1</span></span><br><span class=\"line\">                print(<span class=\"string\">r\"Sleep for one second...\"</span>)</span><br><span class=\"line\">                time.sleep(random.random()*<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        print(<span class=\"string\">\"From \"</span>+name+<span class=\"string\">\" get \"</span>+str(magnet_num)+<span class=\"string\">\" magnets\"</span>)</span><br><span class=\"line\">        f.flush()</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\">        os.rename(name+<span class=\"string\">'.txt'</span>,name+<span class=\"string\">'-'</span>+str(magnet_num)+<span class=\"string\">'.txt'</span>)</span><br></pre></td></tr></table></figure> \n\n<p><strong>总结</strong></p>\n<p>移步<a href=\"https://github.com/yuwancumian666/Spiders/tree/master/PirateBay\" target=\"_blank\" rel=\"noopener\">Github</a>看代码，有惊喜</p>\n<p>这好像是第一次比较正式的爬虫，代码比较 low，好在能用么么哒(づ￣ 3￣)づ</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The mystery of creation is like the darkness of night——it is great. Delusions of knowledge are like the fog of the morning.<br>    创造的神秘，有如夜间的黑暗，——是伟大的。而知识的幻影，不过是晨间之雾。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"海盗湾简介\"><a href=\"#海盗湾简介\" class=\"headerlink\" title=\"海盗湾简介\"></a>海盗湾简介</h3><p>大名鼎鼎的<a href=\"https://thepiratebay.cd/\" title=\"The Pirate Bay\" target=\"_blank\" rel=\"noopener\"><strong>海盗湾</strong></a>，号称是全银河系最大的 BitTorrent 服务器，拥有数百万资源。是一个专门存储、分类及搜索 BitTorrent 种子文件的  <em>反版权</em>  网站，现今大多资源的提供形式为磁力链 (Magnet)。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png\" alt=\"main page\"><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png\" alt=\"search page\"></p>\n<h3 id=\"设计思想\"><a href=\"#设计思想\" class=\"headerlink\" title=\"设计思想\"></a>设计思想</h3><p>直接构造搜索页面的 url，把要查询的关键字替换掉浏览器查询的关键字，并借此发送请求。由于该网站构造比较简单，可以在搜索界面直接分析，找出磁力链接并进行翻页。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p><strong>使用注意：</strong>要搜索的内容需要写到 name_list （列表）里，作为变量传到 main() 模块里。</p>\n<p>代码为了美观已将制表符替换为四个空格（页面制表符默认显示8个空格）。</p>\n<p><strong>用到的模块</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> urlparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib2 <span class=\"keyword\">as</span> ulb</span><br><span class=\"line\"><span class=\"keyword\">from</span>     <span class=\"number\">4</span> <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span>     </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">该模块接受要下载的url、用户代理（默认‘wswp’）、</span></span><br><span class=\"line\"><span class=\"string\">代理服务器（默认为空）和重新尝试次数（默认为2），</span></span><br><span class=\"line\"><span class=\"string\">返回该网页的内容和搜索内容的最大页数（只在第一次返回）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, user_agent=<span class=\"string\">'wswp'</span>, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span> + url)</span><br><span class=\"line\">    headers = &#123;<span class=\"string\">'User-agent'</span>: user_agent&#125;</span><br><span class=\"line\">    request = ulb.Request(url, headers=headers)</span><br><span class=\"line\">    opener = ulb.build_opener()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> proxy:</span><br><span class=\"line\">        proxy_params = &#123;urlparse.urlparse(url).scheme: proxy&#125;</span><br><span class=\"line\">        opener.add_handler(ulb.ProxyHandler(proxy_params))</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        html = opener.open(request).read()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error:\"</span> + e.reason)</span><br><span class=\"line\">        html = <span class=\"literal\">None</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> download(url, user_agent, num_retries<span class=\"number\">-1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> url[<span class=\"number\">-4</span>] == <span class=\"string\">'0'</span>:</span><br><span class=\"line\">        soup =     (html, <span class=\"string\">\"html5lib\"</span>)</span><br><span class=\"line\">        max_href_index = int(soup.find(<span class=\"string\">'div'</span>,align=<span class=\"string\">\"center\"</span>).contents[<span class=\"number\">-4</span>].string) - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> html, max_href_index</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> html</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据给定的网页内容，转化为 BeautifulSoup 文档对象，搜索磁力链节点并以列表形式返回</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_links</span><span class=\"params\">(html)</span>:</span></span><br><span class=\"line\">    soup =     (html, <span class=\"string\">\"html5lib\"</span>)</span><br><span class=\"line\">    list = soup.find_all(<span class=\"string\">'a'</span>, href=re.compile(<span class=\"string\">r'^magnet'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个以关键字命名的文本文件，将下载的磁力链依次写入并保存。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(name_list)</span>:</span>    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> name_list:</span><br><span class=\"line\">        page = <span class=\"number\">0</span></span><br><span class=\"line\">        f = open(name+<span class=\"string\">'.txt'</span>,<span class=\"string\">'a'</span>)</span><br><span class=\"line\">        magnet_num = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            url = <span class=\"string\">\"http://thepiratebay.cd/search/\"</span> + name +<span class=\"string\">\"/\"</span> + str(page) + <span class=\"string\">\"/7/\"</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> page == <span class=\"number\">0</span>:</span><br><span class=\"line\">                html, max_page_index = download(url)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                html = download(url)</span><br><span class=\"line\">            magnet_list = get_links(html)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> magnet <span class=\"keyword\">in</span> magnet_list:</span><br><span class=\"line\">                f.write(magnet[<span class=\"string\">'href'</span>]+<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">                magnet_num += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> page &lt; max_page_index:</span><br><span class=\"line\">                page += <span class=\"number\">1</span></span><br><span class=\"line\">                print(<span class=\"string\">r\"Sleep for one second...\"</span>)</span><br><span class=\"line\">                time.sleep(random.random()*<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        print(<span class=\"string\">\"From \"</span>+name+<span class=\"string\">\" get \"</span>+str(magnet_num)+<span class=\"string\">\" magnets\"</span>)</span><br><span class=\"line\">        f.flush()</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\">        os.rename(name+<span class=\"string\">'.txt'</span>,name+<span class=\"string\">'-'</span>+str(magnet_num)+<span class=\"string\">'.txt'</span>)</span><br></pre></td></tr></table></figure> \n\n<p><strong>总结</strong></p>\n<p>移步<a href=\"https://github.com/yuwancumian666/Spiders/tree/master/PirateBay\" target=\"_blank\" rel=\"noopener\">Github</a>看代码，有惊喜</p>\n<p>这好像是第一次比较正式的爬虫，代码比较 low，好在能用么么哒(づ￣ 3￣)づ</p>"},{"layout":"post","title":"给 GitHub Pages 博客配置云解析","date":"2018-01-28T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThank the flame for its light, but do not fotget the lampholder standing in the shade with coonstancy of patience. \n\t谢谢火焰给你光明，但是不要忘了那执灯的人，他是坚忍地站在黑暗当中呢。\n{% endblockquote %}\n\n<!-- more -->\n\n云解析就是绑定域名，这个域名 “yuwancumian666.top” 是在阿里云注册的，两块钱😄\n在 GitHub Pages 上搭好博客之后可以设置云解析。\n\n### 创建 CNAME 文件\n\n首先在博客的根目录新建一个文件：“CNAME”，内容为要解析的域名：“yuwancumian666.top”，注意不要添加 http://或 www 等前缀。在 Windows 下如果不能建立没有后缀名的文件时，则可以 shift + 右键打开 Power Shell 输入 `echo yuwancumian666.top > CNAME`以建立该文件。\n\n### 设置云解析\n\n在阿里云的控制台找到 “云解析 DNS” 一栏，在域名下添加解析如下：\n\n![cloud-dns](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png)\n\n* 设置主机记录www，记录类型为A，记录值是IP192.30.252.153。其中192.30.252.153是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages\n* 设置主机记录www，记录类型为A，记录值是IP192.30.252.154。\n* 设置主机记录@，记录类型为CNAME，记录值是yuwancumian666.github.io.。表示将 http://yuwancumian666.top 这个主域名映射到  yuwancumian666.github.io\n\n添加完解析之后，等待大约十分钟，你的博客就可以访问了。\n","source":"_posts/2018-01-28-cloud-dns-to-github-pages.markdown","raw":"---\nlayout: post\ntitle: 给 GitHub Pages 博客配置云解析\ndate: 2018-01-28 00:00:00 +0800\ncategories: \n- Github Pages\ntags: [Github Pages] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThank the flame for its light, but do not fotget the lampholder standing in the shade with coonstancy of patience. \n\t谢谢火焰给你光明，但是不要忘了那执灯的人，他是坚忍地站在黑暗当中呢。\n{% endblockquote %}\n\n<!-- more -->\n\n云解析就是绑定域名，这个域名 “yuwancumian666.top” 是在阿里云注册的，两块钱😄\n在 GitHub Pages 上搭好博客之后可以设置云解析。\n\n### 创建 CNAME 文件\n\n首先在博客的根目录新建一个文件：“CNAME”，内容为要解析的域名：“yuwancumian666.top”，注意不要添加 http://或 www 等前缀。在 Windows 下如果不能建立没有后缀名的文件时，则可以 shift + 右键打开 Power Shell 输入 `echo yuwancumian666.top > CNAME`以建立该文件。\n\n### 设置云解析\n\n在阿里云的控制台找到 “云解析 DNS” 一栏，在域名下添加解析如下：\n\n![cloud-dns](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png)\n\n* 设置主机记录www，记录类型为A，记录值是IP192.30.252.153。其中192.30.252.153是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages\n* 设置主机记录www，记录类型为A，记录值是IP192.30.252.154。\n* 设置主机记录@，记录类型为CNAME，记录值是yuwancumian666.github.io.。表示将 http://yuwancumian666.top 这个主域名映射到  yuwancumian666.github.io\n\n添加完解析之后，等待大约十分钟，你的博客就可以访问了。\n","slug":"cloud-dns-to-github-pages","published":1,"updated":"2019-03-12T05:50:06.727Z","comments":1,"photos":[],"link":"","_id":"cjwj070e4001nm8zang94l6ek","content":"<blockquote><p>Thank the flame for its light, but do not fotget the lampholder standing in the shade with coonstancy of patience.<br>谢谢火焰给你光明，但是不要忘了那执灯的人，他是坚忍地站在黑暗当中呢。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<p>云解析就是绑定域名，这个域名 “yuwancumian666.top” 是在阿里云注册的，两块钱😄<br>在 GitHub Pages 上搭好博客之后可以设置云解析。</p>\n<h3 id=\"创建-CNAME-文件\"><a href=\"#创建-CNAME-文件\" class=\"headerlink\" title=\"创建 CNAME 文件\"></a>创建 CNAME 文件</h3><p>首先在博客的根目录新建一个文件：“CNAME”，内容为要解析的域名：“yuwancumian666.top”，注意不要添加 http://或 www 等前缀。在 Windows 下如果不能建立没有后缀名的文件时，则可以 shift + 右键打开 Power Shell 输入 <code>echo yuwancumian666.top &gt; CNAME</code>以建立该文件。</p>\n<h3 id=\"设置云解析\"><a href=\"#设置云解析\" class=\"headerlink\" title=\"设置云解析\"></a>设置云解析</h3><p>在阿里云的控制台找到 “云解析 DNS” 一栏，在域名下添加解析如下：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png\" alt=\"cloud-dns\"></p>\n<ul>\n<li>设置主机记录www，记录类型为A，记录值是IP192.30.252.153。其中192.30.252.153是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages</li>\n<li>设置主机记录www，记录类型为A，记录值是IP192.30.252.154。</li>\n<li>设置主机记录@，记录类型为CNAME，记录值是yuwancumian666.github.io.。表示将 <a href=\"http://yuwancumian666.top\" target=\"_blank\" rel=\"noopener\">http://yuwancumian666.top</a> 这个主域名映射到  yuwancumian666.github.io</li>\n</ul>\n<p>添加完解析之后，等待大约十分钟，你的博客就可以访问了。</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>Thank the flame for its light, but do not fotget the lampholder standing in the shade with coonstancy of patience.<br>谢谢火焰给你光明，但是不要忘了那执灯的人，他是坚忍地站在黑暗当中呢。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<p>云解析就是绑定域名，这个域名 “yuwancumian666.top” 是在阿里云注册的，两块钱😄<br>在 GitHub Pages 上搭好博客之后可以设置云解析。</p>\n<h3 id=\"创建-CNAME-文件\"><a href=\"#创建-CNAME-文件\" class=\"headerlink\" title=\"创建 CNAME 文件\"></a>创建 CNAME 文件</h3><p>首先在博客的根目录新建一个文件：“CNAME”，内容为要解析的域名：“yuwancumian666.top”，注意不要添加 http://或 www 等前缀。在 Windows 下如果不能建立没有后缀名的文件时，则可以 shift + 右键打开 Power Shell 输入 <code>echo yuwancumian666.top &gt; CNAME</code>以建立该文件。</p>\n<h3 id=\"设置云解析\"><a href=\"#设置云解析\" class=\"headerlink\" title=\"设置云解析\"></a>设置云解析</h3><p>在阿里云的控制台找到 “云解析 DNS” 一栏，在域名下添加解析如下：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png\" alt=\"cloud-dns\"></p>\n<ul>\n<li>设置主机记录www，记录类型为A，记录值是IP192.30.252.153。其中192.30.252.153是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Github Pages</li>\n<li>设置主机记录www，记录类型为A，记录值是IP192.30.252.154。</li>\n<li>设置主机记录@，记录类型为CNAME，记录值是yuwancumian666.github.io.。表示将 <a href=\"http://yuwancumian666.top\" target=\"_blank\" rel=\"noopener\">http://yuwancumian666.top</a> 这个主域名映射到  yuwancumian666.github.io</li>\n</ul>\n<p>添加完解析之后，等待大约十分钟，你的博客就可以访问了。</p>"},{"layout":"post","title":"Hive 数据类型","subtitle":"哈哈哈","date":"2018-02-06T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tI cannot tell why this heart languishes in silence. It is for small needs it never asks, or knows or remembers.\n\t我说不出这心为什么那样颓丧着，是为了它那不曾要求，不曾知道，不曾记得的小小的需要。\n{% endblockquote %}\n\n<!-- more -->\n\n## 基本数据类型\n\n未完待续……\n\n## 复杂数据类型\n\n关系型数据库强烈不建议重复存储\n我们接触过的大数据数据库比如 Hbase、Hive 不怕重复，但要求的是存储数据的文件不要太小。\n\n类型 | 说明 | 举例 \nArray （数组） | 一组数据类型相同的值 | [1,2,3]\nMap（集合）| 一组 <K, V>，要求所有键类型相同，所有值类型相同 | {<K, V>, <K, V>}\nStruct（结构） | 一组不同字段，且每个字段的类型可以不同 | (\"str\", 1, 0)\n\n### 数组\n\n假如我们有以下数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg)\n\n在 Hive 里创建一个表：\n\n``` sql\nCREATE TABLE loginArray(\nip STRING,\nuserid ARRAY<BIGINT>\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\n;\n```\n\n然后导入数据：` LOAD DATA LOCAL INPATH '/home/user/test_data/login_array.txt' INTO TABLE loginArray```\n\n查询数据：`SELECT id,userid FROM loginArray`\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg)\n\n指定数组元素查询：\n\n`SELECT id,userid[0] FROM loginArray` \n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg.jpg)\n\n查询数组长度（-1为空）：`SELECT size(userid) FROM loginArray`\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg)\n\n### 集合\n\n#### 标准数据表处理\n\n给定测试数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg)\n\n数据表示某用户(id)，在某 IP 的主机上玩了哪些游戏以及游戏次数\n\n开始建表：\n\n``` sql\nCREATE TBALE loginmap(\nIP STRING,\nuserid BIGINT,\ngameinfo MAP<STRING, INT>\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\nMAP KEYS TERMINATED BY ':'\n;\n```\n\n导入数据：```LOAD DATA LOCAL INPATH '/home/user/test_data/loginmap1.txt' INTO TABLE loginmap;```\n\n插入数据后表结构如图：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg)\n\n#### 含脏数据的表处理\n\n测试数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg)\n\n导入数据时可以直接覆盖上一张表：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg)\n\n在查询某一个键时，因为数据的不统一（如“ wow” 和 “wow”，前者含空格）导致结果不同\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg)\n\n### 结构\n\n数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg)\n\n建表：\n\n``` sql\nCREATE TABLE loginstruct(\nIP STRING,\nUSRINFO STRUCT<userid:BIGINT, uname:STRING>\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\n;\n```\n\n导入数据：```LOAD DATA LOCAL INPATH '/home/user/test_data/login_array/loginstruct.txt' INTO TABLE loginstruct```\n\n插入后表信息：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg)\n\n","source":"_posts/2018-02-06-hive-type-of-data.markdown","raw":"---\nlayout: post\ntitle: Hive 数据类型\nsubtitle: 哈哈哈\ndate: 2018-02-06 00:00:00 +0800\ncategories:\n- 大数据\n- Hive\ntags: [Hive, 大数据] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tI cannot tell why this heart languishes in silence. It is for small needs it never asks, or knows or remembers.\n\t我说不出这心为什么那样颓丧着，是为了它那不曾要求，不曾知道，不曾记得的小小的需要。\n{% endblockquote %}\n\n<!-- more -->\n\n## 基本数据类型\n\n未完待续……\n\n## 复杂数据类型\n\n关系型数据库强烈不建议重复存储\n我们接触过的大数据数据库比如 Hbase、Hive 不怕重复，但要求的是存储数据的文件不要太小。\n\n类型 | 说明 | 举例 \nArray （数组） | 一组数据类型相同的值 | [1,2,3]\nMap（集合）| 一组 <K, V>，要求所有键类型相同，所有值类型相同 | {<K, V>, <K, V>}\nStruct（结构） | 一组不同字段，且每个字段的类型可以不同 | (\"str\", 1, 0)\n\n### 数组\n\n假如我们有以下数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg)\n\n在 Hive 里创建一个表：\n\n``` sql\nCREATE TABLE loginArray(\nip STRING,\nuserid ARRAY<BIGINT>\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\n;\n```\n\n然后导入数据：` LOAD DATA LOCAL INPATH '/home/user/test_data/login_array.txt' INTO TABLE loginArray```\n\n查询数据：`SELECT id,userid FROM loginArray`\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg)\n\n指定数组元素查询：\n\n`SELECT id,userid[0] FROM loginArray` \n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg.jpg)\n\n查询数组长度（-1为空）：`SELECT size(userid) FROM loginArray`\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg)\n\n### 集合\n\n#### 标准数据表处理\n\n给定测试数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg)\n\n数据表示某用户(id)，在某 IP 的主机上玩了哪些游戏以及游戏次数\n\n开始建表：\n\n``` sql\nCREATE TBALE loginmap(\nIP STRING,\nuserid BIGINT,\ngameinfo MAP<STRING, INT>\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\nMAP KEYS TERMINATED BY ':'\n;\n```\n\n导入数据：```LOAD DATA LOCAL INPATH '/home/user/test_data/loginmap1.txt' INTO TABLE loginmap;```\n\n插入数据后表结构如图：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg)\n\n#### 含脏数据的表处理\n\n测试数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg)\n\n导入数据时可以直接覆盖上一张表：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg)\n\n在查询某一个键时，因为数据的不统一（如“ wow” 和 “wow”，前者含空格）导致结果不同\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg)\n\n### 结构\n\n数据：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg)\n\n建表：\n\n``` sql\nCREATE TABLE loginstruct(\nIP STRING,\nUSRINFO STRUCT<userid:BIGINT, uname:STRING>\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nCOLLECTION ITEMS TERMINATED BY '|'\n;\n```\n\n导入数据：```LOAD DATA LOCAL INPATH '/home/user/test_data/login_array/loginstruct.txt' INTO TABLE loginstruct```\n\n插入后表信息：\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg)\n\n","slug":"hive-type-of-data","published":1,"updated":"2019-03-04T13:23:19.016Z","comments":1,"photos":[],"link":"","_id":"cjwj070e5001qm8zao2ee1ur1","content":"<blockquote><p>I cannot tell why this heart languishes in silence. It is for small needs it never asks, or knows or remembers.<br>我说不出这心为什么那样颓丧着，是为了它那不曾要求，不曾知道，不曾记得的小小的需要。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h2><p>未完待续……</p>\n<h2 id=\"复杂数据类型\"><a href=\"#复杂数据类型\" class=\"headerlink\" title=\"复杂数据类型\"></a>复杂数据类型</h2><p>关系型数据库强烈不建议重复存储<br>我们接触过的大数据数据库比如 Hbase、Hive 不怕重复，但要求的是存储数据的文件不要太小。</p>\n<p>类型 | 说明 | 举例<br>Array （数组） | 一组数据类型相同的值 | [1,2,3]<br>Map（集合）| 一组 &lt;K, V&gt;，要求所有键类型相同，所有值类型相同 | {&lt;K, V&gt;, &lt;K, V&gt;}<br>Struct（结构） | 一组不同字段，且每个字段的类型可以不同 | (“str”, 1, 0)</p>\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>假如我们有以下数据：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg\" alt></p>\n<p>在 Hive 里创建一个表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> loginArray(</span><br><span class=\"line\">ip <span class=\"keyword\">STRING</span>,</span><br><span class=\"line\">userid <span class=\"built_in\">ARRAY</span>&lt;<span class=\"built_in\">BIGINT</span>&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">ROW</span> <span class=\"keyword\">FORMAT</span> <span class=\"keyword\">DELIMITED</span> <span class=\"keyword\">FIELDS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">','</span></span><br><span class=\"line\">COLLECTION ITEMS <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'|'</span></span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n\n<p>然后导入数据：` LOAD DATA LOCAL INPATH ‘/home/user/test_data/login_array.txt’ INTO TABLE loginArray<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">查询数据：`SELECT id,userid FROM loginArray`</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">指定数组元素查询：</span><br><span class=\"line\"></span><br><span class=\"line\">`SELECT id,userid[0] FROM loginArray` </span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">查询数组长度（-1为空）：`SELECT size(userid) FROM loginArray`</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">### 集合</span><br><span class=\"line\"></span><br><span class=\"line\">#### 标准数据表处理</span><br><span class=\"line\"></span><br><span class=\"line\">给定测试数据：</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">数据表示某用户(id)，在某 IP 的主机上玩了哪些游戏以及游戏次数</span><br><span class=\"line\"></span><br><span class=\"line\">开始建表：</span><br><span class=\"line\"></span><br><span class=\"line\">``` sql</span><br><span class=\"line\">CREATE TBALE loginmap(</span><br><span class=\"line\">IP STRING,</span><br><span class=\"line\">userid BIGINT,</span><br><span class=\"line\">gameinfo MAP&lt;STRING, INT&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;,&apos;</span><br><span class=\"line\">COLLECTION ITEMS TERMINATED BY &apos;|&apos;</span><br><span class=\"line\">MAP KEYS TERMINATED BY &apos;:&apos;</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure></p>\n<p>导入数据：<figure class=\"highlight plain\"><figcaption><span>DATA LOCAL INPATH '/home/user/test_data/loginmap1.txt' INTO TABLE loginmap;```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">插入数据后表结构如图：</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">#### 含脏数据的表处理</span><br><span class=\"line\"></span><br><span class=\"line\">测试数据：</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">导入数据时可以直接覆盖上一张表：</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">在查询某一个键时，因为数据的不统一（如“ wow” 和 “wow”，前者含空格）导致结果不同</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">### 结构</span><br><span class=\"line\"></span><br><span class=\"line\">数据：</span><br><span class=\"line\"></span><br><span class=\"line\">![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">建表：</span><br><span class=\"line\"></span><br><span class=\"line\">``` sql</span><br><span class=\"line\">CREATE TABLE loginstruct(</span><br><span class=\"line\">IP STRING,</span><br><span class=\"line\">USRINFO STRUCT&lt;userid:BIGINT, uname:STRING&gt;</span><br><span class=\"line\">ROW FORMAT DELIMITED FIELDS TERMINATED BY &apos;,&apos;</span><br><span class=\"line\">COLLECTION ITEMS TERMINATED BY &apos;|&apos;</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure></p>\n<p>导入数据：<code>LOAD DATA LOCAL INPATH &#39;/home/user/test_data/login_array/loginstruct.txt&#39; INTO TABLE loginstruct</code></p>\n<p>插入后表信息：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg\" alt></p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>I cannot tell why this heart languishes in silence. It is for small needs it never asks, or knows or remembers.<br>我说不出这心为什么那样颓丧着，是为了它那不曾要求，不曾知道，不曾记得的小小的需要。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h2 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h2><p>未完待续……</p>\n<h2 id=\"复杂数据类型\"><a href=\"#复杂数据类型\" class=\"headerlink\" title=\"复杂数据类型\"></a>复杂数据类型</h2><p>关系型数据库强烈不建议重复存储<br>我们接触过的大数据数据库比如 Hbase、Hive 不怕重复，但要求的是存储数据的文件不要太小。</p>\n<p>类型 | 说明 | 举例<br>Array （数组） | 一组数据类型相同的值 | [1,2,3]<br>Map（集合）| 一组 &lt;K, V&gt;，要求所有键类型相同，所有值类型相同 | {&lt;K, V&gt;, &lt;K, V&gt;}<br>Struct（结构） | 一组不同字段，且每个字段的类型可以不同 | (“str”, 1, 0)</p>\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>假如我们有以下数据：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg\" alt></p>\n<p>在 Hive 里创建一个表：</p>\n<!--�36-->\n\n<p>然后导入数据：` LOAD DATA LOCAL INPATH ‘/home/user/test_data/login_array.txt’ INTO TABLE loginArray<!--�37--></p>\n<p>导入数据：<!--�38--></p>\n<p>导入数据：<code>LOAD DATA LOCAL INPATH &#39;/home/user/test_data/login_array/loginstruct.txt&#39; INTO TABLE loginstruct</code></p>\n<p>插入后表信息：</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg\" alt></p>"},{"layout":"post","title":"Python SMTP 发送邮件","date":"2018-01-28T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tLike the metting of the seagulls and the waves we meet and come near. The seagulls fly off, the waves roll away and we depart. \n\t我们如海鸥之于波涛相遇似的，遇见了，走近了。海鸥飞去，波涛滚滚地流开，我们也分别了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 模块简介\n\nSMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。这里发送邮件使用了 smtplib 和 email 两个模块。\n\n发送邮件常用的模块：\n``` python\nimport smtplib\nfrom email.header import Header\nfrom email.mime.text import MIMEText\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\n```\n\n### 语法简介\n\nsmtplib 模块为发送邮件提供了一种很方便的途径，它对 SMTP 协议进行了简单的封装。其定义的 SMTP 客户端会话对象可使用 SMTP 或 ESMTP 侦听器守护程序向任何互联网机器发送邮件。\n\n创建 smtp 对象的方法是```smtp=smtplib.SMTP([host [, port [, local_hostname]]])```，简单粗暴\n\n* host：SMTP 服务器主机，可指定 IP 或 域名，可选。\n* port：一般情况下默认端口号为25.\n* local_hostname：如果 SMTP 服务器在本机上运行，则只需指定服务器地址为 localhost 即可。\n\nsmtp 对象使用 sendmail 方法发送邮件：```smtp.sendmail(sender, receivers, msg.as_string())```\n\n* sender：发件人邮箱，字符串\n* receivers：收件人邮箱，列表\n* msg：特定格式的邮件\n\n**注意：**msg是字符串，表示邮件内容。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要指定msg的格式。这个格式就是smtp协议中定义的格式。\n\n### 发送文本格式邮件\n\n这里使用新浪邮箱示例，QQ邮箱登录需要16位授权码，而且验证还过不去(lll￢ω￢)\n\n``` python\n# -*- coding: UTF-8 -*-\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\nmail_host=\"smtp.sina.com\"  #设置服务器\nmail_user=\"yuwancumiana@sina.cn\"  #用户名\nmail_pass=\"\"  #登陆密码\nsender = 'yuwancumiana@sina.cn'\nreceivers = ['yuwancumian666@gmail.com'] \nmessage = MIMEText('从windows发来的一封测试信', 'plain', 'utf-8')  # 这里指定邮件内容\nmessage['From'] = \"yuwancumiana@sina.cn\" \nmessage['To'] =  \"鱼丸粗面\"\nsubject = '测试' #主题-title\nmessage['Subject'] = Header(subject, 'utf-8')\ntry:\n    smtpObj = smtplib.SMTP() \n    smtpObj.connect(mail_host, 25)\n    smtpObj.login(mail_user,mail_pass)  \n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print u\"邮件发送成功\"\nexcept smtplib.SMTPException as e:\n    print \"Error: cannot send my email\"\n    print e\n``` \n\n接收到的邮件如图：![example-receiver](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png)\n\n### 发送附件\n\n``` python\n# -*- coding: utf-8 -*-\n\nimport smtplib\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\n\n\nSMTP_SERVER = 'smtp.sina.com'\nSMTP_PORT = 25\nsender = 'yuwancumiana@sina.cn' \nrecipient = 'yuwancumian666@gmail.com'\n\nmsg = MIMEMultipart()\nmsg['Subject'] = 'Python 附件'\nmsg['To'] = recipient\nmsg['From'] = sender\nsubject = 'Python annex'\n\n# 附件1，图片\nimg = MIMEImage(open(r'img/girl.jpg', 'rb').read(), _subtype='jpg')\nimg.add_header('Content-Disposition', 'attachment', filename = 'Girl.jpg')\nmsg.attach(img)\n\n# 附件2，文本\npart = MIMEText(open('test.txt','rb').read(), 'plain')\n# part[\"Content-Type\"] = 'application/octet-stream'\npart[\"Content-Disposition\"] = 'attachment; filename=\"test.txt\"'\npart.set_payload(\"text annex\")\nmsg.attach(part)\ntry:\n    session = smtplib.SMTP()\n    session.connect(SMTP_SERVER, 25)\n    '''\n    session.ehlo()\n    session.starttls() 以TLS加密方式传输，可选\n    session.ehlo()\n    '''\n    session.login(sender, 'mq2020.')\n    session.sendmail(sender, recipient, msg.as_string())\n    print u'发送成功'\n    session.quit()\nexcept smtplib.SMTPException,e:  \n    print e \n``` \n\n效果图：![example-receiver](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png)\n\n### 发送 HTML 附件\n\n这里使用的 HTML 是一个小爬虫爬到的数据，经简单包装后返回一个字符串，把字符串作为附件发送。\n\n``` python\n#!/usr/bin/python\n#coding:utf-8 \nimport sys \nimport smtplib \nimport traceback\nimport make_html_bs\nfrom email.header import Header\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart \nfrom email.mime.text import MIMEText    \n \nreload(sys)\nsys.setdefaultencoding('utf-8')\n# 第三方 SMTP 服务  \nmail_host=\"smtp.sina.com\"  #设置服务器  \nmail_user=\"yuwancumiana@sina.cn\"    #用户名  \nmail_pass=\"\"   #密码\n  \nsender = 'yuwancumiana@sina.cn'  \nreceivers = ['yuwancumian666@gmail.com','2535257276@qq.com','635936876@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  \n   \nmail = MIMEMultipart(\"mixed\")  \nmail['From'] = \"yuwancumiana@sina.cn\"  \nmail['To'] = \"鱼丸粗面\" \nmail['Subject'] = Header('福利','utf-8')\nmessage = MIMEText(\"今日福利(windows)\", 'plain', 'utf-8')\nmail.attach(message)\ntry:\n    html = make_html_bs.get_html().encode('utf-8') # 这里使用的是另一个爬虫模块返回的数据，为 HTML 格式\nexcept Exception as e:\n    print traceback.print_exc()\n    sys.exit(u\"loading pages failed...\")\nHTML = MIMEText(html, _subtype='html', _charset='utf-8')\nmail.attach(HTML)\n\ntry:  \n\n    smtp = smtplib.SMTP()\n    smtp.connect(mail_host)\n    smtp.login(mail_user, mail_pass)    \n    smtp.sendmail(sender, receivers, mail.as_string())\n    smtp.close()\n    print u\"send mail success\"  \nexcept smtplib.SMTPException,e:\n    print e \n\n``` \n\n结果（你猜猜内容是啥😄）：![exp3](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png)\n\n### 总结\n\n因为发送邮件的方式（不加密、SSL、TLS、）和类型（附件类型、附件头，附件内容）多种多样，邮件服务器总结起来也非常他喵的麻烦。我之前是做了不少的测试脚本，最后挑了一个经常用的。我对于这个 python 邮件的想法是：能用就成~O(∩_∩)O","source":"_posts/2018-01-28-python-email.markdown","raw":"---\nlayout: post\ntitle: Python SMTP 发送邮件\ndate: 2018-01-28 00:00:00 +0800\ncategories: \n- Python\ntags: [Python, 网络编程]\n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tLike the metting of the seagulls and the waves we meet and come near. The seagulls fly off, the waves roll away and we depart. \n\t我们如海鸥之于波涛相遇似的，遇见了，走近了。海鸥飞去，波涛滚滚地流开，我们也分别了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 模块简介\n\nSMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。这里发送邮件使用了 smtplib 和 email 两个模块。\n\n发送邮件常用的模块：\n``` python\nimport smtplib\nfrom email.header import Header\nfrom email.mime.text import MIMEText\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\n```\n\n### 语法简介\n\nsmtplib 模块为发送邮件提供了一种很方便的途径，它对 SMTP 协议进行了简单的封装。其定义的 SMTP 客户端会话对象可使用 SMTP 或 ESMTP 侦听器守护程序向任何互联网机器发送邮件。\n\n创建 smtp 对象的方法是```smtp=smtplib.SMTP([host [, port [, local_hostname]]])```，简单粗暴\n\n* host：SMTP 服务器主机，可指定 IP 或 域名，可选。\n* port：一般情况下默认端口号为25.\n* local_hostname：如果 SMTP 服务器在本机上运行，则只需指定服务器地址为 localhost 即可。\n\nsmtp 对象使用 sendmail 方法发送邮件：```smtp.sendmail(sender, receivers, msg.as_string())```\n\n* sender：发件人邮箱，字符串\n* receivers：收件人邮箱，列表\n* msg：特定格式的邮件\n\n**注意：**msg是字符串，表示邮件内容。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要指定msg的格式。这个格式就是smtp协议中定义的格式。\n\n### 发送文本格式邮件\n\n这里使用新浪邮箱示例，QQ邮箱登录需要16位授权码，而且验证还过不去(lll￢ω￢)\n\n``` python\n# -*- coding: UTF-8 -*-\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\nmail_host=\"smtp.sina.com\"  #设置服务器\nmail_user=\"yuwancumiana@sina.cn\"  #用户名\nmail_pass=\"\"  #登陆密码\nsender = 'yuwancumiana@sina.cn'\nreceivers = ['yuwancumian666@gmail.com'] \nmessage = MIMEText('从windows发来的一封测试信', 'plain', 'utf-8')  # 这里指定邮件内容\nmessage['From'] = \"yuwancumiana@sina.cn\" \nmessage['To'] =  \"鱼丸粗面\"\nsubject = '测试' #主题-title\nmessage['Subject'] = Header(subject, 'utf-8')\ntry:\n    smtpObj = smtplib.SMTP() \n    smtpObj.connect(mail_host, 25)\n    smtpObj.login(mail_user,mail_pass)  \n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print u\"邮件发送成功\"\nexcept smtplib.SMTPException as e:\n    print \"Error: cannot send my email\"\n    print e\n``` \n\n接收到的邮件如图：![example-receiver](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png)\n\n### 发送附件\n\n``` python\n# -*- coding: utf-8 -*-\n\nimport smtplib\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\n\n\nSMTP_SERVER = 'smtp.sina.com'\nSMTP_PORT = 25\nsender = 'yuwancumiana@sina.cn' \nrecipient = 'yuwancumian666@gmail.com'\n\nmsg = MIMEMultipart()\nmsg['Subject'] = 'Python 附件'\nmsg['To'] = recipient\nmsg['From'] = sender\nsubject = 'Python annex'\n\n# 附件1，图片\nimg = MIMEImage(open(r'img/girl.jpg', 'rb').read(), _subtype='jpg')\nimg.add_header('Content-Disposition', 'attachment', filename = 'Girl.jpg')\nmsg.attach(img)\n\n# 附件2，文本\npart = MIMEText(open('test.txt','rb').read(), 'plain')\n# part[\"Content-Type\"] = 'application/octet-stream'\npart[\"Content-Disposition\"] = 'attachment; filename=\"test.txt\"'\npart.set_payload(\"text annex\")\nmsg.attach(part)\ntry:\n    session = smtplib.SMTP()\n    session.connect(SMTP_SERVER, 25)\n    '''\n    session.ehlo()\n    session.starttls() 以TLS加密方式传输，可选\n    session.ehlo()\n    '''\n    session.login(sender, 'mq2020.')\n    session.sendmail(sender, recipient, msg.as_string())\n    print u'发送成功'\n    session.quit()\nexcept smtplib.SMTPException,e:  \n    print e \n``` \n\n效果图：![example-receiver](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png)\n\n### 发送 HTML 附件\n\n这里使用的 HTML 是一个小爬虫爬到的数据，经简单包装后返回一个字符串，把字符串作为附件发送。\n\n``` python\n#!/usr/bin/python\n#coding:utf-8 \nimport sys \nimport smtplib \nimport traceback\nimport make_html_bs\nfrom email.header import Header\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart \nfrom email.mime.text import MIMEText    \n \nreload(sys)\nsys.setdefaultencoding('utf-8')\n# 第三方 SMTP 服务  \nmail_host=\"smtp.sina.com\"  #设置服务器  \nmail_user=\"yuwancumiana@sina.cn\"    #用户名  \nmail_pass=\"\"   #密码\n  \nsender = 'yuwancumiana@sina.cn'  \nreceivers = ['yuwancumian666@gmail.com','2535257276@qq.com','635936876@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱  \n   \nmail = MIMEMultipart(\"mixed\")  \nmail['From'] = \"yuwancumiana@sina.cn\"  \nmail['To'] = \"鱼丸粗面\" \nmail['Subject'] = Header('福利','utf-8')\nmessage = MIMEText(\"今日福利(windows)\", 'plain', 'utf-8')\nmail.attach(message)\ntry:\n    html = make_html_bs.get_html().encode('utf-8') # 这里使用的是另一个爬虫模块返回的数据，为 HTML 格式\nexcept Exception as e:\n    print traceback.print_exc()\n    sys.exit(u\"loading pages failed...\")\nHTML = MIMEText(html, _subtype='html', _charset='utf-8')\nmail.attach(HTML)\n\ntry:  \n\n    smtp = smtplib.SMTP()\n    smtp.connect(mail_host)\n    smtp.login(mail_user, mail_pass)    \n    smtp.sendmail(sender, receivers, mail.as_string())\n    smtp.close()\n    print u\"send mail success\"  \nexcept smtplib.SMTPException,e:\n    print e \n\n``` \n\n结果（你猜猜内容是啥😄）：![exp3](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png)\n\n### 总结\n\n因为发送邮件的方式（不加密、SSL、TLS、）和类型（附件类型、附件头，附件内容）多种多样，邮件服务器总结起来也非常他喵的麻烦。我之前是做了不少的测试脚本，最后挑了一个经常用的。我对于这个 python 邮件的想法是：能用就成~O(∩_∩)O","slug":"python-email","published":1,"updated":"2019-03-04T13:24:03.342Z","comments":1,"photos":[],"link":"","_id":"cjwj070e7001rm8za5k9ulcu2","content":"<blockquote><p>Like the metting of the seagulls and the waves we meet and come near. The seagulls fly off, the waves roll away and we depart.<br>我们如海鸥之于波涛相遇似的，遇见了，走近了。海鸥飞去，波涛滚滚地流开，我们也分别了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"模块简介\"><a href=\"#模块简介\" class=\"headerlink\" title=\"模块简介\"></a>模块简介</h3><p>SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。这里发送邮件使用了 smtplib 和 email 两个模块。</p>\n<p>发送邮件常用的模块：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"语法简介\"><a href=\"#语法简介\" class=\"headerlink\" title=\"语法简介\"></a>语法简介</h3><p>smtplib 模块为发送邮件提供了一种很方便的途径，它对 SMTP 协议进行了简单的封装。其定义的 SMTP 客户端会话对象可使用 SMTP 或 ESMTP 侦听器守护程序向任何互联网机器发送邮件。</p>\n<p>创建 smtp 对象的方法是<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">* host：SMTP 服务器主机，可指定 IP 或 域名，可选。</span><br><span class=\"line\">* port：一般情况下默认端口号为25.</span><br><span class=\"line\">* local_hostname：如果 SMTP 服务器在本机上运行，则只需指定服务器地址为 localhost 即可。</span><br><span class=\"line\"></span><br><span class=\"line\">smtp 对象使用 sendmail 方法发送邮件：```smtp.sendmail(sender, receivers, msg.as_string())</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>sender：发件人邮箱，字符串</li>\n<li>receivers：收件人邮箱，列表</li>\n<li>msg：特定格式的邮件</li>\n</ul>\n<p><strong>注意：</strong>msg是字符串，表示邮件内容。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要指定msg的格式。这个格式就是smtp协议中定义的格式。</p>\n<h3 id=\"发送文本格式邮件\"><a href=\"#发送文本格式邮件\" class=\"headerlink\" title=\"发送文本格式邮件\"></a>发送文本格式邮件</h3><p>这里使用新浪邮箱示例，QQ邮箱登录需要16位授权码，而且验证还过不去(lll￢ω￢)</p>\n<pre><code class=\"python\"><span class=\"comment\"># -*- coding: UTF-8 -*-</span>\n<span class=\"keyword\">import</span> smtplib\n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText\n<span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header\nmail_host=<span class=\"string\">\"smtp.sina.com\"</span>  <span class=\"comment\">#设置服务器</span>\nmail_user=<span class=\"string\">\"yuwancumiana@sina.cn\"</span>  <span class=\"comment\">#用户名</span>\nmail_pass=<span class=\"string\">\"\"</span>  <span class=\"comment\">#登陆密码</span>\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span>\nreceivers = [<span class=\"string\">'yuwancumian666@gmail.com'</span>] \nmessage = MIMEText(<span class=\"string\">'从windows发来的一封测试信'</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)  <span class=\"comment\"># 这里指定邮件内容</span>\nmessage[<span class=\"string\">'From'</span>] = <span class=\"string\">\"yuwancumiana@sina.cn\"</span> \nmessage[<span class=\"string\">'To'</span>] =  <span class=\"string\">\"鱼丸粗面\"</span>\nsubject = <span class=\"string\">'测试'</span> <span class=\"comment\">#主题-title</span>\nmessage[<span class=\"string\">'Subject'</span>] = Header(subject, <span class=\"string\">'utf-8'</span>)\n<span class=\"keyword\">try</span>:\n    smtpObj = smtplib.SMTP() \n    smtpObj.connect(mail_host, <span class=\"number\">25</span>)\n    smtpObj.login(mail_user,mail_pass)  \n    smtpObj.sendmail(sender, receivers, message.as_string())\n    <span class=\"keyword\">print</span> <span class=\"string\">u\"邮件发送成功\"</span>\n<span class=\"keyword\">except</span> smtplib.SMTPException <span class=\"keyword\">as</span> e:\n    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: cannot send my email\"</span>\n    <span class=\"keyword\">print</span> e</code></pre>\n<p>接收到的邮件如图：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png\" alt=\"example-receiver\"></p>\n<h3 id=\"发送附件\"><a href=\"#发送附件\" class=\"headerlink\" title=\"发送附件\"></a>发送附件</h3><pre><code class=\"python\"><span class=\"comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"keyword\">import</span> smtplib\n<span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage\n<span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart\n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText\n\n\nSMTP_SERVER = <span class=\"string\">'smtp.sina.com'</span>\nSMTP_PORT = <span class=\"number\">25</span>\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span> \nrecipient = <span class=\"string\">'yuwancumian666@gmail.com'</span>\n\nmsg = MIMEMultipart()\nmsg[<span class=\"string\">'Subject'</span>] = <span class=\"string\">'Python 附件'</span>\nmsg[<span class=\"string\">'To'</span>] = recipient\nmsg[<span class=\"string\">'From'</span>] = sender\nsubject = <span class=\"string\">'Python annex'</span>\n\n<span class=\"comment\"># 附件1，图片</span>\nimg = MIMEImage(open(<span class=\"string\">r'img/girl.jpg'</span>, <span class=\"string\">'rb'</span>).read(), _subtype=<span class=\"string\">'jpg'</span>)\nimg.add_header(<span class=\"string\">'Content-Disposition'</span>, <span class=\"string\">'attachment'</span>, filename = <span class=\"string\">'Girl.jpg'</span>)\nmsg.attach(img)\n\n<span class=\"comment\"># 附件2，文本</span>\npart = MIMEText(open(<span class=\"string\">'test.txt'</span>,<span class=\"string\">'rb'</span>).read(), <span class=\"string\">'plain'</span>)\n<span class=\"comment\"># part[\"Content-Type\"] = 'application/octet-stream'</span>\npart[<span class=\"string\">\"Content-Disposition\"</span>] = <span class=\"string\">'attachment; filename=\"test.txt\"'</span>\npart.set_payload(<span class=\"string\">\"text annex\"</span>)\nmsg.attach(part)\n<span class=\"keyword\">try</span>:\n    session = smtplib.SMTP()\n    session.connect(SMTP_SERVER, <span class=\"number\">25</span>)\n    <span class=\"string\">'''</span>\n<span class=\"string\">    session.ehlo()</span>\n<span class=\"string\">    session.starttls() 以TLS加密方式传输，可选</span>\n<span class=\"string\">    session.ehlo()</span>\n<span class=\"string\">    '''</span>\n    session.login(sender, <span class=\"string\">'mq2020.'</span>)\n    session.sendmail(sender, recipient, msg.as_string())\n    <span class=\"keyword\">print</span> <span class=\"string\">u'发送成功'</span>\n    session.quit()\n<span class=\"keyword\">except</span> smtplib.SMTPException,e:  \n    <span class=\"keyword\">print</span> e </code></pre>\n<p>效果图：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png\" alt=\"example-receiver\"></p>\n<h3 id=\"发送-HTML-附件\"><a href=\"#发送-HTML-附件\" class=\"headerlink\" title=\"发送 HTML 附件\"></a>发送 HTML 附件</h3><p>这里使用的 HTML 是一个小爬虫爬到的数据，经简单包装后返回一个字符串，把字符串作为附件发送。</p>\n<pre><code class=\"python\"><span class=\"comment\">#!/usr/bin/python</span>\n<span class=\"comment\">#coding:utf-8 </span>\n<span class=\"keyword\">import</span> sys \n<span class=\"keyword\">import</span> smtplib \n<span class=\"keyword\">import</span> traceback\n<span class=\"keyword\">import</span> make_html_bs\n<span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header\n<span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage\n<span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart \n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText    \n\nreload(sys)\nsys.setdefaultencoding(<span class=\"string\">'utf-8'</span>)\n<span class=\"comment\"># 第三方 SMTP 服务  </span>\nmail_host=<span class=\"string\">\"smtp.sina.com\"</span>  <span class=\"comment\">#设置服务器  </span>\nmail_user=<span class=\"string\">\"yuwancumiana@sina.cn\"</span>    <span class=\"comment\">#用户名  </span>\nmail_pass=<span class=\"string\">\"\"</span>   <span class=\"comment\">#密码</span>\n\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span>  \nreceivers = [<span class=\"string\">'yuwancumian666@gmail.com'</span>,<span class=\"string\">'2535257276@qq.com'</span>,<span class=\"string\">'635936876@qq.com'</span>]  <span class=\"comment\"># 接收邮件，可设置为你的QQ邮箱或者其他邮箱  </span>\n\nmail = MIMEMultipart(<span class=\"string\">\"mixed\"</span>)  \nmail[<span class=\"string\">'From'</span>] = <span class=\"string\">\"yuwancumiana@sina.cn\"</span>  \nmail[<span class=\"string\">'To'</span>] = <span class=\"string\">\"鱼丸粗面\"</span> \nmail[<span class=\"string\">'Subject'</span>] = Header(<span class=\"string\">'福利'</span>,<span class=\"string\">'utf-8'</span>)\nmessage = MIMEText(<span class=\"string\">\"今日福利(windows)\"</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)\nmail.attach(message)\n<span class=\"keyword\">try</span>:\n    html = make_html_bs.get_html().encode(<span class=\"string\">'utf-8'</span>) <span class=\"comment\"># 这里使用的是另一个爬虫模块返回的数据，为 HTML 格式</span>\n<span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:\n    <span class=\"keyword\">print</span> traceback.print_exc()\n    sys.exit(<span class=\"string\">u\"loading pages failed...\"</span>)\nHTML = MIMEText(html, _subtype=<span class=\"string\">'html'</span>, _charset=<span class=\"string\">'utf-8'</span>)\nmail.attach(HTML)\n\n<span class=\"keyword\">try</span>:  \n\n    smtp = smtplib.SMTP()\n    smtp.connect(mail_host)\n    smtp.login(mail_user, mail_pass)    \n    smtp.sendmail(sender, receivers, mail.as_string())\n    smtp.close()\n    <span class=\"keyword\">print</span> <span class=\"string\">u\"send mail success\"</span>  \n<span class=\"keyword\">except</span> smtplib.SMTPException,e:\n    <span class=\"keyword\">print</span> e \n</code></pre>\n<p>结果（你猜猜内容是啥😄）：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png\" alt=\"exp3\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>因为发送邮件的方式（不加密、SSL、TLS、）和类型（附件类型、附件头，附件内容）多种多样，邮件服务器总结起来也非常他喵的麻烦。我之前是做了不少的测试脚本，最后挑了一个经常用的。我对于这个 python 邮件的想法是：能用就成~O(∩_∩)O</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>Like the metting of the seagulls and the waves we meet and come near. The seagulls fly off, the waves roll away and we depart.<br>我们如海鸥之于波涛相遇似的，遇见了，走近了。海鸥飞去，波涛滚滚地流开，我们也分别了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"模块简介\"><a href=\"#模块简介\" class=\"headerlink\" title=\"模块简介\"></a>模块简介</h3><p>SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。这里发送邮件使用了 smtplib 和 email 两个模块。</p>\n<p>发送邮件常用的模块：</p>\n<!--�39-->\n\n<h3 id=\"语法简介\"><a href=\"#语法简介\" class=\"headerlink\" title=\"语法简介\"></a>语法简介</h3><p>smtplib 模块为发送邮件提供了一种很方便的途径，它对 SMTP 协议进行了简单的封装。其定义的 SMTP 客户端会话对象可使用 SMTP 或 ESMTP 侦听器守护程序向任何互联网机器发送邮件。</p>\n<p>创建 smtp 对象的方法是<!--�40--></p>\n<ul>\n<li>sender：发件人邮箱，字符串</li>\n<li>receivers：收件人邮箱，列表</li>\n<li>msg：特定格式的邮件</li>\n</ul>\n<p><strong>注意：</strong>msg是字符串，表示邮件内容。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要指定msg的格式。这个格式就是smtp协议中定义的格式。</p>\n<h3 id=\"发送文本格式邮件\"><a href=\"#发送文本格式邮件\" class=\"headerlink\" title=\"发送文本格式邮件\"></a>发送文本格式邮件</h3><p>这里使用新浪邮箱示例，QQ邮箱登录需要16位授权码，而且验证还过不去(lll￢ω￢)</p>\n<pre><code class=\"python\"><span class=\"comment\"># -*- coding: UTF-8 -*-</span>\n<span class=\"keyword\">import</span> smtplib\n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText\n<span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header\nmail_host=<span class=\"string\">\"smtp.sina.com\"</span>  <span class=\"comment\">#设置服务器</span>\nmail_user=<span class=\"string\">\"yuwancumiana@sina.cn\"</span>  <span class=\"comment\">#用户名</span>\nmail_pass=<span class=\"string\">\"\"</span>  <span class=\"comment\">#登陆密码</span>\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span>\nreceivers = [<span class=\"string\">'yuwancumian666@gmail.com'</span>] \nmessage = MIMEText(<span class=\"string\">'从windows发来的一封测试信'</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)  <span class=\"comment\"># 这里指定邮件内容</span>\nmessage[<span class=\"string\">'From'</span>] = <span class=\"string\">\"yuwancumiana@sina.cn\"</span> \nmessage[<span class=\"string\">'To'</span>] =  <span class=\"string\">\"鱼丸粗面\"</span>\nsubject = <span class=\"string\">'测试'</span> <span class=\"comment\">#主题-title</span>\nmessage[<span class=\"string\">'Subject'</span>] = Header(subject, <span class=\"string\">'utf-8'</span>)\n<span class=\"keyword\">try</span>:\n    smtpObj = smtplib.SMTP() \n    smtpObj.connect(mail_host, <span class=\"number\">25</span>)\n    smtpObj.login(mail_user,mail_pass)  \n    smtpObj.sendmail(sender, receivers, message.as_string())\n    <span class=\"keyword\">print</span> <span class=\"string\">u\"邮件发送成功\"</span>\n<span class=\"keyword\">except</span> smtplib.SMTPException <span class=\"keyword\">as</span> e:\n    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: cannot send my email\"</span>\n    <span class=\"keyword\">print</span> e</code></pre>\n<p>接收到的邮件如图：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png\" alt=\"example-receiver\"></p>\n<h3 id=\"发送附件\"><a href=\"#发送附件\" class=\"headerlink\" title=\"发送附件\"></a>发送附件</h3><pre><code class=\"python\"><span class=\"comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"keyword\">import</span> smtplib\n<span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage\n<span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart\n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText\n\n\nSMTP_SERVER = <span class=\"string\">'smtp.sina.com'</span>\nSMTP_PORT = <span class=\"number\">25</span>\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span> \nrecipient = <span class=\"string\">'yuwancumian666@gmail.com'</span>\n\nmsg = MIMEMultipart()\nmsg[<span class=\"string\">'Subject'</span>] = <span class=\"string\">'Python 附件'</span>\nmsg[<span class=\"string\">'To'</span>] = recipient\nmsg[<span class=\"string\">'From'</span>] = sender\nsubject = <span class=\"string\">'Python annex'</span>\n\n<span class=\"comment\"># 附件1，图片</span>\nimg = MIMEImage(open(<span class=\"string\">r'img/girl.jpg'</span>, <span class=\"string\">'rb'</span>).read(), _subtype=<span class=\"string\">'jpg'</span>)\nimg.add_header(<span class=\"string\">'Content-Disposition'</span>, <span class=\"string\">'attachment'</span>, filename = <span class=\"string\">'Girl.jpg'</span>)\nmsg.attach(img)\n\n<span class=\"comment\"># 附件2，文本</span>\npart = MIMEText(open(<span class=\"string\">'test.txt'</span>,<span class=\"string\">'rb'</span>).read(), <span class=\"string\">'plain'</span>)\n<span class=\"comment\"># part[\"Content-Type\"] = 'application/octet-stream'</span>\npart[<span class=\"string\">\"Content-Disposition\"</span>] = <span class=\"string\">'attachment; filename=\"test.txt\"'</span>\npart.set_payload(<span class=\"string\">\"text annex\"</span>)\nmsg.attach(part)\n<span class=\"keyword\">try</span>:\n    session = smtplib.SMTP()\n    session.connect(SMTP_SERVER, <span class=\"number\">25</span>)\n    <span class=\"string\">'''</span>\n<span class=\"string\">    session.ehlo()</span>\n<span class=\"string\">    session.starttls() 以TLS加密方式传输，可选</span>\n<span class=\"string\">    session.ehlo()</span>\n<span class=\"string\">    '''</span>\n    session.login(sender, <span class=\"string\">'mq2020.'</span>)\n    session.sendmail(sender, recipient, msg.as_string())\n    <span class=\"keyword\">print</span> <span class=\"string\">u'发送成功'</span>\n    session.quit()\n<span class=\"keyword\">except</span> smtplib.SMTPException,e:  \n    <span class=\"keyword\">print</span> e </code></pre>\n<p>效果图：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png\" alt=\"example-receiver\"></p>\n<h3 id=\"发送-HTML-附件\"><a href=\"#发送-HTML-附件\" class=\"headerlink\" title=\"发送 HTML 附件\"></a>发送 HTML 附件</h3><p>这里使用的 HTML 是一个小爬虫爬到的数据，经简单包装后返回一个字符串，把字符串作为附件发送。</p>\n<pre><code class=\"python\"><span class=\"comment\">#!/usr/bin/python</span>\n<span class=\"comment\">#coding:utf-8 </span>\n<span class=\"keyword\">import</span> sys \n<span class=\"keyword\">import</span> smtplib \n<span class=\"keyword\">import</span> traceback\n<span class=\"keyword\">import</span> make_html_bs\n<span class=\"keyword\">from</span> email.header <span class=\"keyword\">import</span> Header\n<span class=\"keyword\">from</span> email.mime.image <span class=\"keyword\">import</span> MIMEImage\n<span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart \n<span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText    \n\nreload(sys)\nsys.setdefaultencoding(<span class=\"string\">'utf-8'</span>)\n<span class=\"comment\"># 第三方 SMTP 服务  </span>\nmail_host=<span class=\"string\">\"smtp.sina.com\"</span>  <span class=\"comment\">#设置服务器  </span>\nmail_user=<span class=\"string\">\"yuwancumiana@sina.cn\"</span>    <span class=\"comment\">#用户名  </span>\nmail_pass=<span class=\"string\">\"\"</span>   <span class=\"comment\">#密码</span>\n\nsender = <span class=\"string\">'yuwancumiana@sina.cn'</span>  \nreceivers = [<span class=\"string\">'yuwancumian666@gmail.com'</span>,<span class=\"string\">'2535257276@qq.com'</span>,<span class=\"string\">'635936876@qq.com'</span>]  <span class=\"comment\"># 接收邮件，可设置为你的QQ邮箱或者其他邮箱  </span>\n\nmail = MIMEMultipart(<span class=\"string\">\"mixed\"</span>)  \nmail[<span class=\"string\">'From'</span>] = <span class=\"string\">\"yuwancumiana@sina.cn\"</span>  \nmail[<span class=\"string\">'To'</span>] = <span class=\"string\">\"鱼丸粗面\"</span> \nmail[<span class=\"string\">'Subject'</span>] = Header(<span class=\"string\">'福利'</span>,<span class=\"string\">'utf-8'</span>)\nmessage = MIMEText(<span class=\"string\">\"今日福利(windows)\"</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)\nmail.attach(message)\n<span class=\"keyword\">try</span>:\n    html = make_html_bs.get_html().encode(<span class=\"string\">'utf-8'</span>) <span class=\"comment\"># 这里使用的是另一个爬虫模块返回的数据，为 HTML 格式</span>\n<span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:\n    <span class=\"keyword\">print</span> traceback.print_exc()\n    sys.exit(<span class=\"string\">u\"loading pages failed...\"</span>)\nHTML = MIMEText(html, _subtype=<span class=\"string\">'html'</span>, _charset=<span class=\"string\">'utf-8'</span>)\nmail.attach(HTML)\n\n<span class=\"keyword\">try</span>:  \n\n    smtp = smtplib.SMTP()\n    smtp.connect(mail_host)\n    smtp.login(mail_user, mail_pass)    \n    smtp.sendmail(sender, receivers, mail.as_string())\n    smtp.close()\n    <span class=\"keyword\">print</span> <span class=\"string\">u\"send mail success\"</span>  \n<span class=\"keyword\">except</span> smtplib.SMTPException,e:\n    <span class=\"keyword\">print</span> e \n</code></pre>\n<p>结果（你猜猜内容是啥😄）：<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png\" alt=\"exp3\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>因为发送邮件的方式（不加密、SSL、TLS、）和类型（附件类型、附件头，附件内容）多种多样，邮件服务器总结起来也非常他喵的麻烦。我之前是做了不少的测试脚本，最后挑了一个经常用的。我对于这个 python 邮件的想法是：能用就成~O(∩_∩)O</p>"},{"layout":"post","title":"Python 制作词云","subtitle":"哈哈哈","date":"2018-02-02T00:00:00.000Z","img":"2018-02-04-cloud.jpg","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe cloud stood humbly in a corner of the sky. The morning crowner it with splendor. \n\t白云谦逊地站在天之一隅，晨光给他戴上了霞彩。\n{% endblockquote %}\n\n<!-- more -->\n\n### What is 词云\n\n“词云”（Wordle，Word cloud）就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，简单说就是由词汇组成类似云的彩色图片。\n\n### 准备依赖包\n\n网上自动生成词云的网站有很多，在这里使用 “<a href=\"https://github.com/amueller/word_cloud\" target=\"_blank\">wordcloud</a>” 依赖，功能强大，简单易上手。若需要做中文的词云，需要中文分词工具“<a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\">jieba</a> ”对文本解析。\n安装 wordcloud 和 jieba：`pip install wordcloud`，`pip install jieba`。如果你安装了多个版本的 Python，则前者默认给Python3安装，若需要给python2 安装 wordcloud，使用 `py -2 -m pip install wordcloud`。 \n\n### 英文词云\n\n这个代码会生成两个词云作为对比，一个是随机颜色，一个是以照片底色为基准颜色的词云。在 WordCloud 方法中，可根据自身需要更改参数以取得最佳效果。\n\n``` python\n#! python3\nfrom PIL import Image\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\ntext = open('txt/Maraba.txt').read() # 选择文本\nalice_coloring = np.array(Image.open(\"sb.jpg\")) # 模板图片\nstopwords = set(STOPWORDS)\nstopwords.add(\"said\")\n\nwc = WordCloud(background_color=\"white\", max_words=2000, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=80, min_font_size=5, \n                font_path='CabinSketch-Bold.ttf',\n                random_state=42)\nwc.generate(text)\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc, interpolation=\"bilinear\") # 词云颜色随机\nplt.axis(\"off\")\nwc.to_file('sb1.png') # 保存图片到文件\n\nplt.figure() # 新建画布\nwc2 = wc.recolor(color_func=image_colors) # 以图片底色作为词云底色\nplt.imshow(wc2, interpolation=\"bilinear\")\nplt.axis(\"off\")\nwc2.to_file('sb2.png')\n\nplt.show()\n``` \n\n以下是效果图及对比：\n\n{% gp 1-3 %}\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg\" width=\"209\" height=\"365\" alt=\"害羞的刘洪宇\">\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png\" width=\"209\" height=\"365\" alt=\"随机彩色\">\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png\" width=\"209\" height=\"365\" alt=\"原图色\">\n{% endgp %}\n\n### 中文词云\n\n开始运行行代码的时候，只显式了若干彩色的小矩形框（乱码，Python 的字符编码令人抓狂），中文词语显式不出来，网上搜博客说是 wordcloud 生成词语的字体问题。进入wordcloud.py 的源码，找字体库相关的代码``` FONT_PATH = os.environ.get(\"FONT_PATH\", os.path.join(os.path.dirname(__file__),\"DroidSansMono.ttf\")) ```，将之改为支持中文的字体即可解决。\n\n``` python\n#! python3\n# encoding=utf-8\nimport numpy as np\nfrom PIL import Image\nimport jieba\nimport jieba.analyse as analyse\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nalice_coloring = np.array(Image.open(\"logo1024.jpg\"))\nstopwords = set(STOPWORDS)\nstopwords.add(\"said\")\n\ndef chinese():\n    string = \"\"\n    with open('hotWords.txt', 'r', encoding='GBK') as f:\n        for i in f:\n            string += i\n    liction = analyse.textrank(string, topK=50, withWeight=True)\n    keywords = {}\n    for word in liction:\n        keywords[word[0]] = word[1]\n        \n    return keywords\n        \nwc = WordCloud(background_color=\"white\", max_words=2000, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=80, min_font_size=2, \n                #font_path='CabinSketch-Bold.ttf',\n                random_state=42)\n                \nwc.generate_from_frequencies(chinese())\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc.recolor(color_func=image_colors), interpolation=\"bilinear\")\nplt.axis(\"off\")\nwc.to_file('weibo_logo1024.jpg')\nplt.show()\n``` \n\n{% gp 1-2 %}\n\t<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg\" width=\"320\" height=\"320\" alt=\"中文分词\">\n\t<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg\" width=\"320\" height=\"320\" alt=\"英文对比\">\n{% endgp %}\n\n另附：下载微博热搜榜热搜词代码（默认下载三次）。简单的说，这个代码也是一个小爬虫，通过多次刷新热搜榜以获得较多的样本数量，将热搜词爬取下来保存为文本。\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\nfrom bs4 import BeautifulSoup as bs\n\ndef download(url, proxy=None, num_retries=2):\n    headers = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n    print (\"Downloading: \"+url+\"...\")\n    request = ulb.Request(url=url, headers=headers)\n    time.sleep(1)\n    try:\n        html = ulb.urlopen(request).read()\n    except ulb.URLError as e:\n        print (\"Download Error: \" + str(e.reason))\n        html = None\n        if num_retries > 0:\n            if hasattr(e, 'code') and 500 <= e.code < 600:\n                return download(url, num_retries-1)\n    return html\n    \ndef getList():\n    url = 'http://s.weibo.com/top/summary?cate=realtimehot'\n    html = download(url)\n    soup = bs(html, 'lxml')\n    plist = soup.find_all('p',class_='star_name')\n    list = []\n    for tag in plist:\n        list.append(tag.contents[1].string)\n        \n    return list\n    \nif __name__ == '__main__':\n    list = []\n    for i in range(3):\n        list = list + getList()\n        list.append('\\n')\n    \n    with open('hotWords.txt', 'w') as f:\n        for word in list:\n            f.write(word+'\\n')\n``` ","source":"_posts/2018-02-02-python-word-cloud.markdown","raw":"---\nlayout: post\ntitle: Python 制作词云\nsubtitle: 哈哈哈\ndate: 2018-02-02 00:00:00 +0800\nimg: 2018-02-04-cloud.jpg\ncategories:\n- Python\ntags: \n- Python\n- 词云\n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe cloud stood humbly in a corner of the sky. The morning crowner it with splendor. \n\t白云谦逊地站在天之一隅，晨光给他戴上了霞彩。\n{% endblockquote %}\n\n<!-- more -->\n\n### What is 词云\n\n“词云”（Wordle，Word cloud）就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，简单说就是由词汇组成类似云的彩色图片。\n\n### 准备依赖包\n\n网上自动生成词云的网站有很多，在这里使用 “<a href=\"https://github.com/amueller/word_cloud\" target=\"_blank\">wordcloud</a>” 依赖，功能强大，简单易上手。若需要做中文的词云，需要中文分词工具“<a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\">jieba</a> ”对文本解析。\n安装 wordcloud 和 jieba：`pip install wordcloud`，`pip install jieba`。如果你安装了多个版本的 Python，则前者默认给Python3安装，若需要给python2 安装 wordcloud，使用 `py -2 -m pip install wordcloud`。 \n\n### 英文词云\n\n这个代码会生成两个词云作为对比，一个是随机颜色，一个是以照片底色为基准颜色的词云。在 WordCloud 方法中，可根据自身需要更改参数以取得最佳效果。\n\n``` python\n#! python3\nfrom PIL import Image\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\ntext = open('txt/Maraba.txt').read() # 选择文本\nalice_coloring = np.array(Image.open(\"sb.jpg\")) # 模板图片\nstopwords = set(STOPWORDS)\nstopwords.add(\"said\")\n\nwc = WordCloud(background_color=\"white\", max_words=2000, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=80, min_font_size=5, \n                font_path='CabinSketch-Bold.ttf',\n                random_state=42)\nwc.generate(text)\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc, interpolation=\"bilinear\") # 词云颜色随机\nplt.axis(\"off\")\nwc.to_file('sb1.png') # 保存图片到文件\n\nplt.figure() # 新建画布\nwc2 = wc.recolor(color_func=image_colors) # 以图片底色作为词云底色\nplt.imshow(wc2, interpolation=\"bilinear\")\nplt.axis(\"off\")\nwc2.to_file('sb2.png')\n\nplt.show()\n``` \n\n以下是效果图及对比：\n\n{% gp 1-3 %}\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg\" width=\"209\" height=\"365\" alt=\"害羞的刘洪宇\">\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png\" width=\"209\" height=\"365\" alt=\"随机彩色\">\n    <img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png\" width=\"209\" height=\"365\" alt=\"原图色\">\n{% endgp %}\n\n### 中文词云\n\n开始运行行代码的时候，只显式了若干彩色的小矩形框（乱码，Python 的字符编码令人抓狂），中文词语显式不出来，网上搜博客说是 wordcloud 生成词语的字体问题。进入wordcloud.py 的源码，找字体库相关的代码``` FONT_PATH = os.environ.get(\"FONT_PATH\", os.path.join(os.path.dirname(__file__),\"DroidSansMono.ttf\")) ```，将之改为支持中文的字体即可解决。\n\n``` python\n#! python3\n# encoding=utf-8\nimport numpy as np\nfrom PIL import Image\nimport jieba\nimport jieba.analyse as analyse\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nalice_coloring = np.array(Image.open(\"logo1024.jpg\"))\nstopwords = set(STOPWORDS)\nstopwords.add(\"said\")\n\ndef chinese():\n    string = \"\"\n    with open('hotWords.txt', 'r', encoding='GBK') as f:\n        for i in f:\n            string += i\n    liction = analyse.textrank(string, topK=50, withWeight=True)\n    keywords = {}\n    for word in liction:\n        keywords[word[0]] = word[1]\n        \n    return keywords\n        \nwc = WordCloud(background_color=\"white\", max_words=2000, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=80, min_font_size=2, \n                #font_path='CabinSketch-Bold.ttf',\n                random_state=42)\n                \nwc.generate_from_frequencies(chinese())\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc.recolor(color_func=image_colors), interpolation=\"bilinear\")\nplt.axis(\"off\")\nwc.to_file('weibo_logo1024.jpg')\nplt.show()\n``` \n\n{% gp 1-2 %}\n\t<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg\" width=\"320\" height=\"320\" alt=\"中文分词\">\n\t<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg\" width=\"320\" height=\"320\" alt=\"英文对比\">\n{% endgp %}\n\n另附：下载微博热搜榜热搜词代码（默认下载三次）。简单的说，这个代码也是一个小爬虫，通过多次刷新热搜榜以获得较多的样本数量，将热搜词爬取下来保存为文本。\n\n``` python\n#! python3\n# -*- coding:utf-8 -*- \n\nimport time\nimport urllib.request as ulb\nfrom bs4 import BeautifulSoup as bs\n\ndef download(url, proxy=None, num_retries=2):\n    headers = {'User-Agent':'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'}\n    print (\"Downloading: \"+url+\"...\")\n    request = ulb.Request(url=url, headers=headers)\n    time.sleep(1)\n    try:\n        html = ulb.urlopen(request).read()\n    except ulb.URLError as e:\n        print (\"Download Error: \" + str(e.reason))\n        html = None\n        if num_retries > 0:\n            if hasattr(e, 'code') and 500 <= e.code < 600:\n                return download(url, num_retries-1)\n    return html\n    \ndef getList():\n    url = 'http://s.weibo.com/top/summary?cate=realtimehot'\n    html = download(url)\n    soup = bs(html, 'lxml')\n    plist = soup.find_all('p',class_='star_name')\n    list = []\n    for tag in plist:\n        list.append(tag.contents[1].string)\n        \n    return list\n    \nif __name__ == '__main__':\n    list = []\n    for i in range(3):\n        list = list + getList()\n        list.append('\\n')\n    \n    with open('hotWords.txt', 'w') as f:\n        for word in list:\n            f.write(word+'\\n')\n``` ","slug":"python-word-cloud","published":1,"updated":"2019-03-04T13:44:15.536Z","comments":1,"photos":[],"link":"","_id":"cjwj070e8001tm8zadt2dt4zx","content":"<blockquote><p>The cloud stood humbly in a corner of the sky. The morning crowner it with splendor.<br>白云谦逊地站在天之一隅，晨光给他戴上了霞彩。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"What-is-词云\"><a href=\"#What-is-词云\" class=\"headerlink\" title=\"What is 词云\"></a>What is 词云</h3><p>“词云”（Wordle，Word cloud）就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，简单说就是由词汇组成类似云的彩色图片。</p>\n<h3 id=\"准备依赖包\"><a href=\"#准备依赖包\" class=\"headerlink\" title=\"准备依赖包\"></a>准备依赖包</h3><p>网上自动生成词云的网站有很多，在这里使用 “<a href=\"https://github.com/amueller/word_cloud\" target=\"_blank\">wordcloud</a>” 依赖，功能强大，简单易上手。若需要做中文的词云，需要中文分词工具“<a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\">jieba</a> ”对文本解析。<br>安装 wordcloud 和 jieba：<code>pip install wordcloud</code>，<code>pip install jieba</code>。如果你安装了多个版本的 Python，则前者默认给Python3安装，若需要给python2 安装 wordcloud，使用 <code>py -2 -m pip install wordcloud</code>。 </p>\n<h3 id=\"英文词云\"><a href=\"#英文词云\" class=\"headerlink\" title=\"英文词云\"></a>英文词云</h3><p>这个代码会生成两个词云作为对比，一个是随机颜色，一个是以照片底色为基准颜色的词云。在 WordCloud 方法中，可根据自身需要更改参数以取得最佳效果。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt\n<span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud, STOPWORDS, ImageColorGenerator\n\ntext = open(<span class=\"string\">'txt/Maraba.txt'</span>).read() <span class=\"comment\"># 选择文本</span>\nalice_coloring = np.array(Image.open(<span class=\"string\">\"sb.jpg\"</span>)) <span class=\"comment\"># 模板图片</span>\nstopwords = set(STOPWORDS)\nstopwords.add(<span class=\"string\">\"said\"</span>)\n\nwc = WordCloud(background_color=<span class=\"string\">\"white\"</span>, max_words=<span class=\"number\">2000</span>, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=<span class=\"number\">80</span>, min_font_size=<span class=\"number\">5</span>, \n                font_path=<span class=\"string\">'CabinSketch-Bold.ttf'</span>,\n                random_state=<span class=\"number\">42</span>)\nwc.generate(text)\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc, interpolation=<span class=\"string\">\"bilinear\"</span>) <span class=\"comment\"># 词云颜色随机</span>\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc.to_file(<span class=\"string\">'sb1.png'</span>) <span class=\"comment\"># 保存图片到文件</span>\n\nplt.figure() <span class=\"comment\"># 新建画布</span>\nwc2 = wc.recolor(color_func=image_colors) <span class=\"comment\"># 以图片底色作为词云底色</span>\nplt.imshow(wc2, interpolation=<span class=\"string\">\"bilinear\"</span>)\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc2.to_file(<span class=\"string\">'sb2.png'</span>)\n\nplt.show()</code></pre>\n<p>以下是效果图及对比：</p>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg\" width=\"209\" height=\"365\" alt=\"害羞的刘洪宇\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png\" width=\"209\" height=\"365\" alt=\"随机彩色\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png\" width=\"209\" height=\"365\" alt=\"原图色\"></div></div></div></div>\n\n<h3 id=\"中文词云\"><a href=\"#中文词云\" class=\"headerlink\" title=\"中文词云\"></a>中文词云</h3><p>开始运行行代码的时候，只显式了若干彩色的小矩形框（乱码，Python 的字符编码令人抓狂），中文词语显式不出来，网上搜博客说是 wordcloud 生成词语的字体问题。进入wordcloud.py 的源码，找字体库相关的代码<code>FONT_PATH = os.environ.get(&quot;FONT_PATH&quot;, os.path.join(os.path.dirname(__file__),&quot;DroidSansMono.ttf&quot;))</code>，将之改为支持中文的字体即可解决。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"comment\"># encoding=utf-8</span>\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image\n<span class=\"keyword\">import</span> jieba\n<span class=\"keyword\">import</span> jieba.analyse <span class=\"keyword\">as</span> analyse\n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt\n<span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud, STOPWORDS, ImageColorGenerator\n\nalice_coloring = np.array(Image.open(<span class=\"string\">\"logo1024.jpg\"</span>))\nstopwords = set(STOPWORDS)\nstopwords.add(<span class=\"string\">\"said\"</span>)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">chinese</span><span class=\"params\">()</span>:</span>\n    string = <span class=\"string\">\"\"</span>\n    <span class=\"keyword\">with</span> open(<span class=\"string\">'hotWords.txt'</span>, <span class=\"string\">'r'</span>, encoding=<span class=\"string\">'GBK'</span>) <span class=\"keyword\">as</span> f:\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> f:\n            string += i\n    liction = analyse.textrank(string, topK=<span class=\"number\">50</span>, withWeight=<span class=\"literal\">True</span>)\n    keywords = {}\n    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> liction:\n        keywords[word[<span class=\"number\">0</span>]] = word[<span class=\"number\">1</span>]\n\n    <span class=\"keyword\">return</span> keywords\n\nwc = WordCloud(background_color=<span class=\"string\">\"white\"</span>, max_words=<span class=\"number\">2000</span>, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=<span class=\"number\">80</span>, min_font_size=<span class=\"number\">2</span>, \n                <span class=\"comment\">#font_path='CabinSketch-Bold.ttf',</span>\n                random_state=<span class=\"number\">42</span>)\n\nwc.generate_from_frequencies(chinese())\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc.recolor(color_func=image_colors), interpolation=<span class=\"string\">\"bilinear\"</span>)\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc.to_file(<span class=\"string\">'weibo_logo1024.jpg'</span>)\nplt.show()</code></pre>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg\" width=\"320\" height=\"320\" alt=\"中文分词\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg\" width=\"320\" height=\"320\" alt=\"英文对比\"></div></div></div></div>\n\n<p>另附：下载微博热搜榜热搜词代码（默认下载三次）。简单的说，这个代码也是一个小爬虫，通过多次刷新热搜榜以获得较多的样本数量，将热搜词爬取下来保存为文本。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"comment\"># -*- coding:utf-8 -*- </span>\n\n<span class=\"keyword\">import</span> time\n<span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> ulb\n<span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> bs\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span>\n    headers = {<span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'</span>}\n    <span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span>+url+<span class=\"string\">\"...\"</span>)\n    request = ulb.Request(url=url, headers=headers)\n    time.sleep(<span class=\"number\">1</span>)\n    <span class=\"keyword\">try</span>:\n        html = ulb.urlopen(request).read()\n    <span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error: \"</span> + str(e.reason))\n        html = <span class=\"literal\">None</span>\n        <span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:\n            <span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:\n                <span class=\"keyword\">return</span> download(url, num_retries<span class=\"number\">-1</span>)\n    <span class=\"keyword\">return</span> html\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getList</span><span class=\"params\">()</span>:</span>\n    url = <span class=\"string\">'http://s.weibo.com/top/summary?cate=realtimehot'</span>\n    html = download(url)\n    soup = bs(html, <span class=\"string\">'lxml'</span>)\n    plist = soup.find_all(<span class=\"string\">'p'</span>,class_=<span class=\"string\">'star_name'</span>)\n    list = []\n    <span class=\"keyword\">for</span> tag <span class=\"keyword\">in</span> plist:\n        list.append(tag.contents[<span class=\"number\">1</span>].string)\n\n    <span class=\"keyword\">return</span> list\n\n<span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:\n    list = []\n    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>):\n        list = list + getList()\n        list.append(<span class=\"string\">'\\n'</span>)\n\n    <span class=\"keyword\">with</span> open(<span class=\"string\">'hotWords.txt'</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:\n        <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> list:\n            f.write(word+<span class=\"string\">'\\n'</span>)</code></pre>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The cloud stood humbly in a corner of the sky. The morning crowner it with splendor.<br>白云谦逊地站在天之一隅，晨光给他戴上了霞彩。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"What-is-词云\"><a href=\"#What-is-词云\" class=\"headerlink\" title=\"What is 词云\"></a>What is 词云</h3><p>“词云”（Wordle，Word cloud）就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，简单说就是由词汇组成类似云的彩色图片。</p>\n<h3 id=\"准备依赖包\"><a href=\"#准备依赖包\" class=\"headerlink\" title=\"准备依赖包\"></a>准备依赖包</h3><p>网上自动生成词云的网站有很多，在这里使用 “<a href=\"https://github.com/amueller/word_cloud\" target=\"_blank\">wordcloud</a>” 依赖，功能强大，简单易上手。若需要做中文的词云，需要中文分词工具“<a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\">jieba</a> ”对文本解析。<br>安装 wordcloud 和 jieba：<code>pip install wordcloud</code>，<code>pip install jieba</code>。如果你安装了多个版本的 Python，则前者默认给Python3安装，若需要给python2 安装 wordcloud，使用 <code>py -2 -m pip install wordcloud</code>。 </p>\n<h3 id=\"英文词云\"><a href=\"#英文词云\" class=\"headerlink\" title=\"英文词云\"></a>英文词云</h3><p>这个代码会生成两个词云作为对比，一个是随机颜色，一个是以照片底色为基准颜色的词云。在 WordCloud 方法中，可根据自身需要更改参数以取得最佳效果。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt\n<span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud, STOPWORDS, ImageColorGenerator\n\ntext = open(<span class=\"string\">'txt/Maraba.txt'</span>).read() <span class=\"comment\"># 选择文本</span>\nalice_coloring = np.array(Image.open(<span class=\"string\">\"sb.jpg\"</span>)) <span class=\"comment\"># 模板图片</span>\nstopwords = set(STOPWORDS)\nstopwords.add(<span class=\"string\">\"said\"</span>)\n\nwc = WordCloud(background_color=<span class=\"string\">\"white\"</span>, max_words=<span class=\"number\">2000</span>, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=<span class=\"number\">80</span>, min_font_size=<span class=\"number\">5</span>, \n                font_path=<span class=\"string\">'CabinSketch-Bold.ttf'</span>,\n                random_state=<span class=\"number\">42</span>)\nwc.generate(text)\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc, interpolation=<span class=\"string\">\"bilinear\"</span>) <span class=\"comment\"># 词云颜色随机</span>\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc.to_file(<span class=\"string\">'sb1.png'</span>) <span class=\"comment\"># 保存图片到文件</span>\n\nplt.figure() <span class=\"comment\"># 新建画布</span>\nwc2 = wc.recolor(color_func=image_colors) <span class=\"comment\"># 以图片底色作为词云底色</span>\nplt.imshow(wc2, interpolation=<span class=\"string\">\"bilinear\"</span>)\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc2.to_file(<span class=\"string\">'sb2.png'</span>)\n\nplt.show()</code></pre>\n<p>以下是效果图及对比：</p>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg\" width=\"209\" height=\"365\" alt=\"害羞的刘洪宇\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png\" width=\"209\" height=\"365\" alt=\"随机彩色\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png\" width=\"209\" height=\"365\" alt=\"原图色\"></div></div></div></div>\n\n<h3 id=\"中文词云\"><a href=\"#中文词云\" class=\"headerlink\" title=\"中文词云\"></a>中文词云</h3><p>开始运行行代码的时候，只显式了若干彩色的小矩形框（乱码，Python 的字符编码令人抓狂），中文词语显式不出来，网上搜博客说是 wordcloud 生成词语的字体问题。进入wordcloud.py 的源码，找字体库相关的代码<code>FONT_PATH = os.environ.get(&quot;FONT_PATH&quot;, os.path.join(os.path.dirname(__file__),&quot;DroidSansMono.ttf&quot;))</code>，将之改为支持中文的字体即可解决。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"comment\"># encoding=utf-8</span>\n<span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np\n<span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image\n<span class=\"keyword\">import</span> jieba\n<span class=\"keyword\">import</span> jieba.analyse <span class=\"keyword\">as</span> analyse\n<span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt\n<span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud, STOPWORDS, ImageColorGenerator\n\nalice_coloring = np.array(Image.open(<span class=\"string\">\"logo1024.jpg\"</span>))\nstopwords = set(STOPWORDS)\nstopwords.add(<span class=\"string\">\"said\"</span>)\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">chinese</span><span class=\"params\">()</span>:</span>\n    string = <span class=\"string\">\"\"</span>\n    <span class=\"keyword\">with</span> open(<span class=\"string\">'hotWords.txt'</span>, <span class=\"string\">'r'</span>, encoding=<span class=\"string\">'GBK'</span>) <span class=\"keyword\">as</span> f:\n        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> f:\n            string += i\n    liction = analyse.textrank(string, topK=<span class=\"number\">50</span>, withWeight=<span class=\"literal\">True</span>)\n    keywords = {}\n    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> liction:\n        keywords[word[<span class=\"number\">0</span>]] = word[<span class=\"number\">1</span>]\n\n    <span class=\"keyword\">return</span> keywords\n\nwc = WordCloud(background_color=<span class=\"string\">\"white\"</span>, max_words=<span class=\"number\">2000</span>, mask=alice_coloring,\n                stopwords=stopwords, max_font_size=<span class=\"number\">80</span>, min_font_size=<span class=\"number\">2</span>, \n                <span class=\"comment\">#font_path='CabinSketch-Bold.ttf',</span>\n                random_state=<span class=\"number\">42</span>)\n\nwc.generate_from_frequencies(chinese())\nimage_colors = ImageColorGenerator(alice_coloring)\n\nplt.imshow(wc.recolor(color_func=image_colors), interpolation=<span class=\"string\">\"bilinear\"</span>)\nplt.axis(<span class=\"string\">\"off\"</span>)\nwc.to_file(<span class=\"string\">'weibo_logo1024.jpg'</span>)\nplt.show()</code></pre>\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg\" width=\"320\" height=\"320\" alt=\"中文分词\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg\" width=\"320\" height=\"320\" alt=\"英文对比\"></div></div></div></div>\n\n<p>另附：下载微博热搜榜热搜词代码（默认下载三次）。简单的说，这个代码也是一个小爬虫，通过多次刷新热搜榜以获得较多的样本数量，将热搜词爬取下来保存为文本。</p>\n<pre><code class=\"python\"><span class=\"comment\">#! python3</span>\n<span class=\"comment\"># -*- coding:utf-8 -*- </span>\n\n<span class=\"keyword\">import</span> time\n<span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> ulb\n<span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> bs\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(url, proxy=None, num_retries=<span class=\"number\">2</span>)</span>:</span>\n    headers = {<span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6'</span>}\n    <span class=\"keyword\">print</span> (<span class=\"string\">\"Downloading: \"</span>+url+<span class=\"string\">\"...\"</span>)\n    request = ulb.Request(url=url, headers=headers)\n    time.sleep(<span class=\"number\">1</span>)\n    <span class=\"keyword\">try</span>:\n        html = ulb.urlopen(request).read()\n    <span class=\"keyword\">except</span> ulb.URLError <span class=\"keyword\">as</span> e:\n        <span class=\"keyword\">print</span> (<span class=\"string\">\"Download Error: \"</span> + str(e.reason))\n        html = <span class=\"literal\">None</span>\n        <span class=\"keyword\">if</span> num_retries &gt; <span class=\"number\">0</span>:\n            <span class=\"keyword\">if</span> hasattr(e, <span class=\"string\">'code'</span>) <span class=\"keyword\">and</span> <span class=\"number\">500</span> &lt;= e.code &lt; <span class=\"number\">600</span>:\n                <span class=\"keyword\">return</span> download(url, num_retries<span class=\"number\">-1</span>)\n    <span class=\"keyword\">return</span> html\n\n<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getList</span><span class=\"params\">()</span>:</span>\n    url = <span class=\"string\">'http://s.weibo.com/top/summary?cate=realtimehot'</span>\n    html = download(url)\n    soup = bs(html, <span class=\"string\">'lxml'</span>)\n    plist = soup.find_all(<span class=\"string\">'p'</span>,class_=<span class=\"string\">'star_name'</span>)\n    list = []\n    <span class=\"keyword\">for</span> tag <span class=\"keyword\">in</span> plist:\n        list.append(tag.contents[<span class=\"number\">1</span>].string)\n\n    <span class=\"keyword\">return</span> list\n\n<span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:\n    list = []\n    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>):\n        list = list + getList()\n        list.append(<span class=\"string\">'\\n'</span>)\n\n    <span class=\"keyword\">with</span> open(<span class=\"string\">'hotWords.txt'</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:\n        <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> list:\n            f.write(word+<span class=\"string\">'\\n'</span>)</code></pre>"},{"layout":"post","title":"Hbase 的安装配置","date":"2018-01-29T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tTake my wine in my own cup, friend. It lose its wreath of foam when poured into that of others. \n\t在我自己的杯中，饮了我的酒吧，朋友。一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 环境变量配置\n\n在家目录的 “.bashrc” 文件里边配置环境变量，内容应当包括 JDK、Hadoop 和 Hbase。\n\n``` shell\nexport JAVA_HOME=/home/user/bigdata/jdk\nexport HADOOP_HOME=/home/user/bigdata/hadoop\nexport HBASE_HOME=/home/user/bigdata/hbase\nexport CLASS_PATH=.:$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib\nexport PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HABASE_HOME/bin:${PATH}\n```\n\n为了方便操作 hbase，以上已经添加了配置的 Hbase 环境变量： *HBASE_HOME* （非必须）\n\n### 配置文件\n\n**hbase-env.sh**\n\n在 hbase/conf 文件夹下，打开 hbase-env.sh，找到 jdk 的路径配置，添加 ```export JAVA_HOME=/home/user/bigdata/jdk```\n配置完 jdk 路径后，在下方可以看到配置 HBASE_CLASSPATH 的提示，添加 ```export HBASE_CLASSPATH=/home/user/bigdata/hadoop/etc/hadoop```\n![exp](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png)\n\n**hbase-site.xml**\n\n进入编辑模式，在 ```<configuration>``` 下添加以下字段：\n\n``` xml\n<property>\n    <name>hbase.zookeeper.property.dataDir</name>\n    <value>/home/user/bigdata/zookeeper</value>  <!-- Zookeeper下载包解压的位置 -->\n</property>\n<property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n</property>\n<!-- 使用hdfs：//// URI语法将hbase.rootdir从本地文件系统更改为HDFS实例的地址。 \n\t在此例中，HDFS在端口8020的本地主机上运行。 -->\n<property>\n    <name>hbase.rootdir</name>\n    <value>hdfs://localhost:8020/hbase</value>\n</property>\n<property>\n    <name>hbase.zookeeper.quorum</name>\n    <value>node-a.example.com,node-b.example.com</value>  <!-- 这里填写集群中的主机名 -->\n</property>\n<property>\n   <name>hbase.zookeeper.property.clientPort</name>\n   <value>2181</value>\n</property>\n``` \n\n此外，如果应用单独Zookeeper，需发更改/conf/hbase-env.sh下配置参数HBASE_MANAGES_ZK的值为true，即：\n`export HBASE_MANAGES_ZK=true`\n\n### Hbase 启动、停止、监控\n\n**启动、停止**\n\n`start-hbase.sh(stop-hbase.sh)`，该文件在 hbase/bin 文件夹下，已经添加环境变量，所以可以在任意目录执行。（同 Hadoop）\n\n**查看守护进程**\n\njps 命令查看守护进程，有 Hmaster 字样说明启动成功。\n\n**浏览器页面查看**\n\n在0.98.x以后的 Hbase 版本中，HBase Web UI使用的HTTP端口从主服务器的60010和每个RegionServer的60030更改为主服务器的16010和RegionServer的16030。","source":"_posts/2018-01-29-bigdata-hbase.markdown","raw":"---\nlayout: post\ntitle: Hbase 的安装配置\ndate: 2018-01-29 00:00:00 +0800\ncategories:\n- 大数据\n- HBase\ntags: [大数据, Hbase] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tTake my wine in my own cup, friend. It lose its wreath of foam when poured into that of others. \n\t在我自己的杯中，饮了我的酒吧，朋友。一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 环境变量配置\n\n在家目录的 “.bashrc” 文件里边配置环境变量，内容应当包括 JDK、Hadoop 和 Hbase。\n\n``` shell\nexport JAVA_HOME=/home/user/bigdata/jdk\nexport HADOOP_HOME=/home/user/bigdata/hadoop\nexport HBASE_HOME=/home/user/bigdata/hbase\nexport CLASS_PATH=.:$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib\nexport PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HABASE_HOME/bin:${PATH}\n```\n\n为了方便操作 hbase，以上已经添加了配置的 Hbase 环境变量： *HBASE_HOME* （非必须）\n\n### 配置文件\n\n**hbase-env.sh**\n\n在 hbase/conf 文件夹下，打开 hbase-env.sh，找到 jdk 的路径配置，添加 ```export JAVA_HOME=/home/user/bigdata/jdk```\n配置完 jdk 路径后，在下方可以看到配置 HBASE_CLASSPATH 的提示，添加 ```export HBASE_CLASSPATH=/home/user/bigdata/hadoop/etc/hadoop```\n![exp](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png)\n\n**hbase-site.xml**\n\n进入编辑模式，在 ```<configuration>``` 下添加以下字段：\n\n``` xml\n<property>\n    <name>hbase.zookeeper.property.dataDir</name>\n    <value>/home/user/bigdata/zookeeper</value>  <!-- Zookeeper下载包解压的位置 -->\n</property>\n<property>\n    <name>hbase.cluster.distributed</name>\n    <value>true</value>\n</property>\n<!-- 使用hdfs：//// URI语法将hbase.rootdir从本地文件系统更改为HDFS实例的地址。 \n\t在此例中，HDFS在端口8020的本地主机上运行。 -->\n<property>\n    <name>hbase.rootdir</name>\n    <value>hdfs://localhost:8020/hbase</value>\n</property>\n<property>\n    <name>hbase.zookeeper.quorum</name>\n    <value>node-a.example.com,node-b.example.com</value>  <!-- 这里填写集群中的主机名 -->\n</property>\n<property>\n   <name>hbase.zookeeper.property.clientPort</name>\n   <value>2181</value>\n</property>\n``` \n\n此外，如果应用单独Zookeeper，需发更改/conf/hbase-env.sh下配置参数HBASE_MANAGES_ZK的值为true，即：\n`export HBASE_MANAGES_ZK=true`\n\n### Hbase 启动、停止、监控\n\n**启动、停止**\n\n`start-hbase.sh(stop-hbase.sh)`，该文件在 hbase/bin 文件夹下，已经添加环境变量，所以可以在任意目录执行。（同 Hadoop）\n\n**查看守护进程**\n\njps 命令查看守护进程，有 Hmaster 字样说明启动成功。\n\n**浏览器页面查看**\n\n在0.98.x以后的 Hbase 版本中，HBase Web UI使用的HTTP端口从主服务器的60010和每个RegionServer的60030更改为主服务器的16010和RegionServer的16030。","slug":"bigdata-hbase","published":1,"updated":"2019-03-04T13:23:49.463Z","comments":1,"photos":[],"link":"","_id":"cjwj070eb001ym8zat3yfl8kw","content":"<blockquote><p>Take my wine in my own cup, friend. It lose its wreath of foam when poured into that of others.<br>在我自己的杯中，饮了我的酒吧，朋友。一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"环境变量配置\"><a href=\"#环境变量配置\" class=\"headerlink\" title=\"环境变量配置\"></a>环境变量配置</h3><p>在家目录的 “.bashrc” 文件里边配置环境变量，内容应当包括 JDK、Hadoop 和 Hbase。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/home/user/bigdata/jdk</span><br><span class=\"line\">export HADOOP_HOME=/home/user/bigdata/hadoop</span><br><span class=\"line\">export HBASE_HOME=/home/user/bigdata/hbase</span><br><span class=\"line\">export CLASS_PATH=.:$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</span><br><span class=\"line\">export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HABASE_HOME/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了方便操作 hbase，以上已经添加了配置的 Hbase 环境变量： <em>HBASE_HOME</em> （非必须）</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p><strong>hbase-env.sh</strong></p>\n<p>在 hbase/conf 文件夹下，打开 hbase-env.sh，找到 jdk 的路径配置，添加 <figure class=\"highlight plain\"><figcaption><span>JAVA_HOME</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置完 jdk 路径后，在下方可以看到配置 HBASE_CLASSPATH 的提示，添加 ```export HBASE_CLASSPATH=/home/user/bigdata/hadoop/etc/hadoop</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png\" alt=\"exp\"></p>\n<p><strong>hbase-site.xml</strong></p>\n<p>进入编辑模式，在 <code>&lt;configuration&gt;</code> 下添加以下字段：</p>\n<pre><code class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/user/bigdata/zookeeper<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  <span class=\"comment\">&lt;!-- Zookeeper下载包解压的位置 --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.cluster.distributed<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"comment\">&lt;!-- 使用hdfs：//// URI语法将hbase.rootdir从本地文件系统更改为HDFS实例的地址。 </span>\n<span class=\"comment\">    在此例中，HDFS在端口8020的本地主机上运行。 --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.rootdir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://localhost:8020/hbase<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.quorum<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>node-a.example.com,node-b.example.com<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  <span class=\"comment\">&lt;!-- 这里填写集群中的主机名 --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n   <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2181<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></code></pre>\n<p>此外，如果应用单独Zookeeper，需发更改/conf/hbase-env.sh下配置参数HBASE_MANAGES_ZK的值为true，即：<br><code>export HBASE_MANAGES_ZK=true</code></p>\n<h3 id=\"Hbase-启动、停止、监控\"><a href=\"#Hbase-启动、停止、监控\" class=\"headerlink\" title=\"Hbase 启动、停止、监控\"></a>Hbase 启动、停止、监控</h3><p><strong>启动、停止</strong></p>\n<p><code>start-hbase.sh(stop-hbase.sh)</code>，该文件在 hbase/bin 文件夹下，已经添加环境变量，所以可以在任意目录执行。（同 Hadoop）</p>\n<p><strong>查看守护进程</strong></p>\n<p>jps 命令查看守护进程，有 Hmaster 字样说明启动成功。</p>\n<p><strong>浏览器页面查看</strong></p>\n<p>在0.98.x以后的 Hbase 版本中，HBase Web UI使用的HTTP端口从主服务器的60010和每个RegionServer的60030更改为主服务器的16010和RegionServer的16030。</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>Take my wine in my own cup, friend. It lose its wreath of foam when poured into that of others.<br>在我自己的杯中，饮了我的酒吧，朋友。一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"环境变量配置\"><a href=\"#环境变量配置\" class=\"headerlink\" title=\"环境变量配置\"></a>环境变量配置</h3><p>在家目录的 “.bashrc” 文件里边配置环境变量，内容应当包括 JDK、Hadoop 和 Hbase。</p>\n<!--�41-->\n\n<p>为了方便操作 hbase，以上已经添加了配置的 Hbase 环境变量： <em>HBASE_HOME</em> （非必须）</p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p><strong>hbase-env.sh</strong></p>\n<p>在 hbase/conf 文件夹下，打开 hbase-env.sh，找到 jdk 的路径配置，添加 <!--�42--></p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png\" alt=\"exp\"></p>\n<p><strong>hbase-site.xml</strong></p>\n<p>进入编辑模式，在 <code>&lt;configuration&gt;</code> 下添加以下字段：</p>\n<pre><code class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/user/bigdata/zookeeper<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  <span class=\"comment\">&lt;!-- Zookeeper下载包解压的位置 --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.cluster.distributed<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"comment\">&lt;!-- 使用hdfs：//// URI语法将hbase.rootdir从本地文件系统更改为HDFS实例的地址。 </span>\n<span class=\"comment\">    在此例中，HDFS在端口8020的本地主机上运行。 --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.rootdir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://localhost:8020/hbase<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.quorum<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>node-a.example.com,node-b.example.com<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  <span class=\"comment\">&lt;!-- 这里填写集群中的主机名 --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n   <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n   <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2181<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></code></pre>\n<p>此外，如果应用单独Zookeeper，需发更改/conf/hbase-env.sh下配置参数HBASE_MANAGES_ZK的值为true，即：<br><code>export HBASE_MANAGES_ZK=true</code></p>\n<h3 id=\"Hbase-启动、停止、监控\"><a href=\"#Hbase-启动、停止、监控\" class=\"headerlink\" title=\"Hbase 启动、停止、监控\"></a>Hbase 启动、停止、监控</h3><p><strong>启动、停止</strong></p>\n<p><code>start-hbase.sh(stop-hbase.sh)</code>，该文件在 hbase/bin 文件夹下，已经添加环境变量，所以可以在任意目录执行。（同 Hadoop）</p>\n<p><strong>查看守护进程</strong></p>\n<p>jps 命令查看守护进程，有 Hmaster 字样说明启动成功。</p>\n<p><strong>浏览器页面查看</strong></p>\n<p>在0.98.x以后的 Hbase 版本中，HBase Web UI使用的HTTP端口从主服务器的60010和每个RegionServer的60030更改为主服务器的16010和RegionServer的16030。</p>"},{"layout":"post","title":"HiveQL","subtitle":"哈哈哈","date":"2018-02-07T00:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nIn my solitude of my heart i feel the sigh of this widowed evening veiled with mist and rain. \n\t这孤独的黄昏，幕着雾与雨，我在我的心的孤寂里，感受到它的叹息。\n{% endblockquote %}\n\n<!-- more -->\n\n[官方文档]()\n\n从业务角度来讲，HQL 应该实现的功能应当包括：\n1. 基本查询：全表查询、指定字段查询、按条件查询\n2. 统计查询：分组、按条件查询\n3. 嵌套查询\n4. 连接查询\n5. 分区、索引、视图\n\n---------------------------------\n\n1. 通过 HQL 语句可以看到一个表里能产生的业务\n2. 通过看出来的业务反推，如果你设计表设计成什么样才是符合业务需求的\n3. 掌握基本 HQL 语句的用法\n**注意：**类型转换问题，是否符合语法规律。\n在写程序时要格外注意 NULL 值：是没有值还是出错。\n数值溢出问题：-65534>65535 正确\n\t\t\t (-35534-65535)>0 出现错误\n计数器设计的很贴心，运行时会把优化的一些数据 \n4. 聚合函数 <===> MapReduce\n`hive(dbself)> set hive.map.aggr=true`\n`hive(dbself)> seltct count(\\*) from employee;`\nset hive.map.aggr 为 True 时：\n优点：提高 HiveQL 聚合的执行性能，即将顶层的聚合操作放在 Map 阶段执行，减轻清洗阶段数据传输和 Reduce 阶段的执行时间，提升总体性能。\n缺点：该设置会消耗更多的内存\n顶层聚合操作(top-levelaggregation operation)，是指在 group by 语句之前的聚合操作。\n","source":"_posts/2018-02-07-hive-hql.markdown","raw":"---\nlayout: post\ntitle: HiveQL\nsubtitle: 哈哈哈\ndate: 2018-02-07 00:00:00 +0800\ncategories:\n- 大数据\n- Hive\ntags: [Hive, 大数据] \n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nIn my solitude of my heart i feel the sigh of this widowed evening veiled with mist and rain. \n\t这孤独的黄昏，幕着雾与雨，我在我的心的孤寂里，感受到它的叹息。\n{% endblockquote %}\n\n<!-- more -->\n\n[官方文档]()\n\n从业务角度来讲，HQL 应该实现的功能应当包括：\n1. 基本查询：全表查询、指定字段查询、按条件查询\n2. 统计查询：分组、按条件查询\n3. 嵌套查询\n4. 连接查询\n5. 分区、索引、视图\n\n---------------------------------\n\n1. 通过 HQL 语句可以看到一个表里能产生的业务\n2. 通过看出来的业务反推，如果你设计表设计成什么样才是符合业务需求的\n3. 掌握基本 HQL 语句的用法\n**注意：**类型转换问题，是否符合语法规律。\n在写程序时要格外注意 NULL 值：是没有值还是出错。\n数值溢出问题：-65534>65535 正确\n\t\t\t (-35534-65535)>0 出现错误\n计数器设计的很贴心，运行时会把优化的一些数据 \n4. 聚合函数 <===> MapReduce\n`hive(dbself)> set hive.map.aggr=true`\n`hive(dbself)> seltct count(\\*) from employee;`\nset hive.map.aggr 为 True 时：\n优点：提高 HiveQL 聚合的执行性能，即将顶层的聚合操作放在 Map 阶段执行，减轻清洗阶段数据传输和 Reduce 阶段的执行时间，提升总体性能。\n缺点：该设置会消耗更多的内存\n顶层聚合操作(top-levelaggregation operation)，是指在 group by 语句之前的聚合操作。\n","slug":"hive-hql","published":1,"updated":"2019-03-04T13:23:01.263Z","comments":1,"photos":[],"link":"","_id":"cjwj070ed0021m8za4zmwowpo","content":"<blockquote><p>In my solitude of my heart i feel the sigh of this widowed evening veiled with mist and rain.<br>    这孤独的黄昏，幕着雾与雨，我在我的心的孤寂里，感受到它的叹息。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<p><a href>官方文档</a></p>\n<p>从业务角度来讲，HQL 应该实现的功能应当包括：</p>\n<ol>\n<li>基本查询：全表查询、指定字段查询、按条件查询</li>\n<li>统计查询：分组、按条件查询</li>\n<li>嵌套查询</li>\n<li>连接查询</li>\n<li>分区、索引、视图</li>\n</ol>\n<hr>\n<ol>\n<li>通过 HQL 语句可以看到一个表里能产生的业务</li>\n<li>通过看出来的业务反推，如果你设计表设计成什么样才是符合业务需求的</li>\n<li>掌握基本 HQL 语句的用法</li>\n</ol>\n<p><strong>注意：</strong>类型转换问题，是否符合语法规律。<br>在写程序时要格外注意 NULL 值：是没有值还是出错。<br>数值溢出问题：-65534&gt;65535 正确<br>             (-35534-65535)&gt;0 出现错误<br>计数器设计的很贴心，运行时会把优化的一些数据 </p>\n<ol start=\"4\">\n<li>聚合函数 &lt;===&gt; MapReduce<br><code>hive(dbself)&gt; set hive.map.aggr=true</code><br><code>hive(dbself)&gt; seltct count(\\*) from employee;</code><br>set hive.map.aggr 为 True 时：<br>优点：提高 HiveQL 聚合的执行性能，即将顶层的聚合操作放在 Map 阶段执行，减轻清洗阶段数据传输和 Reduce 阶段的执行时间，提升总体性能。<br>缺点：该设置会消耗更多的内存<br>顶层聚合操作(top-levelaggregation operation)，是指在 group by 语句之前的聚合操作。</li>\n</ol>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>In my solitude of my heart i feel the sigh of this widowed evening veiled with mist and rain.<br>    这孤独的黄昏，幕着雾与雨，我在我的心的孤寂里，感受到它的叹息。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<p><a href>官方文档</a></p>\n<p>从业务角度来讲，HQL 应该实现的功能应当包括：</p>\n<ol>\n<li>基本查询：全表查询、指定字段查询、按条件查询</li>\n<li>统计查询：分组、按条件查询</li>\n<li>嵌套查询</li>\n<li>连接查询</li>\n<li>分区、索引、视图</li>\n</ol>\n<hr>\n<ol>\n<li>通过 HQL 语句可以看到一个表里能产生的业务</li>\n<li>通过看出来的业务反推，如果你设计表设计成什么样才是符合业务需求的</li>\n<li>掌握基本 HQL 语句的用法</li>\n</ol>\n<p><strong>注意：</strong>类型转换问题，是否符合语法规律。<br>在写程序时要格外注意 NULL 值：是没有值还是出错。<br>数值溢出问题：-65534&gt;65535 正确<br>             (-35534-65535)&gt;0 出现错误<br>计数器设计的很贴心，运行时会把优化的一些数据 </p>\n<ol start=\"4\">\n<li>聚合函数 &lt;===&gt; MapReduce<br><code>hive(dbself)&gt; set hive.map.aggr=true</code><br><code>hive(dbself)&gt; seltct count(\\*) from employee;</code><br>set hive.map.aggr 为 True 时：<br>优点：提高 HiveQL 聚合的执行性能，即将顶层的聚合操作放在 Map 阶段执行，减轻清洗阶段数据传输和 Reduce 阶段的执行时间，提升总体性能。<br>缺点：该设置会消耗更多的内存<br>顶层聚合操作(top-levelaggregation operation)，是指在 group by 语句之前的聚合操作。</li>\n</ol>"},{"layout":"post","title":"Hive 文本格式","subtitle":"这里","date":"2018-02-06T00:00:00.000Z","description":"这是一篇未完成的文章……","_content":"\n\n\n### 文本格式\n\n给定数据格式：![]()\n\n建表：\n\n``` sql\nCREATE TABLE employees(\nename STRING,\nsalary FLOAT,\nsubordinates ARRAY<STRING>,\ndeductions MAP<STRING, FLOAT>,\naddress STRUCT<street:STRING, city:STRING, state:STRING, zip:INT>)\nROW FORMAT DELIMITED FIELDS TERMINATED BY '\\001'\nCOLLECTION ITEMS TERMINATED   BY '\\002'\nMAP KEYS TERMINATED BY '\\003'\nLINES TERMINATED BY '\\n' \nSTORED AS TEXTFILE\n;\n```\n\n导入数据：`LOAD DATA LOCAL INPATH '/home/user/test_data/employees.txt' INTO TABLE employees;`\n\n----------------------------------------------\n\n### HQL 日期\n\n日期对于大多数据库来说都是一个坎，\n1. 在 Hive 里建立一个叫 “Dual {DUMMY} value:X” 的表，能做到存进去什么值，取出来什么值\n\n```\nCREATE TABLE dual (dummy STRING);\nLOAD DATA LOCAL INPATH '/home/user/dual.txt' # dual.txt的内容:X\n```\n获得时间戳：`select unix_timestamp() from dual;`\n查询时间：`select from_unixtime(1517882632, 'yyyyMMdd') from dual;`\n\n### 表操作\n\n#### 表名的更改\n\n1. ALTER <br>\n`ALTER TABLE re_useri RENAME TO u_re_useri;` 前后对比元数据，DFS文件夹，show tables表名均发生改变。\n\n2. 元数据 <br>\n直接更改元数据TBLS，show tables表名发生改变，DFS文件夹没有改变。\n更改DBS表后，DFS文件夹没有改变，查询更新后的表，没有数据。\n更改DFS文件夹名后，查询更新后表名成功。\n\n3.导数据 复制表，改名，导数据\n\n#### 列名更改\n\n1. 元数据\n\n2. ALTER\n\n```sql\nALTER TABLE u_useri \nCHANGE COLUMN reid id INT\nCOMMENT 'rename in 20180206'; # 注释\n```\n\n#### 增加列\n\n``` sql\nALTER TABLE u_useri\nADD COLUMN(\naddcol3 STRING COMMENT 'add in 20180206'\naddcol4 INT);\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-02-06-hive-text-encoding.markdown","raw":"---\nlayout: post\ntitle: Hive 文本格式\nsubtitle: 这里\ndate: 2018-02-06 00:00:00 +0800\ndescription: 这是一篇未完成的文章……\ncategories:\n- 大数据\n- Hive\ntags: Hive\n---\n\n\n\n### 文本格式\n\n给定数据格式：![]()\n\n建表：\n\n``` sql\nCREATE TABLE employees(\nename STRING,\nsalary FLOAT,\nsubordinates ARRAY<STRING>,\ndeductions MAP<STRING, FLOAT>,\naddress STRUCT<street:STRING, city:STRING, state:STRING, zip:INT>)\nROW FORMAT DELIMITED FIELDS TERMINATED BY '\\001'\nCOLLECTION ITEMS TERMINATED   BY '\\002'\nMAP KEYS TERMINATED BY '\\003'\nLINES TERMINATED BY '\\n' \nSTORED AS TEXTFILE\n;\n```\n\n导入数据：`LOAD DATA LOCAL INPATH '/home/user/test_data/employees.txt' INTO TABLE employees;`\n\n----------------------------------------------\n\n### HQL 日期\n\n日期对于大多数据库来说都是一个坎，\n1. 在 Hive 里建立一个叫 “Dual {DUMMY} value:X” 的表，能做到存进去什么值，取出来什么值\n\n```\nCREATE TABLE dual (dummy STRING);\nLOAD DATA LOCAL INPATH '/home/user/dual.txt' # dual.txt的内容:X\n```\n获得时间戳：`select unix_timestamp() from dual;`\n查询时间：`select from_unixtime(1517882632, 'yyyyMMdd') from dual;`\n\n### 表操作\n\n#### 表名的更改\n\n1. ALTER <br>\n`ALTER TABLE re_useri RENAME TO u_re_useri;` 前后对比元数据，DFS文件夹，show tables表名均发生改变。\n\n2. 元数据 <br>\n直接更改元数据TBLS，show tables表名发生改变，DFS文件夹没有改变。\n更改DBS表后，DFS文件夹没有改变，查询更新后的表，没有数据。\n更改DFS文件夹名后，查询更新后表名成功。\n\n3.导数据 复制表，改名，导数据\n\n#### 列名更改\n\n1. 元数据\n\n2. ALTER\n\n```sql\nALTER TABLE u_useri \nCHANGE COLUMN reid id INT\nCOMMENT 'rename in 20180206'; # 注释\n```\n\n#### 增加列\n\n``` sql\nALTER TABLE u_useri\nADD COLUMN(\naddcol3 STRING COMMENT 'add in 20180206'\naddcol4 INT);\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"hive-text-encoding","published":1,"updated":"2019-03-04T12:11:09.196Z","comments":1,"photos":[],"link":"","_id":"cjwj070ef0025m8zadcfpgtjk","content":"<h3 id=\"文本格式\"><a href=\"#文本格式\" class=\"headerlink\" title=\"文本格式\"></a>文本格式</h3><p>给定数据格式：<img src alt></p>\n<p>建表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> employees(</span><br><span class=\"line\">ename <span class=\"keyword\">STRING</span>,</span><br><span class=\"line\">salary <span class=\"built_in\">FLOAT</span>,</span><br><span class=\"line\">subordinates <span class=\"built_in\">ARRAY</span>&lt;<span class=\"keyword\">STRING</span>&gt;,</span><br><span class=\"line\">deductions <span class=\"keyword\">MAP</span>&lt;<span class=\"keyword\">STRING</span>, <span class=\"built_in\">FLOAT</span>&gt;,</span><br><span class=\"line\">address <span class=\"keyword\">STRUCT</span>&lt;street:<span class=\"keyword\">STRING</span>, city:<span class=\"keyword\">STRING</span>, state:<span class=\"keyword\">STRING</span>, zip:<span class=\"built_in\">INT</span>&gt;)</span><br><span class=\"line\"><span class=\"keyword\">ROW</span> <span class=\"keyword\">FORMAT</span> <span class=\"keyword\">DELIMITED</span> <span class=\"keyword\">FIELDS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'\\001'</span></span><br><span class=\"line\">COLLECTION ITEMS <span class=\"keyword\">TERMINATED</span>   <span class=\"keyword\">BY</span> <span class=\"string\">'\\002'</span></span><br><span class=\"line\"><span class=\"keyword\">MAP</span> <span class=\"keyword\">KEYS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'\\003'</span></span><br><span class=\"line\"><span class=\"keyword\">LINES</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'\\n'</span> </span><br><span class=\"line\"><span class=\"keyword\">STORED</span> <span class=\"keyword\">AS</span> TEXTFILE</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n\n<p>导入数据：<code>LOAD DATA LOCAL INPATH &#39;/home/user/test_data/employees.txt&#39; INTO TABLE employees;</code></p>\n<hr>\n<h3 id=\"HQL-日期\"><a href=\"#HQL-日期\" class=\"headerlink\" title=\"HQL 日期\"></a>HQL 日期</h3><p>日期对于大多数据库来说都是一个坎，</p>\n<ol>\n<li>在 Hive 里建立一个叫 “Dual {DUMMY} value:X” 的表，能做到存进去什么值，取出来什么值</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE dual (dummy STRING);</span><br><span class=\"line\">LOAD DATA LOCAL INPATH &apos;/home/user/dual.txt&apos; # dual.txt的内容:X</span><br></pre></td></tr></table></figure>\n\n<p>获得时间戳：<code>select unix_timestamp() from dual;</code><br>查询时间：<code>select from_unixtime(1517882632, &#39;yyyyMMdd&#39;) from dual;</code></p>\n<h3 id=\"表操作\"><a href=\"#表操作\" class=\"headerlink\" title=\"表操作\"></a>表操作</h3><h4 id=\"表名的更改\"><a href=\"#表名的更改\" class=\"headerlink\" title=\"表名的更改\"></a>表名的更改</h4><ol>\n<li><p>ALTER <br><br><code>ALTER TABLE re_useri RENAME TO u_re_useri;</code> 前后对比元数据，DFS文件夹，show tables表名均发生改变。</p>\n</li>\n<li><p>元数据 <br><br>直接更改元数据TBLS，show tables表名发生改变，DFS文件夹没有改变。<br>更改DBS表后，DFS文件夹没有改变，查询更新后的表，没有数据。<br>更改DFS文件夹名后，查询更新后表名成功。</p>\n</li>\n</ol>\n<p>3.导数据 复制表，改名，导数据</p>\n<h4 id=\"列名更改\"><a href=\"#列名更改\" class=\"headerlink\" title=\"列名更改\"></a>列名更改</h4><ol>\n<li><p>元数据</p>\n</li>\n<li><p>ALTER</p>\n</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> u_useri </span><br><span class=\"line\"><span class=\"keyword\">CHANGE</span> <span class=\"keyword\">COLUMN</span> reid <span class=\"keyword\">id</span> <span class=\"built_in\">INT</span></span><br><span class=\"line\"><span class=\"keyword\">COMMENT</span> <span class=\"string\">'rename in 20180206'</span>; <span class=\"comment\"># 注释</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"增加列\"><a href=\"#增加列\" class=\"headerlink\" title=\"增加列\"></a>增加列</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> u_useri</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span>(</span><br><span class=\"line\">addcol3 <span class=\"keyword\">STRING</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'add in 20180206'</span></span><br><span class=\"line\">addcol4 <span class=\"built_in\">INT</span>);</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"","more":"<h3 id=\"文本格式\"><a href=\"#文本格式\" class=\"headerlink\" title=\"文本格式\"></a>文本格式</h3><p>给定数据格式：<img src alt></p>\n<p>建表：</p>\n<!--�43-->\n\n<p>导入数据：<code>LOAD DATA LOCAL INPATH &#39;/home/user/test_data/employees.txt&#39; INTO TABLE employees;</code></p>\n<hr>\n<h3 id=\"HQL-日期\"><a href=\"#HQL-日期\" class=\"headerlink\" title=\"HQL 日期\"></a>HQL 日期</h3><p>日期对于大多数据库来说都是一个坎，</p>\n<ol>\n<li>在 Hive 里建立一个叫 “Dual {DUMMY} value:X” 的表，能做到存进去什么值，取出来什么值</li>\n</ol>\n<!--�44-->\n\n<p>获得时间戳：<code>select unix_timestamp() from dual;</code><br>查询时间：<code>select from_unixtime(1517882632, &#39;yyyyMMdd&#39;) from dual;</code></p>\n<h3 id=\"表操作\"><a href=\"#表操作\" class=\"headerlink\" title=\"表操作\"></a>表操作</h3><h4 id=\"表名的更改\"><a href=\"#表名的更改\" class=\"headerlink\" title=\"表名的更改\"></a>表名的更改</h4><ol>\n<li><p>ALTER <br><br><code>ALTER TABLE re_useri RENAME TO u_re_useri;</code> 前后对比元数据，DFS文件夹，show tables表名均发生改变。</p>\n</li>\n<li><p>元数据 <br><br>直接更改元数据TBLS，show tables表名发生改变，DFS文件夹没有改变。<br>更改DBS表后，DFS文件夹没有改变，查询更新后的表，没有数据。<br>更改DFS文件夹名后，查询更新后表名成功。</p>\n</li>\n</ol>\n<p>3.导数据 复制表，改名，导数据</p>\n<h4 id=\"列名更改\"><a href=\"#列名更改\" class=\"headerlink\" title=\"列名更改\"></a>列名更改</h4><ol>\n<li><p>元数据</p>\n</li>\n<li><p>ALTER</p>\n</li>\n</ol>\n<!--�45-->\n\n<h4 id=\"增加列\"><a href=\"#增加列\" class=\"headerlink\" title=\"增加列\"></a>增加列</h4><!--�46-->\n\n"},{"layout":"post","title":"Hive 分桶","subtitle":"哈哈哈","date":"2018-02-06T00:00:00.000Z","_content":"\n哈希分区 （不能再用）\n分桶：为解决数据倾斜以及推行机制带来的负面效应 （P131，`Hive编程指南`）\n\n<!-- more -->\n\n## 排序\nORDER BY：运行时走 MapReduce,DISTINCT 走MapReduce\n对查询的结果进行全局排序，有一个数据通过一个 Reducer 进行处理。\n弊端：大数据集运行过程消耗太多时间\n\nDISTRIBUTE BY：保证具有相同 Key 记录分发到同一个 Reduce 上\n\nSORT BY：对数据进行局部排序 （P110）\n\nCLUSTER BY：如果 distribute by 和 sort by 中涉及到的字段完全相同，且都是升序的时候，CLUSTER BY 就相当于前两个语句。\n\n## 分桶\n\n分区其实是按指定的格式在表下面分出若干个（有限的）文件夹，把相应的文件分到指定的文件夹下，加快查询速度。\n分桶：默认采用 HashPartition 分区，能够满足把数据近似均匀地分配到不同的桶里，例如有\n\n``` sql\ncreate table users(\nuserId INT,\nusername STRING)\nCLUSTERED BY (userid) # 把userid当作key传给hash\nSORTED BY (userid ASC) # 归并排序\nINTO 2 BUCKETS\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\n```\n\n-------------------------------------------------------------\n\n## 视图和索引\n\n### 视图\n\n一组 HiveQL 语句，没有实际的数据\n\n#### 建立视图\n\n1. create view 视图名[(字段名1，字段名2，……)]\n   as\n   HiveQL\n   \n#### 查询视图\n\n数据：可以像查表一样查询视图\n结构：desc 视图名\n\n#### 删除视图\n\ndrop view 视图名\n\n### 索引\n\n#### 建立\n\n``` sql\nhive> create index index_stocks on table stocks(symbol)\nhive> AS 'org.apache.hadoop.hive.ql.indx.compact.CompactIndexHandler'\nhive> with deferred rebuild;\n```\n\n#### 查询\n\n`show formatted index on stocks;`\n\n#### 删除\n\n`drop index if exists index_stocks on stocks;`\n\n### 总结\n\n1. 透彻地掌握分区、分桶\n2. 透彻地掌握表连接（坑）\n3. 掌握排序、视图\n4. 了解优化\n5. 了解索引\n\n### 会启动 MapReduce 的命令\n\n+ 改索引\n+ ORDER BY\n+ DISTINCT","source":"_posts/2018-02-08-hive-bucket.markdown","raw":"---\nlayout: post\ntitle: Hive 分桶\nsubtitle: 哈哈哈\ndate: 2018-02-06 00:00:00 +0800\ncategories:\n- 大数据\n- Hive\ntags: [Hive, 大数据] \n---\n\n哈希分区 （不能再用）\n分桶：为解决数据倾斜以及推行机制带来的负面效应 （P131，`Hive编程指南`）\n\n<!-- more -->\n\n## 排序\nORDER BY：运行时走 MapReduce,DISTINCT 走MapReduce\n对查询的结果进行全局排序，有一个数据通过一个 Reducer 进行处理。\n弊端：大数据集运行过程消耗太多时间\n\nDISTRIBUTE BY：保证具有相同 Key 记录分发到同一个 Reduce 上\n\nSORT BY：对数据进行局部排序 （P110）\n\nCLUSTER BY：如果 distribute by 和 sort by 中涉及到的字段完全相同，且都是升序的时候，CLUSTER BY 就相当于前两个语句。\n\n## 分桶\n\n分区其实是按指定的格式在表下面分出若干个（有限的）文件夹，把相应的文件分到指定的文件夹下，加快查询速度。\n分桶：默认采用 HashPartition 分区，能够满足把数据近似均匀地分配到不同的桶里，例如有\n\n``` sql\ncreate table users(\nuserId INT,\nusername STRING)\nCLUSTERED BY (userid) # 把userid当作key传给hash\nSORTED BY (userid ASC) # 归并排序\nINTO 2 BUCKETS\nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\n```\n\n-------------------------------------------------------------\n\n## 视图和索引\n\n### 视图\n\n一组 HiveQL 语句，没有实际的数据\n\n#### 建立视图\n\n1. create view 视图名[(字段名1，字段名2，……)]\n   as\n   HiveQL\n   \n#### 查询视图\n\n数据：可以像查表一样查询视图\n结构：desc 视图名\n\n#### 删除视图\n\ndrop view 视图名\n\n### 索引\n\n#### 建立\n\n``` sql\nhive> create index index_stocks on table stocks(symbol)\nhive> AS 'org.apache.hadoop.hive.ql.indx.compact.CompactIndexHandler'\nhive> with deferred rebuild;\n```\n\n#### 查询\n\n`show formatted index on stocks;`\n\n#### 删除\n\n`drop index if exists index_stocks on stocks;`\n\n### 总结\n\n1. 透彻地掌握分区、分桶\n2. 透彻地掌握表连接（坑）\n3. 掌握排序、视图\n4. 了解优化\n5. 了解索引\n\n### 会启动 MapReduce 的命令\n\n+ 改索引\n+ ORDER BY\n+ DISTINCT","slug":"hive-bucket","published":1,"updated":"2019-03-04T13:19:40.352Z","comments":1,"photos":[],"link":"","_id":"cjwj070eh0029m8zaznzum7fl","content":"<p>哈希分区 （不能再用）<br>分桶：为解决数据倾斜以及推行机制带来的负面效应 （P131，<code>Hive编程指南</code>）</p>\n<a id=\"more\"></a>\n\n<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><p>ORDER BY：运行时走 MapReduce,DISTINCT 走MapReduce<br>对查询的结果进行全局排序，有一个数据通过一个 Reducer 进行处理。<br>弊端：大数据集运行过程消耗太多时间</p>\n<p>DISTRIBUTE BY：保证具有相同 Key 记录分发到同一个 Reduce 上</p>\n<p>SORT BY：对数据进行局部排序 （P110）</p>\n<p>CLUSTER BY：如果 distribute by 和 sort by 中涉及到的字段完全相同，且都是升序的时候，CLUSTER BY 就相当于前两个语句。</p>\n<h2 id=\"分桶\"><a href=\"#分桶\" class=\"headerlink\" title=\"分桶\"></a>分桶</h2><p>分区其实是按指定的格式在表下面分出若干个（有限的）文件夹，把相应的文件分到指定的文件夹下，加快查询速度。<br>分桶：默认采用 HashPartition 分区，能够满足把数据近似均匀地分配到不同的桶里，例如有</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"keyword\">users</span>(</span><br><span class=\"line\">userId <span class=\"built_in\">INT</span>,</span><br><span class=\"line\">username <span class=\"keyword\">STRING</span>)</span><br><span class=\"line\">CLUSTERED <span class=\"keyword\">BY</span> (userid) <span class=\"comment\"># 把userid当作key传给hash</span></span><br><span class=\"line\">SORTED <span class=\"keyword\">BY</span> (userid <span class=\"keyword\">ASC</span>) <span class=\"comment\"># 归并排序</span></span><br><span class=\"line\"><span class=\"keyword\">INTO</span> <span class=\"number\">2</span> BUCKETS</span><br><span class=\"line\"><span class=\"keyword\">ROW</span> <span class=\"keyword\">FORMAT</span> <span class=\"keyword\">DELIMITED</span> <span class=\"keyword\">FIELDS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">','</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"视图和索引\"><a href=\"#视图和索引\" class=\"headerlink\" title=\"视图和索引\"></a>视图和索引</h2><h3 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h3><p>一组 HiveQL 语句，没有实际的数据</p>\n<h4 id=\"建立视图\"><a href=\"#建立视图\" class=\"headerlink\" title=\"建立视图\"></a>建立视图</h4><ol>\n<li>create view 视图名[(字段名1，字段名2，……)]<br>as<br>HiveQL</li>\n</ol>\n<h4 id=\"查询视图\"><a href=\"#查询视图\" class=\"headerlink\" title=\"查询视图\"></a>查询视图</h4><p>数据：可以像查表一样查询视图<br>结构：desc 视图名</p>\n<h4 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h4><p>drop view 视图名</p>\n<h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><h4 id=\"建立\"><a href=\"#建立\" class=\"headerlink\" title=\"建立\"></a>建立</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hive&gt; create index index_stocks on table stocks(symbol)</span><br><span class=\"line\">hive&gt; AS 'org.apache.hadoop.hive.ql.indx.compact.CompactIndexHandler'</span><br><span class=\"line\">hive&gt; with deferred rebuild;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><p><code>show formatted index on stocks;</code></p>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><p><code>drop index if exists index_stocks on stocks;</code></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>透彻地掌握分区、分桶</li>\n<li>透彻地掌握表连接（坑）</li>\n<li>掌握排序、视图</li>\n<li>了解优化</li>\n<li>了解索引</li>\n</ol>\n<h3 id=\"会启动-MapReduce-的命令\"><a href=\"#会启动-MapReduce-的命令\" class=\"headerlink\" title=\"会启动 MapReduce 的命令\"></a>会启动 MapReduce 的命令</h3><ul>\n<li>改索引</li>\n<li>ORDER BY</li>\n<li>DISTINCT</li>\n</ul>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>哈希分区 （不能再用）<br>分桶：为解决数据倾斜以及推行机制带来的负面效应 （P131，<code>Hive编程指南</code>）</p>","more":"<h2 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h2><p>ORDER BY：运行时走 MapReduce,DISTINCT 走MapReduce<br>对查询的结果进行全局排序，有一个数据通过一个 Reducer 进行处理。<br>弊端：大数据集运行过程消耗太多时间</p>\n<p>DISTRIBUTE BY：保证具有相同 Key 记录分发到同一个 Reduce 上</p>\n<p>SORT BY：对数据进行局部排序 （P110）</p>\n<p>CLUSTER BY：如果 distribute by 和 sort by 中涉及到的字段完全相同，且都是升序的时候，CLUSTER BY 就相当于前两个语句。</p>\n<h2 id=\"分桶\"><a href=\"#分桶\" class=\"headerlink\" title=\"分桶\"></a>分桶</h2><p>分区其实是按指定的格式在表下面分出若干个（有限的）文件夹，把相应的文件分到指定的文件夹下，加快查询速度。<br>分桶：默认采用 HashPartition 分区，能够满足把数据近似均匀地分配到不同的桶里，例如有</p>\n<!--�47-->\n\n<hr>\n<h2 id=\"视图和索引\"><a href=\"#视图和索引\" class=\"headerlink\" title=\"视图和索引\"></a>视图和索引</h2><h3 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h3><p>一组 HiveQL 语句，没有实际的数据</p>\n<h4 id=\"建立视图\"><a href=\"#建立视图\" class=\"headerlink\" title=\"建立视图\"></a>建立视图</h4><ol>\n<li>create view 视图名[(字段名1，字段名2，……)]<br>as<br>HiveQL</li>\n</ol>\n<h4 id=\"查询视图\"><a href=\"#查询视图\" class=\"headerlink\" title=\"查询视图\"></a>查询视图</h4><p>数据：可以像查表一样查询视图<br>结构：desc 视图名</p>\n<h4 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h4><p>drop view 视图名</p>\n<h3 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h3><h4 id=\"建立\"><a href=\"#建立\" class=\"headerlink\" title=\"建立\"></a>建立</h4><!--�48-->\n\n<h4 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h4><p><code>show formatted index on stocks;</code></p>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><p><code>drop index if exists index_stocks on stocks;</code></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>透彻地掌握分区、分桶</li>\n<li>透彻地掌握表连接（坑）</li>\n<li>掌握排序、视图</li>\n<li>了解优化</li>\n<li>了解索引</li>\n</ol>\n<h3 id=\"会启动-MapReduce-的命令\"><a href=\"#会启动-MapReduce-的命令\" class=\"headerlink\" title=\"会启动 MapReduce 的命令\"></a>会启动 MapReduce 的命令</h3><ul>\n<li>改索引</li>\n<li>ORDER BY</li>\n<li>DISTINCT</li>\n</ul>"},{"layout":"post","title":"X-战警","description":"大多链接都挂掉了……","date":"2018-02-23T00:00:00.000Z","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\t\"You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,\" said the dewdrop to the lake. \n\t露水对露珠道；“你是荷叶下面的大露珠，我是在荷叶上面的较小的露珠。”\n{% endblockquote %}\n<!-- more -->\n\n全系列百度云链接: https://pan.baidu.com/s/1eTV75ia 密码: ntd5\n\nhttps://pan.baidu.com/s/1ds0aFs\n\n下方为单个视频链接，内容一样，如果怕麻烦的话可以直接拿走上方文件夹(づ￣ 3￣)づ\n\n**X战警上映顺序**\n\n《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → 《金刚狼》2009 → 《X战警：第一战》2011 → 《金刚狼2》2011 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017\n\n**X-战警推荐食用顺序**\n\n《X战警：第一战》2011 → 《金刚狼》2009 → 《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → \n《金刚狼2》2013 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017\n\n### X战警：第一战\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg)\n\n链接: https://pan.baidu.com/s/1pNl4luV 密码: um1i\n\n### 金刚狼\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg)\n\n链接: https://pan.baidu.com/s/1dGiQ4xV 密码: ixbb\n\n### X战警\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg)\n\n链接: https://pan.baidu.com/s/1pMRlxG3 密码: 3vy9\n\n### X战警2\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg)\n\n链接: https://pan.baidu.com/s/1htt9Iew 密码: knb6\n\n### X战警3：背水一战\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### 金刚狼2\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### X战警：逆转未来\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### X战警:天启\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg)\n\n链接: https://pan.baidu.com/s/1nw4oRfN 密码: jivk\n\n### 金刚狼3\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg)\n\n链接: https://pan.baidu.com/s/1ht1bpNe 密码: 35m2\n\n### 死侍\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg)\n\n链接: https://pan.baidu.com/s/1bqh8E0v 密码: g24v\n","source":"_posts/2018-02-23-x-man-to-bingxin.markdown","raw":"---\nlayout: post\ntitle: X-战警\ndescription: 大多链接都挂掉了……\ndate: 2018-02-23 00:00:00 +0800\ncategories:\n- [Life]\n- [电影]\ntags:\n- X 战警\n- marvel\n- 电影\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\t\"You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,\" said the dewdrop to the lake. \n\t露水对露珠道；“你是荷叶下面的大露珠，我是在荷叶上面的较小的露珠。”\n{% endblockquote %}\n<!-- more -->\n\n全系列百度云链接: https://pan.baidu.com/s/1eTV75ia 密码: ntd5\n\nhttps://pan.baidu.com/s/1ds0aFs\n\n下方为单个视频链接，内容一样，如果怕麻烦的话可以直接拿走上方文件夹(づ￣ 3￣)づ\n\n**X战警上映顺序**\n\n《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → 《金刚狼》2009 → 《X战警：第一战》2011 → 《金刚狼2》2011 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017\n\n**X-战警推荐食用顺序**\n\n《X战警：第一战》2011 → 《金刚狼》2009 → 《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → \n《金刚狼2》2013 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017\n\n### X战警：第一战\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg)\n\n链接: https://pan.baidu.com/s/1pNl4luV 密码: um1i\n\n### 金刚狼\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg)\n\n链接: https://pan.baidu.com/s/1dGiQ4xV 密码: ixbb\n\n### X战警\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg)\n\n链接: https://pan.baidu.com/s/1pMRlxG3 密码: 3vy9\n\n### X战警2\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg)\n\n链接: https://pan.baidu.com/s/1htt9Iew 密码: knb6\n\n### X战警3：背水一战\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### 金刚狼2\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### X战警：逆转未来\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg)\n\n链接: https://pan.baidu.com/s/1i7la0pn 密码: awec\n\n### X战警:天启\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg)\n\n链接: https://pan.baidu.com/s/1nw4oRfN 密码: jivk\n\n### 金刚狼3\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg)\n\n链接: https://pan.baidu.com/s/1ht1bpNe 密码: 35m2\n\n### 死侍\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg)\n\n链接: https://pan.baidu.com/s/1bqh8E0v 密码: g24v\n","slug":"x-man-to-bingxin","published":1,"updated":"2019-03-04T13:20:09.745Z","comments":1,"photos":[],"link":"","_id":"cjwj070ej002dm8zaba003rtp","content":"<blockquote><p>“You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,” said the dewdrop to the lake.<br>露水对露珠道；“你是荷叶下面的大露珠，我是在荷叶上面的较小的露珠。”</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n<a id=\"more\"></a>\n\n<p>全系列百度云链接: <a href=\"https://pan.baidu.com/s/1eTV75ia\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1eTV75ia</a> 密码: ntd5</p>\n<p><a href=\"https://pan.baidu.com/s/1ds0aFs\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1ds0aFs</a></p>\n<p>下方为单个视频链接，内容一样，如果怕麻烦的话可以直接拿走上方文件夹(づ￣ 3￣)づ</p>\n<p><strong>X战警上映顺序</strong></p>\n<p>《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → 《金刚狼》2009 → 《X战警：第一战》2011 → 《金刚狼2》2011 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017</p>\n<p><strong>X-战警推荐食用顺序</strong></p>\n<p>《X战警：第一战》2011 → 《金刚狼》2009 → 《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 →<br>《金刚狼2》2013 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017</p>\n<h3 id=\"X战警：第一战\"><a href=\"#X战警：第一战\" class=\"headerlink\" title=\"X战警：第一战\"></a>X战警：第一战</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1pNl4luV\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pNl4luV</a> 密码: um1i</p>\n<h3 id=\"金刚狼\"><a href=\"#金刚狼\" class=\"headerlink\" title=\"金刚狼\"></a>金刚狼</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1dGiQ4xV\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1dGiQ4xV</a> 密码: ixbb</p>\n<h3 id=\"X战警\"><a href=\"#X战警\" class=\"headerlink\" title=\"X战警\"></a>X战警</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1pMRlxG3\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pMRlxG3</a> 密码: 3vy9</p>\n<h3 id=\"X战警2\"><a href=\"#X战警2\" class=\"headerlink\" title=\"X战警2\"></a>X战警2</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1htt9Iew\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1htt9Iew</a> 密码: knb6</p>\n<h3 id=\"X战警3：背水一战\"><a href=\"#X战警3：背水一战\" class=\"headerlink\" title=\"X战警3：背水一战\"></a>X战警3：背水一战</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"金刚狼2\"><a href=\"#金刚狼2\" class=\"headerlink\" title=\"金刚狼2\"></a>金刚狼2</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"X战警：逆转未来\"><a href=\"#X战警：逆转未来\" class=\"headerlink\" title=\"X战警：逆转未来\"></a>X战警：逆转未来</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"X战警-天启\"><a href=\"#X战警-天启\" class=\"headerlink\" title=\"X战警:天启\"></a>X战警:天启</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1nw4oRfN\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1nw4oRfN</a> 密码: jivk</p>\n<h3 id=\"金刚狼3\"><a href=\"#金刚狼3\" class=\"headerlink\" title=\"金刚狼3\"></a>金刚狼3</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1ht1bpNe\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1ht1bpNe</a> 密码: 35m2</p>\n<h3 id=\"死侍\"><a href=\"#死侍\" class=\"headerlink\" title=\"死侍\"></a>死侍</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1bqh8E0v\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1bqh8E0v</a> 密码: g24v</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>“You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,” said the dewdrop to the lake.<br>露水对露珠道；“你是荷叶下面的大露珠，我是在荷叶上面的较小的露珠。”</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<p>全系列百度云链接: <a href=\"https://pan.baidu.com/s/1eTV75ia\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1eTV75ia</a> 密码: ntd5</p>\n<p><a href=\"https://pan.baidu.com/s/1ds0aFs\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1ds0aFs</a></p>\n<p>下方为单个视频链接，内容一样，如果怕麻烦的话可以直接拿走上方文件夹(づ￣ 3￣)づ</p>\n<p><strong>X战警上映顺序</strong></p>\n<p>《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 → 《金刚狼》2009 → 《X战警：第一战》2011 → 《金刚狼2》2011 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017</p>\n<p><strong>X-战警推荐食用顺序</strong></p>\n<p>《X战警：第一战》2011 → 《金刚狼》2009 → 《X战警》2000 → 《X战警2》2003 → 《X战警3：背水一战》2006 →<br>《金刚狼2》2013 → 《X战警：逆转未来》2014 →《X战警:天启》2016→《金刚狼3》2017</p>\n<h3 id=\"X战警：第一战\"><a href=\"#X战警：第一战\" class=\"headerlink\" title=\"X战警：第一战\"></a>X战警：第一战</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1pNl4luV\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pNl4luV</a> 密码: um1i</p>\n<h3 id=\"金刚狼\"><a href=\"#金刚狼\" class=\"headerlink\" title=\"金刚狼\"></a>金刚狼</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1dGiQ4xV\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1dGiQ4xV</a> 密码: ixbb</p>\n<h3 id=\"X战警\"><a href=\"#X战警\" class=\"headerlink\" title=\"X战警\"></a>X战警</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1pMRlxG3\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1pMRlxG3</a> 密码: 3vy9</p>\n<h3 id=\"X战警2\"><a href=\"#X战警2\" class=\"headerlink\" title=\"X战警2\"></a>X战警2</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1htt9Iew\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1htt9Iew</a> 密码: knb6</p>\n<h3 id=\"X战警3：背水一战\"><a href=\"#X战警3：背水一战\" class=\"headerlink\" title=\"X战警3：背水一战\"></a>X战警3：背水一战</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"金刚狼2\"><a href=\"#金刚狼2\" class=\"headerlink\" title=\"金刚狼2\"></a>金刚狼2</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"X战警：逆转未来\"><a href=\"#X战警：逆转未来\" class=\"headerlink\" title=\"X战警：逆转未来\"></a>X战警：逆转未来</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1i7la0pn\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1i7la0pn</a> 密码: awec</p>\n<h3 id=\"X战警-天启\"><a href=\"#X战警-天启\" class=\"headerlink\" title=\"X战警:天启\"></a>X战警:天启</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1nw4oRfN\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1nw4oRfN</a> 密码: jivk</p>\n<h3 id=\"金刚狼3\"><a href=\"#金刚狼3\" class=\"headerlink\" title=\"金刚狼3\"></a>金刚狼3</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1ht1bpNe\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1ht1bpNe</a> 密码: 35m2</p>\n<h3 id=\"死侍\"><a href=\"#死侍\" class=\"headerlink\" title=\"死侍\"></a>死侍</h3><p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg\" alt></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1bqh8E0v\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1bqh8E0v</a> 密码: g24v</p>"},{"layout":"post","title":"Python pyinstaller的使用","subtitle":"哈哈哈","date":"2018-03-16T00:00:00.000Z","description":"把 python 脚本编译成 exe 文件，让没有安装 python 的同学也能运行你的脚本","_content":"\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tI think of others ages that floated upon the stream of life and love and death and are forgotten, and I feel the freedom of passing away.\n\t我想起了浮泛在生与爱与死的川流上的许多别的时代，以及这些时代之被遗忘，我便感觉到离开尘世的自由了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 概述\n\n安装: `pip install pyinstaller` <br>\n用法: `pyinstaller -options script.py`，等 pyinstaller 编译完成之后，目录里面就多出两个文件夹: build 和 dist，其中 dist 里面就是打包的二进制文件，build 里是编译过程生成的中间件（作用不明）\n\n选项 | 作用\n-w，--windowed，--noconsole | 窗体exe文件(Windows Only)\n-c，--nowindowed，--console | 控制台exe文件(Windows Only)\n-F，--onefile | 把脚本打包成一个独立文件，打包一时爽，打开花五秒\n-o DIR，--out=DIR | 设置spec文件输出的目录，默认在PyInstaller同目录\n--version-file=file_version_info.txt，-v file | 给程序添加版权信息，需要指定一个版本信息文件\n--icon=ico.ico | 添加图标，必须是 ico 文件\n--upx-dir | 压缩可执行程序\n\n### 版权信息\n\n在我的GitHub里有现成的版权信息文件: “file_version_info.txt”，修改后即可使用。\n<a href=\"https://github.com/yuwancumian666/Python-Demo/tree/master/Fuck%20RedSpider\" target=\"_blank\">传送门</a><br>\n利用 pyinstaller 内置的 grab_verson.py 或 pyi-grab_version.exe工具也可以自己获取其他 exe 文件的版权信息，修改后使用。\n\n+ grab_version.py: 目录:“Python27\\Lib\\site-packages\\PyInstaller\\utils\\cliutils”，用法: ```python grab_version.py exe-file``` \n+ pyi-grab_version.exe: 目录: “Python27\\Scripts\\pyi-grab_version.exe”，用法: ```pyi-grab_version exe-file version-file``` \n+ 举个栗子说明: exe-file（C:\\Users\\Sarmon\\AppData\\Local\\GitHubDesktop\\GitHubDesktop.exe），version-file（version.txt）\n+ 版权信息文件中，#号起注释作用，如果生成的 version.txt 没有正确换行，在修改的时候需要注意正确区分注释与版权信息","source":"_posts/2018-03-16-how-to-use-pyinstaller.markdown","raw":"---\nlayout: post\ntitle: Python pyinstaller的使用\nsubtitle: 哈哈哈\ndate: 2018-03-16 00:00:00 +0800\ndescription: 把 python 脚本编译成 exe 文件，让没有安装 python 的同学也能运行你的脚本\ncategories:\n- Python\ntags: \n- Python\n- pyinstaller\n---\n\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tI think of others ages that floated upon the stream of life and love and death and are forgotten, and I feel the freedom of passing away.\n\t我想起了浮泛在生与爱与死的川流上的许多别的时代，以及这些时代之被遗忘，我便感觉到离开尘世的自由了。\n{% endblockquote %}\n\n<!-- more -->\n\n### 概述\n\n安装: `pip install pyinstaller` <br>\n用法: `pyinstaller -options script.py`，等 pyinstaller 编译完成之后，目录里面就多出两个文件夹: build 和 dist，其中 dist 里面就是打包的二进制文件，build 里是编译过程生成的中间件（作用不明）\n\n选项 | 作用\n-w，--windowed，--noconsole | 窗体exe文件(Windows Only)\n-c，--nowindowed，--console | 控制台exe文件(Windows Only)\n-F，--onefile | 把脚本打包成一个独立文件，打包一时爽，打开花五秒\n-o DIR，--out=DIR | 设置spec文件输出的目录，默认在PyInstaller同目录\n--version-file=file_version_info.txt，-v file | 给程序添加版权信息，需要指定一个版本信息文件\n--icon=ico.ico | 添加图标，必须是 ico 文件\n--upx-dir | 压缩可执行程序\n\n### 版权信息\n\n在我的GitHub里有现成的版权信息文件: “file_version_info.txt”，修改后即可使用。\n<a href=\"https://github.com/yuwancumian666/Python-Demo/tree/master/Fuck%20RedSpider\" target=\"_blank\">传送门</a><br>\n利用 pyinstaller 内置的 grab_verson.py 或 pyi-grab_version.exe工具也可以自己获取其他 exe 文件的版权信息，修改后使用。\n\n+ grab_version.py: 目录:“Python27\\Lib\\site-packages\\PyInstaller\\utils\\cliutils”，用法: ```python grab_version.py exe-file``` \n+ pyi-grab_version.exe: 目录: “Python27\\Scripts\\pyi-grab_version.exe”，用法: ```pyi-grab_version exe-file version-file``` \n+ 举个栗子说明: exe-file（C:\\Users\\Sarmon\\AppData\\Local\\GitHubDesktop\\GitHubDesktop.exe），version-file（version.txt）\n+ 版权信息文件中，#号起注释作用，如果生成的 version.txt 没有正确换行，在修改的时候需要注意正确区分注释与版权信息","slug":"how-to-use-pyinstaller","published":1,"updated":"2019-03-04T14:53:06.977Z","comments":1,"photos":[],"link":"","_id":"cjwj070ek002gm8zafso0zg29","content":"<blockquote><p>I think of others ages that floated upon the stream of life and love and death and are forgotten, and I feel the freedom of passing away.<br>我想起了浮泛在生与爱与死的川流上的许多别的时代，以及这些时代之被遗忘，我便感觉到离开尘世的自由了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>安装: <code>pip install pyinstaller</code> <br><br>用法: <code>pyinstaller -options script.py</code>，等 pyinstaller 编译完成之后，目录里面就多出两个文件夹: build 和 dist，其中 dist 里面就是打包的二进制文件，build 里是编译过程生成的中间件（作用不明）</p>\n<p>选项 | 作用<br>-w，–windowed，–noconsole | 窗体exe文件(Windows Only)<br>-c，–nowindowed，–console | 控制台exe文件(Windows Only)<br>-F，–onefile | 把脚本打包成一个独立文件，打包一时爽，打开花五秒<br>-o DIR，–out=DIR | 设置spec文件输出的目录，默认在PyInstaller同目录<br>–version-file=file_version_info.txt，-v file | 给程序添加版权信息，需要指定一个版本信息文件<br>–icon=ico.ico | 添加图标，必须是 ico 文件<br>–upx-dir | 压缩可执行程序</p>\n<h3 id=\"版权信息\"><a href=\"#版权信息\" class=\"headerlink\" title=\"版权信息\"></a>版权信息</h3><p>在我的GitHub里有现成的版权信息文件: “file_version_info.txt”，修改后即可使用。<br><a href=\"https://github.com/yuwancumian666/Python-Demo/tree/master/Fuck%20RedSpider\" target=\"_blank\">传送门</a><br><br>利用 pyinstaller 内置的 grab_verson.py 或 pyi-grab_version.exe工具也可以自己获取其他 exe 文件的版权信息，修改后使用。</p>\n<ul>\n<li>grab_version.py: 目录:“Python27\\Lib\\site-packages\\PyInstaller\\utils\\cliutils”，用法: <code>python grab_version.py exe-file</code> </li>\n<li>pyi-grab_version.exe: 目录: “Python27\\Scripts\\pyi-grab_version.exe”，用法: <code>pyi-grab_version exe-file version-file</code> </li>\n<li>举个栗子说明: exe-file（C:\\Users\\Sarmon\\AppData\\Local\\GitHubDesktop\\GitHubDesktop.exe），version-file（version.txt）</li>\n<li>版权信息文件中，#号起注释作用，如果生成的 version.txt 没有正确换行，在修改的时候需要注意正确区分注释与版权信息</li>\n</ul>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>I think of others ages that floated upon the stream of life and love and death and are forgotten, and I feel the freedom of passing away.<br>我想起了浮泛在生与爱与死的川流上的许多别的时代，以及这些时代之被遗忘，我便感觉到离开尘世的自由了。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>安装: <code>pip install pyinstaller</code> <br><br>用法: <code>pyinstaller -options script.py</code>，等 pyinstaller 编译完成之后，目录里面就多出两个文件夹: build 和 dist，其中 dist 里面就是打包的二进制文件，build 里是编译过程生成的中间件（作用不明）</p>\n<p>选项 | 作用<br>-w，–windowed，–noconsole | 窗体exe文件(Windows Only)<br>-c，–nowindowed，–console | 控制台exe文件(Windows Only)<br>-F，–onefile | 把脚本打包成一个独立文件，打包一时爽，打开花五秒<br>-o DIR，–out=DIR | 设置spec文件输出的目录，默认在PyInstaller同目录<br>–version-file=file_version_info.txt，-v file | 给程序添加版权信息，需要指定一个版本信息文件<br>–icon=ico.ico | 添加图标，必须是 ico 文件<br>–upx-dir | 压缩可执行程序</p>\n<h3 id=\"版权信息\"><a href=\"#版权信息\" class=\"headerlink\" title=\"版权信息\"></a>版权信息</h3><p>在我的GitHub里有现成的版权信息文件: “file_version_info.txt”，修改后即可使用。<br><a href=\"https://github.com/yuwancumian666/Python-Demo/tree/master/Fuck%20RedSpider\" target=\"_blank\">传送门</a><br><br>利用 pyinstaller 内置的 grab_verson.py 或 pyi-grab_version.exe工具也可以自己获取其他 exe 文件的版权信息，修改后使用。</p>\n<ul>\n<li>grab_version.py: 目录:“Python27\\Lib\\site-packages\\PyInstaller\\utils\\cliutils”，用法: <code>python grab_version.py exe-file</code> </li>\n<li>pyi-grab_version.exe: 目录: “Python27\\Scripts\\pyi-grab_version.exe”，用法: <code>pyi-grab_version exe-file version-file</code> </li>\n<li>举个栗子说明: exe-file（C:\\Users\\Sarmon\\AppData\\Local\\GitHubDesktop\\GitHubDesktop.exe），version-file（version.txt）</li>\n<li>版权信息文件中，#号起注释作用，如果生成的 version.txt 没有正确换行，在修改的时候需要注意正确区分注释与版权信息</li>\n</ul>"},{"layout":"post","title":"计算机网络","subtitle":"爱哭的嘎达傻空了大概看到过","date":"2018-03-18T00:00:00.000Z","description":"这里记录的是牛客网刷题遇到的不会的东西","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe sadness of my soul is her bride's veil. It waits to be lifted in the night. \n\t我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。\n{% endblockquote %}\n\n<!-- more -->\n\n### TCP/IP\n\nTCP连接建立的三次握手过程：TCP SYN、TCP SYNACK、TCP ACK。\n> 1. 第一次握手：客户端发送 syn 包（syn=j）到服务器，并进入 SYN_SEND 状态，等待服务器确认（SYN：Synchronize Sequence Numbers，同步序列编号）；\n> 2. 第二次握手：服务器收到 syn 包，必须确认客户端的 SYN（ack=j+1），同时自己也发送一个 SYN 包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态；\n> 3. 第三次握手：客户端收到服务器的 SYN+ACK 包，向服务器发送确认包 ACK（ack=k+1），此包发送完毕，服务端和客户端进入 ESTABLISHED 状态，完成三次握手\n\nIP 协议利用生存时间，控制数据传输的时延 <br>\nTCP 负责在数据传送之前将它们分割成 IP 包，然后在他们到达的时候将他们重组\n\n### 网络\n\n逻辑上讲，一个计算机网络是由**通信子网**和**资源子网**构成的。  <br>\n域名的组成：主机名.结构名.网络名 （例如：www.tsinghua.deu.cn中，www是主机名） <br>\n我国要求局用程控交换机的系统中断时间平均每年不超过3分钟 <br>\n\n\n### 套接字\n\n使用套接字时，网络上唯一的 IP 地址和端口号结合在一起，才能构成唯一的标识符\n\n\n### OSI体系\n\n传输层的主要功能是：建立端到端连接\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2018-04-12-network.markdown","raw":"---\nlayout: post\ntitle: 计算机网络\nsubtitle: 爱哭的嘎达傻空了大概看到过\ndate: 2018-03-18 00:00:00 +0800\ndescription: 这里记录的是牛客网刷题遇到的不会的东西\ncategories:\n- 计算机网络\ntags: [计算机网络] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe sadness of my soul is her bride's veil. It waits to be lifted in the night. \n\t我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。\n{% endblockquote %}\n\n<!-- more -->\n\n### TCP/IP\n\nTCP连接建立的三次握手过程：TCP SYN、TCP SYNACK、TCP ACK。\n> 1. 第一次握手：客户端发送 syn 包（syn=j）到服务器，并进入 SYN_SEND 状态，等待服务器确认（SYN：Synchronize Sequence Numbers，同步序列编号）；\n> 2. 第二次握手：服务器收到 syn 包，必须确认客户端的 SYN（ack=j+1），同时自己也发送一个 SYN 包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态；\n> 3. 第三次握手：客户端收到服务器的 SYN+ACK 包，向服务器发送确认包 ACK（ack=k+1），此包发送完毕，服务端和客户端进入 ESTABLISHED 状态，完成三次握手\n\nIP 协议利用生存时间，控制数据传输的时延 <br>\nTCP 负责在数据传送之前将它们分割成 IP 包，然后在他们到达的时候将他们重组\n\n### 网络\n\n逻辑上讲，一个计算机网络是由**通信子网**和**资源子网**构成的。  <br>\n域名的组成：主机名.结构名.网络名 （例如：www.tsinghua.deu.cn中，www是主机名） <br>\n我国要求局用程控交换机的系统中断时间平均每年不超过3分钟 <br>\n\n\n### 套接字\n\n使用套接字时，网络上唯一的 IP 地址和端口号结合在一起，才能构成唯一的标识符\n\n\n### OSI体系\n\n传输层的主要功能是：建立端到端连接\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"network","published":1,"updated":"2019-03-04T13:21:00.087Z","comments":1,"photos":[],"link":"","_id":"cjwj070em002jm8zav3zopwkw","content":"<blockquote><p>The sadness of my soul is her bride’s veil. It waits to be lifted in the night.<br>我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"TCP-IP\"><a href=\"#TCP-IP\" class=\"headerlink\" title=\"TCP/IP\"></a>TCP/IP</h3><p>TCP连接建立的三次握手过程：TCP SYN、TCP SYNACK、TCP ACK。</p>\n<blockquote>\n<ol>\n<li>第一次握手：客户端发送 syn 包（syn=j）到服务器，并进入 SYN_SEND 状态，等待服务器确认（SYN：Synchronize Sequence Numbers，同步序列编号）；</li>\n<li>第二次握手：服务器收到 syn 包，必须确认客户端的 SYN（ack=j+1），同时自己也发送一个 SYN 包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态；</li>\n<li>第三次握手：客户端收到服务器的 SYN+ACK 包，向服务器发送确认包 ACK（ack=k+1），此包发送完毕，服务端和客户端进入 ESTABLISHED 状态，完成三次握手</li>\n</ol>\n</blockquote>\n<p>IP 协议利用生存时间，控制数据传输的时延 <br><br>TCP 负责在数据传送之前将它们分割成 IP 包，然后在他们到达的时候将他们重组</p>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><p>逻辑上讲，一个计算机网络是由<strong>通信子网</strong>和<strong>资源子网</strong>构成的。  <br><br>域名的组成：主机名.结构名.网络名 （例如：<a href=\"http://www.tsinghua.deu.cn中，www是主机名）\" target=\"_blank\" rel=\"noopener\">www.tsinghua.deu.cn中，www是主机名）</a> <br><br>我国要求局用程控交换机的系统中断时间平均每年不超过3分钟 <br></p>\n<h3 id=\"套接字\"><a href=\"#套接字\" class=\"headerlink\" title=\"套接字\"></a>套接字</h3><p>使用套接字时，网络上唯一的 IP 地址和端口号结合在一起，才能构成唯一的标识符</p>\n<h3 id=\"OSI体系\"><a href=\"#OSI体系\" class=\"headerlink\" title=\"OSI体系\"></a>OSI体系</h3><p>传输层的主要功能是：建立端到端连接</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The sadness of my soul is her bride’s veil. It waits to be lifted in the night.<br>我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"TCP-IP\"><a href=\"#TCP-IP\" class=\"headerlink\" title=\"TCP/IP\"></a>TCP/IP</h3><p>TCP连接建立的三次握手过程：TCP SYN、TCP SYNACK、TCP ACK。</p>\n<blockquote>\n<ol>\n<li>第一次握手：客户端发送 syn 包（syn=j）到服务器，并进入 SYN_SEND 状态，等待服务器确认（SYN：Synchronize Sequence Numbers，同步序列编号）；</li>\n<li>第二次握手：服务器收到 syn 包，必须确认客户端的 SYN（ack=j+1），同时自己也发送一个 SYN 包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态；</li>\n<li>第三次握手：客户端收到服务器的 SYN+ACK 包，向服务器发送确认包 ACK（ack=k+1），此包发送完毕，服务端和客户端进入 ESTABLISHED 状态，完成三次握手</li>\n</ol>\n</blockquote>\n<p>IP 协议利用生存时间，控制数据传输的时延 <br><br>TCP 负责在数据传送之前将它们分割成 IP 包，然后在他们到达的时候将他们重组</p>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><p>逻辑上讲，一个计算机网络是由<strong>通信子网</strong>和<strong>资源子网</strong>构成的。  <br><br>域名的组成：主机名.结构名.网络名 （例如：<a href=\"http://www.tsinghua.deu.cn中，www是主机名）\" target=\"_blank\" rel=\"noopener\">www.tsinghua.deu.cn中，www是主机名）</a> <br><br>我国要求局用程控交换机的系统中断时间平均每年不超过3分钟 <br></p>\n<h3 id=\"套接字\"><a href=\"#套接字\" class=\"headerlink\" title=\"套接字\"></a>套接字</h3><p>使用套接字时，网络上唯一的 IP 地址和端口号结合在一起，才能构成唯一的标识符</p>\n<h3 id=\"OSI体系\"><a href=\"#OSI体系\" class=\"headerlink\" title=\"OSI体系\"></a>OSI体系</h3><p>传输层的主要功能是：建立端到端连接</p>"},{"layout":"post","title":"Python 第三方库（持续更新）","subtitle":"哈哈哈","date":"2018-03-08T00:00:00.000Z","description":"python 的第三方库以及介绍","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\nHe who wants to do good knocks at the gate; he who loves finds the gate open.\n\t那些想做好人的，在门外敲着门，那爱人的，看见们敞着。——《飞鸟集》\n{% endblockquote %}\n\n<!-- more -->\n\t\n### 爬虫类 (8)\n\n|        库名        |                                                              作用                                                               |\n| :----------------: | :-----------------------------------------------------------------------------------------------------------------------------: |\n|   urllib/urllib2   |                                              Python 标准库，提供了大部分 HTTP 功能                                              |\n|      requests      |                                                    功能强大的 HTTP 客户端库                                                     |\n| bs4：beautifulsoup |                                           HTML 或 XML 文档处理工具，现已整合到 bs4 中                                           |\n|        lxml        |                  HTML 和 XML 文档处理工具，速度快，需了解 xpath 语法；可以作为 BeautifulSoup 处理文档时的引擎                   |\n|      html5lib      | HTML 和 XML 文档处理工具，几个解析工具的<a href=\"http://blog.csdn.net/fly_yr/article/details/51553587\" target=\"_blank\">比较</a> |\n|      selenium      |                        自动化测试工具，适用于动态爬虫，需配合浏览器（例如 phantomjs，无界面浏览器）使用                         |\n|       scrapy       |                                                         著名的爬虫框架                                                          |\n\n### 科学计算及图像处理 (6)\n\n|    库名     |                        作用                        |\n| :---------: | :------------------------------------------------: |\n| matplotlib  |           Python 的 2D绘图库，也支持 3D            |\n|    numpy    |       科学计算工具：矩阵、函数、精密运算等；       |\n|   pandas    | 基于 numpy，提供了大量的解决数据分析任务所需的工具 |\n|    scipy    |         高级的科学计算库，和Numpy联系密切          |\n| pillow：PIL |               具有强大的图像处理能力               |\n| opencv：CV2 |    一个C++库，用于实时处理计算机视觉方面的问题     |\n\n### 深度学习 (4)\n\n|      库名      |                            作用                            |\n| :------------: | :--------------------------------------------------------: |\n|   tensorflow   |             膜拜谷歌大佬；有GPU版，需安装 CUDA             |\n|  scikit-learn  | 基于NumPy, SciPy, Matplotlib的开源机器学习工具包（没用过） |\n| caffee/caffee2 |                  常用于图像分类（没用过）                  |\n\n### 网络编程 (4)\n\n|      库名      |                       作用                       |\n| :------------: | :----------------------------------------------: |\n|     socket     | 套接字，可以访问底层操作系统Socket接口的全部方法 |\n|  socketServer  |   高级别网络服务模块，可以简化网络服务器的开发   |\n| smtplib、email |           封装了 SMTP 协议的邮件客户端           |\n\n### WEB 框架 (3，不了解)\n\n|      库名      |              作用               |\n| :------------: | :-----------------------------: |\n|      web       |         很简单的web框架         |\n|     Flask      |           轻量级框架            |\n|     Djando     |      全能型框架（没用过）       |\n| 最简单的服务器 | python -m SimpleHTTPServer 8080 |\n\n### 其他(28)\n\n|      库名       |                       作用                        |\n| :-------------: | :-----------------------------------------------: |\n|       pip       |          Python 标准库，第三方库安装工具          |\n|       os        |         Python 标准库，文件、目录操作工具         |\n|       sys       |          Python 标准库，python 系统工具           |\n|       re        |           Python 标准库，正则表达式工具           |\n|      wget       |    linux-wget 命令的移植版，功能强大的下载工具    |\n|     you-get     |          用于从 web 上下载媒体，支持油管          |\n|  itchat、wxpy   |    微信机器人，提供了一系列操作微信聊天的接口     |\n|      jieba      |                     中文分词                      |\n|    markdown     | 将 markdown 格式的文档转化为结构化的xhtml 或 html |\n|    PyQRCode     |                   二维码相关库                    |\n|    wordcloud    |                     生成词云                      |\n|    traceback    |                  代码debug 工具                   |\n| time、datetime  |              Python 标准库，时间处理              |\n| python-dateutil |                  时间处理工具包                   |\n|     pywin32     |         提供了 python 操作 Windows 的接口         |\n|     pyhook      |     基于pywin32；钩子，用来监听鼠标和键盘事件     |\n|     PyYAML      |             生成、解析 YAML 配置文件              |\n|    pdfminer     |                 pdf工具（没用过）                 |\n|   pyinstaller   |        可以将 python 打包成 exe 可执行文件        |\n|     zipfile     |                zip 压缩包处理工具                 |\n|    optparse     |            主要用来为脚本传递命令参数             |\n|     pygame      |                   游戏制作工具                    |\n|   collections   |       Python 标准库，提供了许多有用的集合类       |\n|     Tkinter     |              GUI （图形界面）开发库               |\n|      json       |               编码和解码 JSON 对象                |\n|     base64      |                    base64编码                     |\n\n","source":"_posts/2018-03-08-python-packages.markdown","raw":"---\nlayout: post\ntitle: Python 第三方库（持续更新）\nsubtitle: 哈哈哈\ndate: 2018-03-08 00:00:00 +0800\ndescription: python 的第三方库以及介绍\ncategories:\n- Python\ntags: [Python] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\nHe who wants to do good knocks at the gate; he who loves finds the gate open.\n\t那些想做好人的，在门外敲着门，那爱人的，看见们敞着。——《飞鸟集》\n{% endblockquote %}\n\n<!-- more -->\n\t\n### 爬虫类 (8)\n\n|        库名        |                                                              作用                                                               |\n| :----------------: | :-----------------------------------------------------------------------------------------------------------------------------: |\n|   urllib/urllib2   |                                              Python 标准库，提供了大部分 HTTP 功能                                              |\n|      requests      |                                                    功能强大的 HTTP 客户端库                                                     |\n| bs4：beautifulsoup |                                           HTML 或 XML 文档处理工具，现已整合到 bs4 中                                           |\n|        lxml        |                  HTML 和 XML 文档处理工具，速度快，需了解 xpath 语法；可以作为 BeautifulSoup 处理文档时的引擎                   |\n|      html5lib      | HTML 和 XML 文档处理工具，几个解析工具的<a href=\"http://blog.csdn.net/fly_yr/article/details/51553587\" target=\"_blank\">比较</a> |\n|      selenium      |                        自动化测试工具，适用于动态爬虫，需配合浏览器（例如 phantomjs，无界面浏览器）使用                         |\n|       scrapy       |                                                         著名的爬虫框架                                                          |\n\n### 科学计算及图像处理 (6)\n\n|    库名     |                        作用                        |\n| :---------: | :------------------------------------------------: |\n| matplotlib  |           Python 的 2D绘图库，也支持 3D            |\n|    numpy    |       科学计算工具：矩阵、函数、精密运算等；       |\n|   pandas    | 基于 numpy，提供了大量的解决数据分析任务所需的工具 |\n|    scipy    |         高级的科学计算库，和Numpy联系密切          |\n| pillow：PIL |               具有强大的图像处理能力               |\n| opencv：CV2 |    一个C++库，用于实时处理计算机视觉方面的问题     |\n\n### 深度学习 (4)\n\n|      库名      |                            作用                            |\n| :------------: | :--------------------------------------------------------: |\n|   tensorflow   |             膜拜谷歌大佬；有GPU版，需安装 CUDA             |\n|  scikit-learn  | 基于NumPy, SciPy, Matplotlib的开源机器学习工具包（没用过） |\n| caffee/caffee2 |                  常用于图像分类（没用过）                  |\n\n### 网络编程 (4)\n\n|      库名      |                       作用                       |\n| :------------: | :----------------------------------------------: |\n|     socket     | 套接字，可以访问底层操作系统Socket接口的全部方法 |\n|  socketServer  |   高级别网络服务模块，可以简化网络服务器的开发   |\n| smtplib、email |           封装了 SMTP 协议的邮件客户端           |\n\n### WEB 框架 (3，不了解)\n\n|      库名      |              作用               |\n| :------------: | :-----------------------------: |\n|      web       |         很简单的web框架         |\n|     Flask      |           轻量级框架            |\n|     Djando     |      全能型框架（没用过）       |\n| 最简单的服务器 | python -m SimpleHTTPServer 8080 |\n\n### 其他(28)\n\n|      库名       |                       作用                        |\n| :-------------: | :-----------------------------------------------: |\n|       pip       |          Python 标准库，第三方库安装工具          |\n|       os        |         Python 标准库，文件、目录操作工具         |\n|       sys       |          Python 标准库，python 系统工具           |\n|       re        |           Python 标准库，正则表达式工具           |\n|      wget       |    linux-wget 命令的移植版，功能强大的下载工具    |\n|     you-get     |          用于从 web 上下载媒体，支持油管          |\n|  itchat、wxpy   |    微信机器人，提供了一系列操作微信聊天的接口     |\n|      jieba      |                     中文分词                      |\n|    markdown     | 将 markdown 格式的文档转化为结构化的xhtml 或 html |\n|    PyQRCode     |                   二维码相关库                    |\n|    wordcloud    |                     生成词云                      |\n|    traceback    |                  代码debug 工具                   |\n| time、datetime  |              Python 标准库，时间处理              |\n| python-dateutil |                  时间处理工具包                   |\n|     pywin32     |         提供了 python 操作 Windows 的接口         |\n|     pyhook      |     基于pywin32；钩子，用来监听鼠标和键盘事件     |\n|     PyYAML      |             生成、解析 YAML 配置文件              |\n|    pdfminer     |                 pdf工具（没用过）                 |\n|   pyinstaller   |        可以将 python 打包成 exe 可执行文件        |\n|     zipfile     |                zip 压缩包处理工具                 |\n|    optparse     |            主要用来为脚本传递命令参数             |\n|     pygame      |                   游戏制作工具                    |\n|   collections   |       Python 标准库，提供了许多有用的集合类       |\n|     Tkinter     |              GUI （图形界面）开发库               |\n|      json       |               编码和解码 JSON 对象                |\n|     base64      |                    base64编码                     |\n\n","slug":"python-packages","published":1,"updated":"2019-03-04T14:57:29.417Z","comments":1,"photos":[],"link":"","_id":"cjwj070eo002mm8zaswoc7gv0","content":"<blockquote><p>He who wants to do good knocks at the gate; he who loves finds the gate open.<br>    那些想做好人的，在门外敲着门，那爱人的，看见们敞着。——《飞鸟集》</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"爬虫类-8\"><a href=\"#爬虫类-8\" class=\"headerlink\" title=\"爬虫类 (8)\"></a>爬虫类 (8)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">urllib/urllib2</td>\n<td align=\"center\">Python 标准库，提供了大部分 HTTP 功能</td>\n</tr>\n<tr>\n<td align=\"center\">requests</td>\n<td align=\"center\">功能强大的 HTTP 客户端库</td>\n</tr>\n<tr>\n<td align=\"center\">bs4：beautifulsoup</td>\n<td align=\"center\">HTML 或 XML 文档处理工具，现已整合到 bs4 中</td>\n</tr>\n<tr>\n<td align=\"center\">lxml</td>\n<td align=\"center\">HTML 和 XML 文档处理工具，速度快，需了解 xpath 语法；可以作为 BeautifulSoup 处理文档时的引擎</td>\n</tr>\n<tr>\n<td align=\"center\">html5lib</td>\n<td align=\"center\">HTML 和 XML 文档处理工具，几个解析工具的<a href=\"http://blog.csdn.net/fly_yr/article/details/51553587\" target=\"_blank\">比较</a></td>\n</tr>\n<tr>\n<td align=\"center\">selenium</td>\n<td align=\"center\">自动化测试工具，适用于动态爬虫，需配合浏览器（例如 phantomjs，无界面浏览器）使用</td>\n</tr>\n<tr>\n<td align=\"center\">scrapy</td>\n<td align=\"center\">著名的爬虫框架</td>\n</tr>\n</tbody></table>\n<h3 id=\"科学计算及图像处理-6\"><a href=\"#科学计算及图像处理-6\" class=\"headerlink\" title=\"科学计算及图像处理 (6)\"></a>科学计算及图像处理 (6)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">matplotlib</td>\n<td align=\"center\">Python 的 2D绘图库，也支持 3D</td>\n</tr>\n<tr>\n<td align=\"center\">numpy</td>\n<td align=\"center\">科学计算工具：矩阵、函数、精密运算等；</td>\n</tr>\n<tr>\n<td align=\"center\">pandas</td>\n<td align=\"center\">基于 numpy，提供了大量的解决数据分析任务所需的工具</td>\n</tr>\n<tr>\n<td align=\"center\">scipy</td>\n<td align=\"center\">高级的科学计算库，和Numpy联系密切</td>\n</tr>\n<tr>\n<td align=\"center\">pillow：PIL</td>\n<td align=\"center\">具有强大的图像处理能力</td>\n</tr>\n<tr>\n<td align=\"center\">opencv：CV2</td>\n<td align=\"center\">一个C++库，用于实时处理计算机视觉方面的问题</td>\n</tr>\n</tbody></table>\n<h3 id=\"深度学习-4\"><a href=\"#深度学习-4\" class=\"headerlink\" title=\"深度学习 (4)\"></a>深度学习 (4)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tensorflow</td>\n<td align=\"center\">膜拜谷歌大佬；有GPU版，需安装 CUDA</td>\n</tr>\n<tr>\n<td align=\"center\">scikit-learn</td>\n<td align=\"center\">基于NumPy, SciPy, Matplotlib的开源机器学习工具包（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">caffee/caffee2</td>\n<td align=\"center\">常用于图像分类（没用过）</td>\n</tr>\n</tbody></table>\n<h3 id=\"网络编程-4\"><a href=\"#网络编程-4\" class=\"headerlink\" title=\"网络编程 (4)\"></a>网络编程 (4)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">socket</td>\n<td align=\"center\">套接字，可以访问底层操作系统Socket接口的全部方法</td>\n</tr>\n<tr>\n<td align=\"center\">socketServer</td>\n<td align=\"center\">高级别网络服务模块，可以简化网络服务器的开发</td>\n</tr>\n<tr>\n<td align=\"center\">smtplib、email</td>\n<td align=\"center\">封装了 SMTP 协议的邮件客户端</td>\n</tr>\n</tbody></table>\n<h3 id=\"WEB-框架-3，不了解\"><a href=\"#WEB-框架-3，不了解\" class=\"headerlink\" title=\"WEB 框架 (3，不了解)\"></a>WEB 框架 (3，不了解)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">web</td>\n<td align=\"center\">很简单的web框架</td>\n</tr>\n<tr>\n<td align=\"center\">Flask</td>\n<td align=\"center\">轻量级框架</td>\n</tr>\n<tr>\n<td align=\"center\">Djando</td>\n<td align=\"center\">全能型框架（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">最简单的服务器</td>\n<td align=\"center\">python -m SimpleHTTPServer 8080</td>\n</tr>\n</tbody></table>\n<h3 id=\"其他-28\"><a href=\"#其他-28\" class=\"headerlink\" title=\"其他(28)\"></a>其他(28)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">pip</td>\n<td align=\"center\">Python 标准库，第三方库安装工具</td>\n</tr>\n<tr>\n<td align=\"center\">os</td>\n<td align=\"center\">Python 标准库，文件、目录操作工具</td>\n</tr>\n<tr>\n<td align=\"center\">sys</td>\n<td align=\"center\">Python 标准库，python 系统工具</td>\n</tr>\n<tr>\n<td align=\"center\">re</td>\n<td align=\"center\">Python 标准库，正则表达式工具</td>\n</tr>\n<tr>\n<td align=\"center\">wget</td>\n<td align=\"center\">linux-wget 命令的移植版，功能强大的下载工具</td>\n</tr>\n<tr>\n<td align=\"center\">you-get</td>\n<td align=\"center\">用于从 web 上下载媒体，支持油管</td>\n</tr>\n<tr>\n<td align=\"center\">itchat、wxpy</td>\n<td align=\"center\">微信机器人，提供了一系列操作微信聊天的接口</td>\n</tr>\n<tr>\n<td align=\"center\">jieba</td>\n<td align=\"center\">中文分词</td>\n</tr>\n<tr>\n<td align=\"center\">markdown</td>\n<td align=\"center\">将 markdown 格式的文档转化为结构化的xhtml 或 html</td>\n</tr>\n<tr>\n<td align=\"center\">PyQRCode</td>\n<td align=\"center\">二维码相关库</td>\n</tr>\n<tr>\n<td align=\"center\">wordcloud</td>\n<td align=\"center\">生成词云</td>\n</tr>\n<tr>\n<td align=\"center\">traceback</td>\n<td align=\"center\">代码debug 工具</td>\n</tr>\n<tr>\n<td align=\"center\">time、datetime</td>\n<td align=\"center\">Python 标准库，时间处理</td>\n</tr>\n<tr>\n<td align=\"center\">python-dateutil</td>\n<td align=\"center\">时间处理工具包</td>\n</tr>\n<tr>\n<td align=\"center\">pywin32</td>\n<td align=\"center\">提供了 python 操作 Windows 的接口</td>\n</tr>\n<tr>\n<td align=\"center\">pyhook</td>\n<td align=\"center\">基于pywin32；钩子，用来监听鼠标和键盘事件</td>\n</tr>\n<tr>\n<td align=\"center\">PyYAML</td>\n<td align=\"center\">生成、解析 YAML 配置文件</td>\n</tr>\n<tr>\n<td align=\"center\">pdfminer</td>\n<td align=\"center\">pdf工具（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">pyinstaller</td>\n<td align=\"center\">可以将 python 打包成 exe 可执行文件</td>\n</tr>\n<tr>\n<td align=\"center\">zipfile</td>\n<td align=\"center\">zip 压缩包处理工具</td>\n</tr>\n<tr>\n<td align=\"center\">optparse</td>\n<td align=\"center\">主要用来为脚本传递命令参数</td>\n</tr>\n<tr>\n<td align=\"center\">pygame</td>\n<td align=\"center\">游戏制作工具</td>\n</tr>\n<tr>\n<td align=\"center\">collections</td>\n<td align=\"center\">Python 标准库，提供了许多有用的集合类</td>\n</tr>\n<tr>\n<td align=\"center\">Tkinter</td>\n<td align=\"center\">GUI （图形界面）开发库</td>\n</tr>\n<tr>\n<td align=\"center\">json</td>\n<td align=\"center\">编码和解码 JSON 对象</td>\n</tr>\n<tr>\n<td align=\"center\">base64</td>\n<td align=\"center\">base64编码</td>\n</tr>\n</tbody></table>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>He who wants to do good knocks at the gate; he who loves finds the gate open.<br>    那些想做好人的，在门外敲着门，那爱人的，看见们敞着。——《飞鸟集》</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"爬虫类-8\"><a href=\"#爬虫类-8\" class=\"headerlink\" title=\"爬虫类 (8)\"></a>爬虫类 (8)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">urllib/urllib2</td>\n<td align=\"center\">Python 标准库，提供了大部分 HTTP 功能</td>\n</tr>\n<tr>\n<td align=\"center\">requests</td>\n<td align=\"center\">功能强大的 HTTP 客户端库</td>\n</tr>\n<tr>\n<td align=\"center\">bs4：beautifulsoup</td>\n<td align=\"center\">HTML 或 XML 文档处理工具，现已整合到 bs4 中</td>\n</tr>\n<tr>\n<td align=\"center\">lxml</td>\n<td align=\"center\">HTML 和 XML 文档处理工具，速度快，需了解 xpath 语法；可以作为 BeautifulSoup 处理文档时的引擎</td>\n</tr>\n<tr>\n<td align=\"center\">html5lib</td>\n<td align=\"center\">HTML 和 XML 文档处理工具，几个解析工具的<a href=\"http://blog.csdn.net/fly_yr/article/details/51553587\" target=\"_blank\">比较</a></td>\n</tr>\n<tr>\n<td align=\"center\">selenium</td>\n<td align=\"center\">自动化测试工具，适用于动态爬虫，需配合浏览器（例如 phantomjs，无界面浏览器）使用</td>\n</tr>\n<tr>\n<td align=\"center\">scrapy</td>\n<td align=\"center\">著名的爬虫框架</td>\n</tr>\n</tbody></table>\n<h3 id=\"科学计算及图像处理-6\"><a href=\"#科学计算及图像处理-6\" class=\"headerlink\" title=\"科学计算及图像处理 (6)\"></a>科学计算及图像处理 (6)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">matplotlib</td>\n<td align=\"center\">Python 的 2D绘图库，也支持 3D</td>\n</tr>\n<tr>\n<td align=\"center\">numpy</td>\n<td align=\"center\">科学计算工具：矩阵、函数、精密运算等；</td>\n</tr>\n<tr>\n<td align=\"center\">pandas</td>\n<td align=\"center\">基于 numpy，提供了大量的解决数据分析任务所需的工具</td>\n</tr>\n<tr>\n<td align=\"center\">scipy</td>\n<td align=\"center\">高级的科学计算库，和Numpy联系密切</td>\n</tr>\n<tr>\n<td align=\"center\">pillow：PIL</td>\n<td align=\"center\">具有强大的图像处理能力</td>\n</tr>\n<tr>\n<td align=\"center\">opencv：CV2</td>\n<td align=\"center\">一个C++库，用于实时处理计算机视觉方面的问题</td>\n</tr>\n</tbody></table>\n<h3 id=\"深度学习-4\"><a href=\"#深度学习-4\" class=\"headerlink\" title=\"深度学习 (4)\"></a>深度学习 (4)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">tensorflow</td>\n<td align=\"center\">膜拜谷歌大佬；有GPU版，需安装 CUDA</td>\n</tr>\n<tr>\n<td align=\"center\">scikit-learn</td>\n<td align=\"center\">基于NumPy, SciPy, Matplotlib的开源机器学习工具包（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">caffee/caffee2</td>\n<td align=\"center\">常用于图像分类（没用过）</td>\n</tr>\n</tbody></table>\n<h3 id=\"网络编程-4\"><a href=\"#网络编程-4\" class=\"headerlink\" title=\"网络编程 (4)\"></a>网络编程 (4)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">socket</td>\n<td align=\"center\">套接字，可以访问底层操作系统Socket接口的全部方法</td>\n</tr>\n<tr>\n<td align=\"center\">socketServer</td>\n<td align=\"center\">高级别网络服务模块，可以简化网络服务器的开发</td>\n</tr>\n<tr>\n<td align=\"center\">smtplib、email</td>\n<td align=\"center\">封装了 SMTP 协议的邮件客户端</td>\n</tr>\n</tbody></table>\n<h3 id=\"WEB-框架-3，不了解\"><a href=\"#WEB-框架-3，不了解\" class=\"headerlink\" title=\"WEB 框架 (3，不了解)\"></a>WEB 框架 (3，不了解)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">web</td>\n<td align=\"center\">很简单的web框架</td>\n</tr>\n<tr>\n<td align=\"center\">Flask</td>\n<td align=\"center\">轻量级框架</td>\n</tr>\n<tr>\n<td align=\"center\">Djando</td>\n<td align=\"center\">全能型框架（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">最简单的服务器</td>\n<td align=\"center\">python -m SimpleHTTPServer 8080</td>\n</tr>\n</tbody></table>\n<h3 id=\"其他-28\"><a href=\"#其他-28\" class=\"headerlink\" title=\"其他(28)\"></a>其他(28)</h3><table>\n<thead>\n<tr>\n<th align=\"center\">库名</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">pip</td>\n<td align=\"center\">Python 标准库，第三方库安装工具</td>\n</tr>\n<tr>\n<td align=\"center\">os</td>\n<td align=\"center\">Python 标准库，文件、目录操作工具</td>\n</tr>\n<tr>\n<td align=\"center\">sys</td>\n<td align=\"center\">Python 标准库，python 系统工具</td>\n</tr>\n<tr>\n<td align=\"center\">re</td>\n<td align=\"center\">Python 标准库，正则表达式工具</td>\n</tr>\n<tr>\n<td align=\"center\">wget</td>\n<td align=\"center\">linux-wget 命令的移植版，功能强大的下载工具</td>\n</tr>\n<tr>\n<td align=\"center\">you-get</td>\n<td align=\"center\">用于从 web 上下载媒体，支持油管</td>\n</tr>\n<tr>\n<td align=\"center\">itchat、wxpy</td>\n<td align=\"center\">微信机器人，提供了一系列操作微信聊天的接口</td>\n</tr>\n<tr>\n<td align=\"center\">jieba</td>\n<td align=\"center\">中文分词</td>\n</tr>\n<tr>\n<td align=\"center\">markdown</td>\n<td align=\"center\">将 markdown 格式的文档转化为结构化的xhtml 或 html</td>\n</tr>\n<tr>\n<td align=\"center\">PyQRCode</td>\n<td align=\"center\">二维码相关库</td>\n</tr>\n<tr>\n<td align=\"center\">wordcloud</td>\n<td align=\"center\">生成词云</td>\n</tr>\n<tr>\n<td align=\"center\">traceback</td>\n<td align=\"center\">代码debug 工具</td>\n</tr>\n<tr>\n<td align=\"center\">time、datetime</td>\n<td align=\"center\">Python 标准库，时间处理</td>\n</tr>\n<tr>\n<td align=\"center\">python-dateutil</td>\n<td align=\"center\">时间处理工具包</td>\n</tr>\n<tr>\n<td align=\"center\">pywin32</td>\n<td align=\"center\">提供了 python 操作 Windows 的接口</td>\n</tr>\n<tr>\n<td align=\"center\">pyhook</td>\n<td align=\"center\">基于pywin32；钩子，用来监听鼠标和键盘事件</td>\n</tr>\n<tr>\n<td align=\"center\">PyYAML</td>\n<td align=\"center\">生成、解析 YAML 配置文件</td>\n</tr>\n<tr>\n<td align=\"center\">pdfminer</td>\n<td align=\"center\">pdf工具（没用过）</td>\n</tr>\n<tr>\n<td align=\"center\">pyinstaller</td>\n<td align=\"center\">可以将 python 打包成 exe 可执行文件</td>\n</tr>\n<tr>\n<td align=\"center\">zipfile</td>\n<td align=\"center\">zip 压缩包处理工具</td>\n</tr>\n<tr>\n<td align=\"center\">optparse</td>\n<td align=\"center\">主要用来为脚本传递命令参数</td>\n</tr>\n<tr>\n<td align=\"center\">pygame</td>\n<td align=\"center\">游戏制作工具</td>\n</tr>\n<tr>\n<td align=\"center\">collections</td>\n<td align=\"center\">Python 标准库，提供了许多有用的集合类</td>\n</tr>\n<tr>\n<td align=\"center\">Tkinter</td>\n<td align=\"center\">GUI （图形界面）开发库</td>\n</tr>\n<tr>\n<td align=\"center\">json</td>\n<td align=\"center\">编码和解码 JSON 对象</td>\n</tr>\n<tr>\n<td align=\"center\">base64</td>\n<td align=\"center\">base64编码</td>\n</tr>\n</tbody></table>"},{"layout":"post","title":"年记——一月","date":"2019-01-19T00:13:00.000Z","_content":"\n{% centerquote %} January {% endcenterquote %}\n\n<!-- more -->\n\n## 第一周\n\n**2019.1.1 元旦**\n\n大晚上和懒子还有他可爱的大一妹子吃鸡，截图。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png)\n\n习主席的新年贺词\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png)\n\n**2019.1.2 今天毕业论文开题**\n\n这是做的PPT\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png)\n\n打印开题报告出来，看到了一只小松鼠，但是没拍到\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg)\n\n**2019.1.3 今天回家了**\n\n和狗子们出来吃饭，但只拍到一个，不知道是不是最后一次\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg)\n\n狗哥的白葡萄酒，被我和山东、内蒙的瓜分\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg)\n\n## 第二周\n\n中间回家好几天没拍照……\n\n**2019.1.7 超市**\n\n和我爸去上官超市买的黄豆和各种米，遇见了我奶奶、我妈、我姨\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg)\n\n**2019.1.8 周总理逝世43周年**\n\n周总理逝世43周年，谨记。感谢周总理\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png)\n\n*黑豆*\n\n茏茏给黑豆拍的照，总感觉它巨乖；有小窝之前【可怜 :expressionless: 】 VS 有小窝之后【舒呼 :grimacing: 】\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg)\n\n**2019.1.9 她忘了我的样子，居然**\n\n这就是我\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg)\n\n这是给黑豆吃的打虫药，肠虫清\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg)\n\n春妹老师给我的任务，百十张图片硬是手动截完了，然后收获了一句“好”\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg)\n\n**2019.1.10 科普**\n\n逛知乎随手下载的素材，纯当科普\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg)\n\n**2019.1.11 给我妈拍照**\n\n公告栏上要用，那个王八蛋打电话要，觉得等不及了就自己拍了，那晚他俩看起来都不开心\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg)\n\n**2019.1.13 二姑**\n\n想要一个高一点的桌子，网上的看起来总觉得有点低（其实并不低，后来我觉得），然后我二姑让我去他家，说给我做。其实就是住了两三天，除了睡觉干活的时候暖和，基本上都在瑟瑟发抖。这是在烧水的时候给明明拍的照（我就是当素材拍的）。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg)\n\n## 第三周\n\n**2019.1.15 蚂蚁森林**\n\n蚂蚁森林的敖特根大叔和2019第一小生命——小牛的合照\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg)\n\n**2019.1.17**\n\n逗我爸开心，给他玩我妈刚买来的被子固定器。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg)\n<video src= \"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4\" controls=\"controls\" width=\"270px\" height=\"480px\">\n</video>\n\n**2019.1.18**\n\n我今天炒的炒饭，嗯，味道真的可以\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg)\n\n\n\n\n\n## 第四周\n\n\n\n\n","source":"_posts/2019-01-19-first-month.markdown","raw":"---\nlayout: post\ntitle: 年记——一月\ndate: 2019-01-19 00:13:00 +0800\ncategories:\n- Life\ntags: \n- 年记 \n---\n\n{% centerquote %} January {% endcenterquote %}\n\n<!-- more -->\n\n## 第一周\n\n**2019.1.1 元旦**\n\n大晚上和懒子还有他可爱的大一妹子吃鸡，截图。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png)\n\n习主席的新年贺词\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png)\n\n**2019.1.2 今天毕业论文开题**\n\n这是做的PPT\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png)\n\n打印开题报告出来，看到了一只小松鼠，但是没拍到\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg)\n\n**2019.1.3 今天回家了**\n\n和狗子们出来吃饭，但只拍到一个，不知道是不是最后一次\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg)\n\n狗哥的白葡萄酒，被我和山东、内蒙的瓜分\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg)\n\n## 第二周\n\n中间回家好几天没拍照……\n\n**2019.1.7 超市**\n\n和我爸去上官超市买的黄豆和各种米，遇见了我奶奶、我妈、我姨\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg)\n\n**2019.1.8 周总理逝世43周年**\n\n周总理逝世43周年，谨记。感谢周总理\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png)\n\n*黑豆*\n\n茏茏给黑豆拍的照，总感觉它巨乖；有小窝之前【可怜 :expressionless: 】 VS 有小窝之后【舒呼 :grimacing: 】\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg)\n\n**2019.1.9 她忘了我的样子，居然**\n\n这就是我\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg)\n\n这是给黑豆吃的打虫药，肠虫清\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg)\n\n春妹老师给我的任务，百十张图片硬是手动截完了，然后收获了一句“好”\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg)\n\n**2019.1.10 科普**\n\n逛知乎随手下载的素材，纯当科普\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg)\n\n**2019.1.11 给我妈拍照**\n\n公告栏上要用，那个王八蛋打电话要，觉得等不及了就自己拍了，那晚他俩看起来都不开心\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg)\n\n**2019.1.13 二姑**\n\n想要一个高一点的桌子，网上的看起来总觉得有点低（其实并不低，后来我觉得），然后我二姑让我去他家，说给我做。其实就是住了两三天，除了睡觉干活的时候暖和，基本上都在瑟瑟发抖。这是在烧水的时候给明明拍的照（我就是当素材拍的）。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg)\n\n## 第三周\n\n**2019.1.15 蚂蚁森林**\n\n蚂蚁森林的敖特根大叔和2019第一小生命——小牛的合照\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg)\n\n**2019.1.17**\n\n逗我爸开心，给他玩我妈刚买来的被子固定器。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg)\n<video src= \"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4\" controls=\"controls\" width=\"270px\" height=\"480px\">\n</video>\n\n**2019.1.18**\n\n我今天炒的炒饭，嗯，味道真的可以\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg)\n\n\n\n\n\n## 第四周\n\n\n\n\n","slug":"first-month","published":1,"updated":"2019-03-04T13:07:53.889Z","comments":1,"photos":[],"link":"","_id":"cjwj070ep002qm8za6cwejg7m","content":"<blockquote class=\"blockquote-center\"><p>January </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"第一周\"><a href=\"#第一周\" class=\"headerlink\" title=\"第一周\"></a>第一周</h2><p><strong>2019.1.1 元旦</strong></p>\n<p>大晚上和懒子还有他可爱的大一妹子吃鸡，截图。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png\" alt></p>\n<p>习主席的新年贺词</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png\" alt></p>\n<p><strong>2019.1.2 今天毕业论文开题</strong></p>\n<p>这是做的PPT</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png\" alt></p>\n<p>打印开题报告出来，看到了一只小松鼠，但是没拍到</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg\" alt></p>\n<p><strong>2019.1.3 今天回家了</strong></p>\n<p>和狗子们出来吃饭，但只拍到一个，不知道是不是最后一次</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg\" alt></p>\n<p>狗哥的白葡萄酒，被我和山东、内蒙的瓜分</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg\" alt></p>\n<h2 id=\"第二周\"><a href=\"#第二周\" class=\"headerlink\" title=\"第二周\"></a>第二周</h2><p>中间回家好几天没拍照……</p>\n<p><strong>2019.1.7 超市</strong></p>\n<p>和我爸去上官超市买的黄豆和各种米，遇见了我奶奶、我妈、我姨</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg\" alt></p>\n<p><strong>2019.1.8 周总理逝世43周年</strong></p>\n<p>周总理逝世43周年，谨记。感谢周总理</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png\" alt></p>\n<p><em>黑豆</em></p>\n<p>茏茏给黑豆拍的照，总感觉它巨乖；有小窝之前【可怜 :expressionless: 】 VS 有小窝之后【舒呼 :grimacing: 】</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg\" alt></p>\n<p><strong>2019.1.9 她忘了我的样子，居然</strong></p>\n<p>这就是我</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg\" alt></p>\n<p>这是给黑豆吃的打虫药，肠虫清</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg\" alt></p>\n<p>春妹老师给我的任务，百十张图片硬是手动截完了，然后收获了一句“好”</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg\" alt></p>\n<p><strong>2019.1.10 科普</strong></p>\n<p>逛知乎随手下载的素材，纯当科普</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg\" alt></p>\n<p><strong>2019.1.11 给我妈拍照</strong></p>\n<p>公告栏上要用，那个王八蛋打电话要，觉得等不及了就自己拍了，那晚他俩看起来都不开心</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg\" alt></p>\n<p><strong>2019.1.13 二姑</strong></p>\n<p>想要一个高一点的桌子，网上的看起来总觉得有点低（其实并不低，后来我觉得），然后我二姑让我去他家，说给我做。其实就是住了两三天，除了睡觉干活的时候暖和，基本上都在瑟瑟发抖。这是在烧水的时候给明明拍的照（我就是当素材拍的）。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg\" alt></p>\n<h2 id=\"第三周\"><a href=\"#第三周\" class=\"headerlink\" title=\"第三周\"></a>第三周</h2><p><strong>2019.1.15 蚂蚁森林</strong></p>\n<p>蚂蚁森林的敖特根大叔和2019第一小生命——小牛的合照</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg\" alt></p>\n<p><strong>2019.1.17</strong></p>\n<p>逗我爸开心，给他玩我妈刚买来的被子固定器。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg\" alt><br><video src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4\" controls=\"controls\" width=\"270px\" height=\"480px\"><br></video></p>\n<p><strong>2019.1.18</strong></p>\n<p>我今天炒的炒饭，嗯，味道真的可以</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg\" alt></p>\n<h2 id=\"第四周\"><a href=\"#第四周\" class=\"headerlink\" title=\"第四周\"></a>第四周</h2>","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>January </p>\n</blockquote>","more":"<h2 id=\"第一周\"><a href=\"#第一周\" class=\"headerlink\" title=\"第一周\"></a>第一周</h2><p><strong>2019.1.1 元旦</strong></p>\n<p>大晚上和懒子还有他可爱的大一妹子吃鸡，截图。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png\" alt></p>\n<p>习主席的新年贺词</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png\" alt></p>\n<p><strong>2019.1.2 今天毕业论文开题</strong></p>\n<p>这是做的PPT</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png\" alt></p>\n<p>打印开题报告出来，看到了一只小松鼠，但是没拍到</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg\" alt></p>\n<p><strong>2019.1.3 今天回家了</strong></p>\n<p>和狗子们出来吃饭，但只拍到一个，不知道是不是最后一次</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg\" alt></p>\n<p>狗哥的白葡萄酒，被我和山东、内蒙的瓜分</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg\" alt></p>\n<h2 id=\"第二周\"><a href=\"#第二周\" class=\"headerlink\" title=\"第二周\"></a>第二周</h2><p>中间回家好几天没拍照……</p>\n<p><strong>2019.1.7 超市</strong></p>\n<p>和我爸去上官超市买的黄豆和各种米，遇见了我奶奶、我妈、我姨</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg\" alt></p>\n<p><strong>2019.1.8 周总理逝世43周年</strong></p>\n<p>周总理逝世43周年，谨记。感谢周总理</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png\" alt></p>\n<p><em>黑豆</em></p>\n<p>茏茏给黑豆拍的照，总感觉它巨乖；有小窝之前【可怜 :expressionless: 】 VS 有小窝之后【舒呼 :grimacing: 】</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg\" alt></p>\n<p><strong>2019.1.9 她忘了我的样子，居然</strong></p>\n<p>这就是我</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg\" alt></p>\n<p>这是给黑豆吃的打虫药，肠虫清</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg\" alt></p>\n<p>春妹老师给我的任务，百十张图片硬是手动截完了，然后收获了一句“好”</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg\" alt></p>\n<p><strong>2019.1.10 科普</strong></p>\n<p>逛知乎随手下载的素材，纯当科普</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg\" alt></p>\n<p><strong>2019.1.11 给我妈拍照</strong></p>\n<p>公告栏上要用，那个王八蛋打电话要，觉得等不及了就自己拍了，那晚他俩看起来都不开心</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg\" alt></p>\n<p><strong>2019.1.13 二姑</strong></p>\n<p>想要一个高一点的桌子，网上的看起来总觉得有点低（其实并不低，后来我觉得），然后我二姑让我去他家，说给我做。其实就是住了两三天，除了睡觉干活的时候暖和，基本上都在瑟瑟发抖。这是在烧水的时候给明明拍的照（我就是当素材拍的）。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg\" alt></p>\n<h2 id=\"第三周\"><a href=\"#第三周\" class=\"headerlink\" title=\"第三周\"></a>第三周</h2><p><strong>2019.1.15 蚂蚁森林</strong></p>\n<p>蚂蚁森林的敖特根大叔和2019第一小生命——小牛的合照</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg\" alt></p>\n<p><strong>2019.1.17</strong></p>\n<p>逗我爸开心，给他玩我妈刚买来的被子固定器。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg\" alt><br><video src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4\" controls=\"controls\" width=\"270px\" height=\"480px\"><br></video></p>\n<p><strong>2019.1.18</strong></p>\n<p>我今天炒的炒饭，嗯，味道真的可以</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg\" alt></p>\n<h2 id=\"第四周\"><a href=\"#第四周\" class=\"headerlink\" title=\"第四周\"></a>第四周</h2>"},{"layout":"post","title":"Python代码示例","date":"2018-04-22T13:34:51.000Z","_content":"\n{% centerquote %} 在马晓剑老师课堂上讲的一节课所用的示例代码O(∩_∩)O😄 {% endcenterquote %}\n\n<!-- more -->\n\n### Python 示例\n\n``` python\n# 变量命名\ni = 1\nc = 'c'\nstring = \"string\"\n# 循环\nfor i in range(1, 6):\n    print(i)\n# output:\n# 1\n# 2\n# 3\n# 4\n# 5\n\n# 切片\n''' \n[s t r i n g]\n[0 1 2 3 4 5]\n切片原则是“含头不含尾”\n可以切片的对象有列表、字符串等\n''' \nstring[:3]  # \"str\"\nstring[1:4]  # \"tri\"\nstring[3:]  # \"ing\"\n``` \n\n### C语言\n\n``` C\n// 变量命名\nint i = 1\nchar c = 'c'\nchar s[6] = {'s', 't', 'r', 'i', 'n', 'g'};\n//循环\nfor (i = 1; i < 6; i++){\n    printf(\"%d\", i);\n}\n/*output:\n1\n2\n3\n4\n5\n*/\n``` \n\n### TensorFlow 安装及查看\n\n``` shell\n# 安装\npip install tensorflow\t# cpu版本\npip install tensorflow-gpu\t# gpu 版本\n\n# 查看\npip list\n``` \n","source":"_posts/2018-04-22-python-code-for-example.markdown","raw":"---\nlayout: post\ntitle: Python代码示例\ndate: 2018-04-22 13:34:51 +0800\ncategories:\n- Python\ntags: \n- Python \n---\n\n{% centerquote %} 在马晓剑老师课堂上讲的一节课所用的示例代码O(∩_∩)O😄 {% endcenterquote %}\n\n<!-- more -->\n\n### Python 示例\n\n``` python\n# 变量命名\ni = 1\nc = 'c'\nstring = \"string\"\n# 循环\nfor i in range(1, 6):\n    print(i)\n# output:\n# 1\n# 2\n# 3\n# 4\n# 5\n\n# 切片\n''' \n[s t r i n g]\n[0 1 2 3 4 5]\n切片原则是“含头不含尾”\n可以切片的对象有列表、字符串等\n''' \nstring[:3]  # \"str\"\nstring[1:4]  # \"tri\"\nstring[3:]  # \"ing\"\n``` \n\n### C语言\n\n``` C\n// 变量命名\nint i = 1\nchar c = 'c'\nchar s[6] = {'s', 't', 'r', 'i', 'n', 'g'};\n//循环\nfor (i = 1; i < 6; i++){\n    printf(\"%d\", i);\n}\n/*output:\n1\n2\n3\n4\n5\n*/\n``` \n\n### TensorFlow 安装及查看\n\n``` shell\n# 安装\npip install tensorflow\t# cpu版本\npip install tensorflow-gpu\t# gpu 版本\n\n# 查看\npip list\n``` \n","slug":"python-code-for-example","published":1,"updated":"2019-03-04T14:37:05.906Z","comments":1,"photos":[],"link":"","_id":"cjwj070er002um8za84khe64q","content":"<blockquote class=\"blockquote-center\"><p>在马晓剑老师课堂上讲的一节课所用的示例代码O(∩_∩)O😄 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"Python-示例\"><a href=\"#Python-示例\" class=\"headerlink\" title=\"Python 示例\"></a>Python 示例</h3><pre><code class=\"python\"><span class=\"comment\"># 变量命名</span>\ni = <span class=\"number\">1</span>\nc = <span class=\"string\">'c'</span>\nstring = <span class=\"string\">\"string\"</span>\n<span class=\"comment\"># 循环</span>\n<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">6</span>):\n    print(i)\n<span class=\"comment\"># output:</span>\n<span class=\"comment\"># 1</span>\n<span class=\"comment\"># 2</span>\n<span class=\"comment\"># 3</span>\n<span class=\"comment\"># 4</span>\n<span class=\"comment\"># 5</span>\n\n<span class=\"comment\"># 切片</span>\n<span class=\"string\">''' </span>\n<span class=\"string\">[s t r i n g]</span>\n<span class=\"string\">[0 1 2 3 4 5]</span>\n<span class=\"string\">切片原则是“含头不含尾”</span>\n<span class=\"string\">可以切片的对象有列表、字符串等</span>\n<span class=\"string\">'''</span> \nstring[:<span class=\"number\">3</span>]  <span class=\"comment\"># \"str\"</span>\nstring[<span class=\"number\">1</span>:<span class=\"number\">4</span>]  <span class=\"comment\"># \"tri\"</span>\nstring[<span class=\"number\">3</span>:]  <span class=\"comment\"># \"ing\"</span></code></pre>\n<h3 id=\"C语言\"><a href=\"#C语言\" class=\"headerlink\" title=\"C语言\"></a>C语言</h3><pre><code class=\"C\"><span class=\"comment\">// 变量命名</span>\n<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>\n<span class=\"keyword\">char</span> c = <span class=\"string\">'c'</span>\n<span class=\"keyword\">char</span> s[<span class=\"number\">6</span>] = {<span class=\"string\">'s'</span>, <span class=\"string\">'t'</span>, <span class=\"string\">'r'</span>, <span class=\"string\">'i'</span>, <span class=\"string\">'n'</span>, <span class=\"string\">'g'</span>};\n<span class=\"comment\">//循环</span>\n<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">6</span>; i++){\n    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, i);\n}\n<span class=\"comment\">/*output:</span>\n<span class=\"comment\">1</span>\n<span class=\"comment\">2</span>\n<span class=\"comment\">3</span>\n<span class=\"comment\">4</span>\n<span class=\"comment\">5</span>\n<span class=\"comment\">*/</span></code></pre>\n<h3 id=\"TensorFlow-安装及查看\"><a href=\"#TensorFlow-安装及查看\" class=\"headerlink\" title=\"TensorFlow 安装及查看\"></a>TensorFlow 安装及查看</h3><pre><code class=\"shell\"><span class=\"meta\">#</span><span class=\"bash\"> 安装</span>\npip install tensorflow    # cpu版本\npip install tensorflow-gpu    # gpu 版本\n\n<span class=\"meta\">#</span><span class=\"bash\"> 查看</span>\npip list</code></pre>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>在马晓剑老师课堂上讲的一节课所用的示例代码O(∩_∩)O😄 </p>\n</blockquote>","more":"<h3 id=\"Python-示例\"><a href=\"#Python-示例\" class=\"headerlink\" title=\"Python 示例\"></a>Python 示例</h3><pre><code class=\"python\"><span class=\"comment\"># 变量命名</span>\ni = <span class=\"number\">1</span>\nc = <span class=\"string\">'c'</span>\nstring = <span class=\"string\">\"string\"</span>\n<span class=\"comment\"># 循环</span>\n<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">6</span>):\n    print(i)\n<span class=\"comment\"># output:</span>\n<span class=\"comment\"># 1</span>\n<span class=\"comment\"># 2</span>\n<span class=\"comment\"># 3</span>\n<span class=\"comment\"># 4</span>\n<span class=\"comment\"># 5</span>\n\n<span class=\"comment\"># 切片</span>\n<span class=\"string\">''' </span>\n<span class=\"string\">[s t r i n g]</span>\n<span class=\"string\">[0 1 2 3 4 5]</span>\n<span class=\"string\">切片原则是“含头不含尾”</span>\n<span class=\"string\">可以切片的对象有列表、字符串等</span>\n<span class=\"string\">'''</span> \nstring[:<span class=\"number\">3</span>]  <span class=\"comment\"># \"str\"</span>\nstring[<span class=\"number\">1</span>:<span class=\"number\">4</span>]  <span class=\"comment\"># \"tri\"</span>\nstring[<span class=\"number\">3</span>:]  <span class=\"comment\"># \"ing\"</span></code></pre>\n<h3 id=\"C语言\"><a href=\"#C语言\" class=\"headerlink\" title=\"C语言\"></a>C语言</h3><pre><code class=\"C\"><span class=\"comment\">// 变量命名</span>\n<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>\n<span class=\"keyword\">char</span> c = <span class=\"string\">'c'</span>\n<span class=\"keyword\">char</span> s[<span class=\"number\">6</span>] = {<span class=\"string\">'s'</span>, <span class=\"string\">'t'</span>, <span class=\"string\">'r'</span>, <span class=\"string\">'i'</span>, <span class=\"string\">'n'</span>, <span class=\"string\">'g'</span>};\n<span class=\"comment\">//循环</span>\n<span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">6</span>; i++){\n    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>, i);\n}\n<span class=\"comment\">/*output:</span>\n<span class=\"comment\">1</span>\n<span class=\"comment\">2</span>\n<span class=\"comment\">3</span>\n<span class=\"comment\">4</span>\n<span class=\"comment\">5</span>\n<span class=\"comment\">*/</span></code></pre>\n<h3 id=\"TensorFlow-安装及查看\"><a href=\"#TensorFlow-安装及查看\" class=\"headerlink\" title=\"TensorFlow 安装及查看\"></a>TensorFlow 安装及查看</h3><pre><code class=\"shell\"><span class=\"meta\">#</span><span class=\"bash\"> 安装</span>\npip install tensorflow    # cpu版本\npip install tensorflow-gpu    # gpu 版本\n\n<span class=\"meta\">#</span><span class=\"bash\"> 查看</span>\npip list</code></pre>"},{"layout":"post","title":"Scala 函数","subtitle":"爱哭的嘎达傻空了大概看到过","date":"2018-03-18T00:00:00.000Z","_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe sadness of my soul is her bride's veil. It waits to be lifted in the night. \n\t我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。\n{% endblockquote %}\n<!-- more -->\n\n这里所写的重点是在 Scala 中出现的但在 Python 和其他正经语言中没有出现的语法。\n\n### 纯函数\n\n+ 有一个或多个输入参数\n+ 只使用输入参数完成运算\n+ 返回一个值\n+ 对于相同的输入总返回相同的值\n+ 不使用或影响函数之外的任何数据\n+ 不受函数之外的任何数据的影响\n\n### 无参函数\n\n最基本的 Scala 函数是表达式的一个命名包装器，如果需要一个函数来格式化当前数据，检查一个远程服务是否提供了新数据，或者只是要返回一个固定的值，就可以采用这个格式。\n\n*注意：*括号可以加也可以不加，调用时亦然。但是如果定义函数时没加括号，调用时也不能加括号。\n\n``` scala\ndef fun1 = \"Hello World!\"\ndef fun2 : String = \"Hello World!\"\ndef fun2() : String = \"Hello World!\"\n```\n\n\n### 定义函数的几种方法\n\nScala 的函数会把函数体的最后一个表达式的值作为函数的返回值返回，而有些情况可能在函数结束前返回一个值，用 **return** 关键字即可\n\n``` scala\ndef add(x:Int, y:Int) : Int = {\n    x + y\n}\ndef Fibo(n:Int) : Long = {\n    if (n==1 | n==2) return 1\n\tFibo(n-1) + Fibo(n-2)\n}\n```\n\n### 表达式块调用函数\n\n表达式块调用函数就是利用一个表达式块的返回值调用函数\n\n``` scala\nFibo{val n=2;2*3}\n```\n\n### 尾递归\n\n@annotation.tailrec\n节省栈空间\n\n### 嵌套函数\n\n``` scala\ndef max(a:Int, b:Int, c:Int) = {\n    def max(x:Int, y:Int) = {\n\t    if (x > y) x else y\n\t}\n\tmax (a, maax(b, c))\n}\n// -------------------------------\ndef info (name:String, age:Int) = {\n    println(s\"name:$name, age:$age\")\n}\ninfo(\"tom, 1\")\n// 或\ndef info (name:String=\"tom\", age:Int) = {\n    println(s\"name:$name, age:$age\")\n}\ninfo(name=\"tom\", age=1)\n```\n\n","source":"_posts/2018-03-18-scala-function.markdown","raw":"---\nlayout: post\ntitle: Scala 函数\nsubtitle: 爱哭的嘎达傻空了大概看到过\ndate: 2018-03-18 00:00:00 +0800\ncategories:\n- Scala\ntags: [Scala, Spark] \n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe sadness of my soul is her bride's veil. It waits to be lifted in the night. \n\t我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。\n{% endblockquote %}\n<!-- more -->\n\n这里所写的重点是在 Scala 中出现的但在 Python 和其他正经语言中没有出现的语法。\n\n### 纯函数\n\n+ 有一个或多个输入参数\n+ 只使用输入参数完成运算\n+ 返回一个值\n+ 对于相同的输入总返回相同的值\n+ 不使用或影响函数之外的任何数据\n+ 不受函数之外的任何数据的影响\n\n### 无参函数\n\n最基本的 Scala 函数是表达式的一个命名包装器，如果需要一个函数来格式化当前数据，检查一个远程服务是否提供了新数据，或者只是要返回一个固定的值，就可以采用这个格式。\n\n*注意：*括号可以加也可以不加，调用时亦然。但是如果定义函数时没加括号，调用时也不能加括号。\n\n``` scala\ndef fun1 = \"Hello World!\"\ndef fun2 : String = \"Hello World!\"\ndef fun2() : String = \"Hello World!\"\n```\n\n\n### 定义函数的几种方法\n\nScala 的函数会把函数体的最后一个表达式的值作为函数的返回值返回，而有些情况可能在函数结束前返回一个值，用 **return** 关键字即可\n\n``` scala\ndef add(x:Int, y:Int) : Int = {\n    x + y\n}\ndef Fibo(n:Int) : Long = {\n    if (n==1 | n==2) return 1\n\tFibo(n-1) + Fibo(n-2)\n}\n```\n\n### 表达式块调用函数\n\n表达式块调用函数就是利用一个表达式块的返回值调用函数\n\n``` scala\nFibo{val n=2;2*3}\n```\n\n### 尾递归\n\n@annotation.tailrec\n节省栈空间\n\n### 嵌套函数\n\n``` scala\ndef max(a:Int, b:Int, c:Int) = {\n    def max(x:Int, y:Int) = {\n\t    if (x > y) x else y\n\t}\n\tmax (a, maax(b, c))\n}\n// -------------------------------\ndef info (name:String, age:Int) = {\n    println(s\"name:$name, age:$age\")\n}\ninfo(\"tom, 1\")\n// 或\ndef info (name:String=\"tom\", age:Int) = {\n    println(s\"name:$name, age:$age\")\n}\ninfo(name=\"tom\", age=1)\n```\n\n","slug":"scala-function","published":1,"updated":"2019-03-04T14:48:30.403Z","comments":1,"photos":[],"link":"","_id":"cjwj070ev002ym8zapt40786a","content":"<blockquote><p>The sadness of my soul is her bride’s veil. It waits to be lifted in the night.<br>我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n<a id=\"more\"></a>\n\n<p>这里所写的重点是在 Scala 中出现的但在 Python 和其他正经语言中没有出现的语法。</p>\n<h3 id=\"纯函数\"><a href=\"#纯函数\" class=\"headerlink\" title=\"纯函数\"></a>纯函数</h3><ul>\n<li>有一个或多个输入参数</li>\n<li>只使用输入参数完成运算</li>\n<li>返回一个值</li>\n<li>对于相同的输入总返回相同的值</li>\n<li>不使用或影响函数之外的任何数据</li>\n<li>不受函数之外的任何数据的影响</li>\n</ul>\n<h3 id=\"无参函数\"><a href=\"#无参函数\" class=\"headerlink\" title=\"无参函数\"></a>无参函数</h3><p>最基本的 Scala 函数是表达式的一个命名包装器，如果需要一个函数来格式化当前数据，检查一个远程服务是否提供了新数据，或者只是要返回一个固定的值，就可以采用这个格式。</p>\n<p><em>注意：</em>括号可以加也可以不加，调用时亦然。但是如果定义函数时没加括号，调用时也不能加括号。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun1</span> </span>= <span class=\"string\">\"Hello World!\"</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun2</span> </span>: <span class=\"type\">String</span> = <span class=\"string\">\"Hello World!\"</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun2</span></span>() : <span class=\"type\">String</span> = <span class=\"string\">\"Hello World!\"</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"定义函数的几种方法\"><a href=\"#定义函数的几种方法\" class=\"headerlink\" title=\"定义函数的几种方法\"></a>定义函数的几种方法</h3><p>Scala 的函数会把函数体的最后一个表达式的值作为函数的返回值返回，而有些情况可能在函数结束前返回一个值，用 <strong>return</strong> 关键字即可</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span></span>(x:<span class=\"type\">Int</span>, y:<span class=\"type\">Int</span>) : <span class=\"type\">Int</span> = &#123;</span><br><span class=\"line\">    x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Fibo</span></span>(n:<span class=\"type\">Int</span>) : <span class=\"type\">Long</span> = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n==<span class=\"number\">1</span> | n==<span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"type\">Fibo</span>(n<span class=\"number\">-1</span>) + <span class=\"type\">Fibo</span>(n<span class=\"number\">-2</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"表达式块调用函数\"><a href=\"#表达式块调用函数\" class=\"headerlink\" title=\"表达式块调用函数\"></a>表达式块调用函数</h3><p>表达式块调用函数就是利用一个表达式块的返回值调用函数</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Fibo</span>&#123;<span class=\"keyword\">val</span> n=<span class=\"number\">2</span>;<span class=\"number\">2</span>*<span class=\"number\">3</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"尾递归\"><a href=\"#尾递归\" class=\"headerlink\" title=\"尾递归\"></a>尾递归</h3><p>@annotation.tailrec<br>节省栈空间</p>\n<h3 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">max</span></span>(a:<span class=\"type\">Int</span>, b:<span class=\"type\">Int</span>, c:<span class=\"type\">Int</span>) = &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">max</span></span>(x:<span class=\"type\">Int</span>, y:<span class=\"type\">Int</span>) = &#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">if</span> (x &gt; y) x <span class=\"keyword\">else</span> y</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmax (a, maax(b, c))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -------------------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">info</span> </span>(name:<span class=\"type\">String</span>, age:<span class=\"type\">Int</span>) = &#123;</span><br><span class=\"line\">    println(<span class=\"string\">s\"name:<span class=\"subst\">$name</span>, age:<span class=\"subst\">$age</span>\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">info(<span class=\"string\">\"tom, 1\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 或</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">info</span> </span>(name:<span class=\"type\">String</span>=<span class=\"string\">\"tom\"</span>, age:<span class=\"type\">Int</span>) = &#123;</span><br><span class=\"line\">    println(<span class=\"string\">s\"name:<span class=\"subst\">$name</span>, age:<span class=\"subst\">$age</span>\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">info(name=<span class=\"string\">\"tom\"</span>, age=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The sadness of my soul is her bride’s veil. It waits to be lifted in the night.<br>我灵魂里的忧郁就是她新婚的面纱。这面纱等候着在夜间卸去。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<p>这里所写的重点是在 Scala 中出现的但在 Python 和其他正经语言中没有出现的语法。</p>\n<h3 id=\"纯函数\"><a href=\"#纯函数\" class=\"headerlink\" title=\"纯函数\"></a>纯函数</h3><ul>\n<li>有一个或多个输入参数</li>\n<li>只使用输入参数完成运算</li>\n<li>返回一个值</li>\n<li>对于相同的输入总返回相同的值</li>\n<li>不使用或影响函数之外的任何数据</li>\n<li>不受函数之外的任何数据的影响</li>\n</ul>\n<h3 id=\"无参函数\"><a href=\"#无参函数\" class=\"headerlink\" title=\"无参函数\"></a>无参函数</h3><p>最基本的 Scala 函数是表达式的一个命名包装器，如果需要一个函数来格式化当前数据，检查一个远程服务是否提供了新数据，或者只是要返回一个固定的值，就可以采用这个格式。</p>\n<p><em>注意：</em>括号可以加也可以不加，调用时亦然。但是如果定义函数时没加括号，调用时也不能加括号。</p>\n<!--�49-->\n\n<h3 id=\"定义函数的几种方法\"><a href=\"#定义函数的几种方法\" class=\"headerlink\" title=\"定义函数的几种方法\"></a>定义函数的几种方法</h3><p>Scala 的函数会把函数体的最后一个表达式的值作为函数的返回值返回，而有些情况可能在函数结束前返回一个值，用 <strong>return</strong> 关键字即可</p>\n<!--�50-->\n\n<h3 id=\"表达式块调用函数\"><a href=\"#表达式块调用函数\" class=\"headerlink\" title=\"表达式块调用函数\"></a>表达式块调用函数</h3><p>表达式块调用函数就是利用一个表达式块的返回值调用函数</p>\n<!--�51-->\n\n<h3 id=\"尾递归\"><a href=\"#尾递归\" class=\"headerlink\" title=\"尾递归\"></a>尾递归</h3><p>@annotation.tailrec<br>节省栈空间</p>\n<h3 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h3><!--�52-->"},{"layout":"post","title":"Spark 持久化","date":"2018-04-18T18:18:18.000Z","description":null,"_content":"\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe power that boasts of its mischiefs is laughed at by the yellow leaves that fall, and clouds that pass by. \n\t权威以它的恶行自夸；落下的黄叶与浮游过的云片都在笑它。\n{% endblockquote %}\n\n<!-- more -->\n\n### 持久化策略\n\nrdd.cache(): 相当于调用无参的 persist 方法 (206th in `RDD.scala`)\nrdd.persist(): 无参数相当于调用其默认的 \"MOMORY_ONLY\" 持久化策略(201th in `RDD.scala`)\nrdd.unpersist(): 手动把持久化的 RDD 从缓存中移除\n\n<table>\n  <tbody>\n    <tr>\n      <td style=\"width:140px\">级别</td>\n      <td style=\"width:30px\">使用空间</td>\n      <td style=\"width:30px\">CPU时间</td>\n      <td style=\"width:30px\">内存中</td>\n      <td style=\"width:30px\">在磁盘</td>\n      <td style=\"width:150px\">备注</td>\n    </tr>\n    <tr>\n      <td>NONE</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY</td>\n      <td>高</td>\n      <td>低</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK</td>\n      <td>高</td>\n      <td>中等</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上</td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上，在内存中存放序列化后的数据</td>\n    </tr>\n    <tr>\n      <td>DISK_ONLY</td>\n      <td>低</td>\n      <td>高</td>\n      <td>否</td>\n      <td>是</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n补充：\n1. MEMORY_ONLY 和 MEMORY_ONLY_SER 的区别： 前者是以对象的形式存储，后者以序列化的形式（字节数组）存储。\n2. MEMORY_ONLY 和 MEMORY_AND_DISK 的区别: 前者先在内存存储，如果内存存不下，就不存了。直接从HDFS上读取数据重新计算。后者先在内存存储，如果内存存不下，把剩下的存入到磁盘当中\n3. 选择 MEMORY_ONLY 为默认级别的原因: 按照 Spark 速度快的特性，即使从 HDFS 上取数据重新计算也比多一次 IO 读写要快。记得用我是最好的\n4. 在序列化级别后加 \"_2\"可以把持久化数据存为两份\n5. 如果当前 RDD 计算比较复杂，可考虑使用 MEMORY_AND_DISK\n\n以下是其源码：\n\n``` scala\nval NONE = new StorageLevel(false, false, false, false)\nval DISK_ONLY = new StorageLevel(true, false, false, false)\nval DISK_ONLY_2 = new StorageLevel(true, false, false, false, 2)\nval MEMORY_ONLY = new StorageLevel(false, true, false, true)\nval MEMORY_ONLY_2 = new StorageLevel(false, true, false, true, 2)\nval MEMORY_ONLY_SER = new StorageLevel(false, true, false, false)\nval MEMORY_ONLY_SER_2 = new StorageLevel(false, true, false, false, 2)\nval MEMORY_AND_DISK = new StorageLevel(true, true, false, true)\nval MEMORY_AND_DISK_2 = new StorageLevel(true, true, false, true, 2)\nval MEMORY_AND_DISK_SER = new StorageLevel(true, true, false, false)\nval MEMORY_AND_DISK_SER_2 = new StorageLevel(true, true, false, false, 2)\nval OFF_HEAP = new StorageLevel(true, true, true, false, 1)\n``` \n\n### checkpoint——检查点\n\ncheckpoint作为容错的设计，基本思路是把当前运行的状态，保存在容错的存储系统中(一般是hdfs)。对于容错的处理，肯定是围绕作业紧密相关的，保存内容包括元数据和数据两部分。\n\n``` scala\nsc.setCheckPointDir(\"path\") #设置检查点路径\nrdd.checkpoint \n```\n\n使用条件：前面的计算极其复杂，流程特别长。创建checkpoint之后，所有的父级RDD依赖关系全部被移除，本身成为顶级父RDD。使用前应先持久化，否则需要重新计算一次。\n\n### 查看存储级别\n\n先用 Thread.sleep(1000000), 再在 localhost:4040 查看\n或者用代码 `rdd.getStorageLevel.description`\n\n\n","source":"_posts/2018-04-18-spark-cache.markdown","raw":"---\nlayout: post\ntitle: Spark 持久化\ndate: 2018-04-18 18:18:18 +0800\ndescription:\ncategories:\n- Spark\ntags: \n- Spark \n- 缓存\n---\n\n{% blockquote 泰戈尔, 飞鸟集 %}\n\tThe power that boasts of its mischiefs is laughed at by the yellow leaves that fall, and clouds that pass by. \n\t权威以它的恶行自夸；落下的黄叶与浮游过的云片都在笑它。\n{% endblockquote %}\n\n<!-- more -->\n\n### 持久化策略\n\nrdd.cache(): 相当于调用无参的 persist 方法 (206th in `RDD.scala`)\nrdd.persist(): 无参数相当于调用其默认的 \"MOMORY_ONLY\" 持久化策略(201th in `RDD.scala`)\nrdd.unpersist(): 手动把持久化的 RDD 从缓存中移除\n\n<table>\n  <tbody>\n    <tr>\n      <td style=\"width:140px\">级别</td>\n      <td style=\"width:30px\">使用空间</td>\n      <td style=\"width:30px\">CPU时间</td>\n      <td style=\"width:30px\">内存中</td>\n      <td style=\"width:30px\">在磁盘</td>\n      <td style=\"width:150px\">备注</td>\n    </tr>\n    <tr>\n      <td>NONE</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY</td>\n      <td>高</td>\n      <td>低</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK</td>\n      <td>高</td>\n      <td>中等</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上</td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上，在内存中存放序列化后的数据</td>\n    </tr>\n    <tr>\n      <td>DISK_ONLY</td>\n      <td>低</td>\n      <td>高</td>\n      <td>否</td>\n      <td>是</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n补充：\n1. MEMORY_ONLY 和 MEMORY_ONLY_SER 的区别： 前者是以对象的形式存储，后者以序列化的形式（字节数组）存储。\n2. MEMORY_ONLY 和 MEMORY_AND_DISK 的区别: 前者先在内存存储，如果内存存不下，就不存了。直接从HDFS上读取数据重新计算。后者先在内存存储，如果内存存不下，把剩下的存入到磁盘当中\n3. 选择 MEMORY_ONLY 为默认级别的原因: 按照 Spark 速度快的特性，即使从 HDFS 上取数据重新计算也比多一次 IO 读写要快。记得用我是最好的\n4. 在序列化级别后加 \"_2\"可以把持久化数据存为两份\n5. 如果当前 RDD 计算比较复杂，可考虑使用 MEMORY_AND_DISK\n\n以下是其源码：\n\n``` scala\nval NONE = new StorageLevel(false, false, false, false)\nval DISK_ONLY = new StorageLevel(true, false, false, false)\nval DISK_ONLY_2 = new StorageLevel(true, false, false, false, 2)\nval MEMORY_ONLY = new StorageLevel(false, true, false, true)\nval MEMORY_ONLY_2 = new StorageLevel(false, true, false, true, 2)\nval MEMORY_ONLY_SER = new StorageLevel(false, true, false, false)\nval MEMORY_ONLY_SER_2 = new StorageLevel(false, true, false, false, 2)\nval MEMORY_AND_DISK = new StorageLevel(true, true, false, true)\nval MEMORY_AND_DISK_2 = new StorageLevel(true, true, false, true, 2)\nval MEMORY_AND_DISK_SER = new StorageLevel(true, true, false, false)\nval MEMORY_AND_DISK_SER_2 = new StorageLevel(true, true, false, false, 2)\nval OFF_HEAP = new StorageLevel(true, true, true, false, 1)\n``` \n\n### checkpoint——检查点\n\ncheckpoint作为容错的设计，基本思路是把当前运行的状态，保存在容错的存储系统中(一般是hdfs)。对于容错的处理，肯定是围绕作业紧密相关的，保存内容包括元数据和数据两部分。\n\n``` scala\nsc.setCheckPointDir(\"path\") #设置检查点路径\nrdd.checkpoint \n```\n\n使用条件：前面的计算极其复杂，流程特别长。创建checkpoint之后，所有的父级RDD依赖关系全部被移除，本身成为顶级父RDD。使用前应先持久化，否则需要重新计算一次。\n\n### 查看存储级别\n\n先用 Thread.sleep(1000000), 再在 localhost:4040 查看\n或者用代码 `rdd.getStorageLevel.description`\n\n\n","slug":"spark-cache","published":1,"updated":"2019-03-04T13:22:05.700Z","comments":1,"photos":[],"link":"","_id":"cjwj070ex0032m8zapwpierwj","content":"<blockquote><p>The power that boasts of its mischiefs is laughed at by the yellow leaves that fall, and clouds that pass by.<br>权威以它的恶行自夸；落下的黄叶与浮游过的云片都在笑它。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>\n\n<a id=\"more\"></a>\n\n<h3 id=\"持久化策略\"><a href=\"#持久化策略\" class=\"headerlink\" title=\"持久化策略\"></a>持久化策略</h3><p>rdd.cache(): 相当于调用无参的 persist 方法 (206th in <code>RDD.scala</code>)\nrdd.persist(): 无参数相当于调用其默认的 “MOMORY_ONLY” 持久化策略(201th in <code>RDD.scala</code>)\nrdd.unpersist(): 手动把持久化的 RDD 从缓存中移除</p>\n<table>\n  <tbody>\n    <tr>\n      <td style=\"width:140px\">级别</td>\n      <td style=\"width:30px\">使用空间</td>\n      <td style=\"width:30px\">CPU时间</td>\n      <td style=\"width:30px\">内存中</td>\n      <td style=\"width:30px\">在磁盘</td>\n      <td style=\"width:150px\">备注</td>\n    </tr>\n    <tr>\n      <td>NONE</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY</td>\n      <td>高</td>\n      <td>低</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK</td>\n      <td>高</td>\n      <td>中等</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上</td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上，在内存中存放序列化后的数据</td>\n    </tr>\n    <tr>\n      <td>DISK_ONLY</td>\n      <td>低</td>\n      <td>高</td>\n      <td>否</td>\n      <td>是</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>补充：</p>\n<ol>\n<li>MEMORY_ONLY 和 MEMORY_ONLY_SER 的区别： 前者是以对象的形式存储，后者以序列化的形式（字节数组）存储。</li>\n<li>MEMORY_ONLY 和 MEMORY_AND_DISK 的区别: 前者先在内存存储，如果内存存不下，就不存了。直接从HDFS上读取数据重新计算。后者先在内存存储，如果内存存不下，把剩下的存入到磁盘当中</li>\n<li>选择 MEMORY_ONLY 为默认级别的原因: 按照 Spark 速度快的特性，即使从 HDFS 上取数据重新计算也比多一次 IO 读写要快。记得用我是最好的</li>\n<li>在序列化级别后加 “_2”可以把持久化数据存为两份</li>\n<li>如果当前 RDD 计算比较复杂，可考虑使用 MEMORY_AND_DISK</li>\n</ol>\n<p>以下是其源码：</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">NONE</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">DISK_ONLY</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">DISK_ONLY_2</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_ONLY</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_ONLY_2</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_ONLY_SER</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_ONLY_SER_2</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_AND_DISK</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_AND_DISK_2</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_AND_DISK_SER</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MEMORY_AND_DISK_SER_2</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">OFF_HEAP</span> = <span class=\"keyword\">new</span> <span class=\"type\">StorageLevel</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">### checkpoint——检查点</span><br><span class=\"line\"></span><br><span class=\"line\">checkpoint作为容错的设计，基本思路是把当前运行的状态，保存在容错的存储系统中(一般是hdfs)。对于容错的处理，肯定是围绕作业紧密相关的，保存内容包括元数据和数据两部分。</span><br><span class=\"line\"></span><br><span class=\"line\">``` scala</span><br><span class=\"line\">sc.setCheckPointDir(<span class=\"string\">\"path\"</span>) #设置检查点路径</span><br><span class=\"line\">rdd.checkpoint</span><br></pre></td></tr></table></figure>\n\n<p>使用条件：前面的计算极其复杂，流程特别长。创建checkpoint之后，所有的父级RDD依赖关系全部被移除，本身成为顶级父RDD。使用前应先持久化，否则需要重新计算一次。</p>\n<h3 id=\"查看存储级别\"><a href=\"#查看存储级别\" class=\"headerlink\" title=\"查看存储级别\"></a>查看存储级别</h3><p>先用 Thread.sleep(1000000), 再在 localhost:4040 查看<br>或者用代码 <code>rdd.getStorageLevel.description</code></p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>The power that boasts of its mischiefs is laughed at by the yellow leaves that fall, and clouds that pass by.<br>权威以它的恶行自夸；落下的黄叶与浮游过的云片都在笑它。</p>\n<footer><strong>泰戈尔</strong><cite>飞鸟集</cite></footer></blockquote>","more":"<h3 id=\"持久化策略\"><a href=\"#持久化策略\" class=\"headerlink\" title=\"持久化策略\"></a>持久化策略</h3><p>rdd.cache(): 相当于调用无参的 persist 方法 (206th in <code>RDD.scala</code>)\nrdd.persist(): 无参数相当于调用其默认的 “MOMORY_ONLY” 持久化策略(201th in <code>RDD.scala</code>)\nrdd.unpersist(): 手动把持久化的 RDD 从缓存中移除</p>\n<table>\n  <tbody>\n    <tr>\n      <td style=\"width:140px\">级别</td>\n      <td style=\"width:30px\">使用空间</td>\n      <td style=\"width:30px\">CPU时间</td>\n      <td style=\"width:30px\">内存中</td>\n      <td style=\"width:30px\">在磁盘</td>\n      <td style=\"width:150px\">备注</td>\n    </tr>\n    <tr>\n      <td>NONE</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY</td>\n      <td>高</td>\n      <td>低</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_ONLY_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>是</td>\n      <td>否</td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK</td>\n      <td>高</td>\n      <td>中等</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上</td>\n    </tr>\n    <tr>\n      <td>MEMORY_AND_DISK_SER</td>\n      <td>低</td>\n      <td>高</td>\n      <td>部分</td>\n      <td>部分</td>\n      <td>如果内存中放不下，则溢写到磁盘上，在内存中存放序列化后的数据</td>\n    </tr>\n    <tr>\n      <td>DISK_ONLY</td>\n      <td>低</td>\n      <td>高</td>\n      <td>否</td>\n      <td>是</td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>补充：</p>\n<ol>\n<li>MEMORY_ONLY 和 MEMORY_ONLY_SER 的区别： 前者是以对象的形式存储，后者以序列化的形式（字节数组）存储。</li>\n<li>MEMORY_ONLY 和 MEMORY_AND_DISK 的区别: 前者先在内存存储，如果内存存不下，就不存了。直接从HDFS上读取数据重新计算。后者先在内存存储，如果内存存不下，把剩下的存入到磁盘当中</li>\n<li>选择 MEMORY_ONLY 为默认级别的原因: 按照 Spark 速度快的特性，即使从 HDFS 上取数据重新计算也比多一次 IO 读写要快。记得用我是最好的</li>\n<li>在序列化级别后加 “_2”可以把持久化数据存为两份</li>\n<li>如果当前 RDD 计算比较复杂，可考虑使用 MEMORY_AND_DISK</li>\n</ol>\n<p>以下是其源码：</p>\n<!--�53-->\n\n<p>使用条件：前面的计算极其复杂，流程特别长。创建checkpoint之后，所有的父级RDD依赖关系全部被移除，本身成为顶级父RDD。使用前应先持久化，否则需要重新计算一次。</p>\n<h3 id=\"查看存储级别\"><a href=\"#查看存储级别\" class=\"headerlink\" title=\"查看存储级别\"></a>查看存储级别</h3><p>先用 Thread.sleep(1000000), 再在 localhost:4040 查看<br>或者用代码 <code>rdd.getStorageLevel.description</code></p>"},{"layout":"post","title":"睡前小故事——Day 2","date":"2019-01-20T00:00:00.000Z","_content":"\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-泊安\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/102599532)\n\n小公主喜欢上了小木匠\n\n小木匠认真的在为小公主打造梳妆台\n\n小公主托着腮趴在旁边\n\n眼里都是小星星\n\n小木匠把梳妆台做完了\n\n小公主不舍得小木匠走\n\n“可以让梳妆台有一颗粉红色的心么”\n\n“我还想要一个双层的大大的首饰盒”\n\n“还有，还有，你可以给我做一个木头的小兔子么”\n\n小木匠点点头\n\n小木匠叮叮当当做了一个呆呆的小兔子\n\n又叮叮当当做了一个漂亮的首饰盒\n\n小木匠把小兔子递给小公主小公主抱着小兔子，摸摸首饰盒\n\n“你还没有给我做粉红色的心呢”\n\n小木匠撇撇嘴\n\n“我的心已经给你了，你为什么还要心呢”\n\n小公主眨眨眼\n\n“你什么时候把心给我了”\n“你给我星星的时候”\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-乔小巴\n\n[原文链接](https://www.zhihu.com/question/36632066/answer/68468017)\n\n### 故事一.偷偷地想你~O(∩_∩)O~\n\n**吃饭篇~**\n\n大兔子和小兔子一起吃饭。小兔子捧着饭碗，对大兔子说：“想你。”\n\n“我不就在你身边吗？”大兔子说。\n\n“可我还是想你。”小兔子咂吧咂吧嘴，“我每吃一口饭都要想你一遍，所以，我的饭又香又甜，哪怕是我最不喜欢的卷心菜。”\n\n大兔子不说话，只是低着头继续吃饭。\n\n**散步篇~**\n\n大兔子和小兔子一起散步。\n\n小兔子一蹦一跳，对大兔子说：“想你。”\n\n“我不就在你身边吗？”\n\n大兔子说。“可我还是想你。”\n\n小兔子踮起脚尖，“我每走一步路都要想你一遍，所以，再长的路走起来都轻轻松松，哪怕路上满是泥泞。”\n\n大兔子不说话，只是慢悠悠地继续走路。\n\n**看月亮篇~**\n\n大兔子和小兔子坐在一起看月亮。\n\n小兔子托着下巴，对大兔子说：“想你。”\n\n“我不就在你身边吗？”大兔子说。\n\n“可我还是想你。”小兔子歪着脑袋，“我每看一眼月亮都要想你一遍，所以，月亮看上去那么美，哪怕乌云遮挡了它的光芒。”\n\n大兔子不说话，只是抬起头继续看月亮。\n\n**睡觉篇~**\n\n大兔子和小兔子该睡觉了。\n\n小兔子盖好被子，对大兔子说：“想你。”\n\n“我不就在你身边吗。”大兔子说。“可我还是想你。”小兔子闭上眼睛，“我每做一个梦都要想你一遍，所以，每个梦都是那么温暖，哪怕梦里出现妖怪我都不会害怕。”\n\n大兔子不说话，躺到床上。\n\n**想你篇~嘘…**\n\n小兔子睡着了，大兔子轻轻亲吻小兔子的额头。\n\n“每天每天，每分每秒，我都在想你，悄悄地想......”\n\n### 故事二.我爱你，要比你爱我更多更长~嘘……(*^__^*) \n\n小兔子要上床睡觉了，\n\n它紧紧抓著大兔子的长耳朵，要大兔子好好地听它说。\n\n“猜猜我有多爱你？”小兔子问。\n\n“噢！我大概猜不出来。”大兔子笑笑地说。\n\n“我爱你这么多。”小兔子把手臂张开，开得不能再开。\n\n大兔子有双更长的手臂，它张开来一比，说：“可是，我爱你这么多。”\n\n小兔子动动右耳，想：“嗯，这真的很多。”\n\n“我爱你，像我举的这么高，高得不能再高。”小兔子说，双臂用力往上撑举。\n\n“我爱你，像我举的这么高，高得不能再高。”大兔子也说。\n\n哦，小兔子想，真糟，他又比我高。\n\n小兔子又有个好主意，它把脚顶在树干上倒立了起来。它说：“我爱你到我的脚趾头这么多。”\n\n大兔子一把抓起小兔子的手，将它抛起来，飞得比它的头还高，说：“我爱你到你的脚趾头这么多。”\n\n小兔子大叫：“我爱你，一直到过了小路，在远远的河那边。”\n\n大兔子说：“我爱你，一直到过了小河，越过山的那一边。”\n\n小兔子想，那真的好远。它揉揉红红的两眼，开始困了，想不出来了；\n\n它抬头看著树丛后面那一大片的黑夜，觉得再也没有任何东西比天空更远的了。\n\n大兔子轻轻抱起频频打著呵欠的小兔子，小兔子闭上了眼睛，在进入梦乡前，喃喃说：“我爱你，从这里一直到月亮。”\n\n“噢！那么远，”大兔子说。\n\n真的非常远、非常远。\n\n大兔子轻轻将小兔子放到叶子铺成的床上，低下头来，亲亲它，祝它晚安。\n\n然后，大兔子躺在小兔子的旁边，小声地微笑著说：“我爱你，从这里一直到月亮，再绕回来。”\n\n","source":"_posts/2019-01-20-short-stories-before-bed2.markdown","raw":"---\nlayout: post\ntitle: 睡前小故事——Day 2\ndate: 2019-01-20 00:00:00 +0800\ncategories:\n- Life\ntags: \n- 睡前小故事 \n---\n\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-泊安\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/102599532)\n\n小公主喜欢上了小木匠\n\n小木匠认真的在为小公主打造梳妆台\n\n小公主托着腮趴在旁边\n\n眼里都是小星星\n\n小木匠把梳妆台做完了\n\n小公主不舍得小木匠走\n\n“可以让梳妆台有一颗粉红色的心么”\n\n“我还想要一个双层的大大的首饰盒”\n\n“还有，还有，你可以给我做一个木头的小兔子么”\n\n小木匠点点头\n\n小木匠叮叮当当做了一个呆呆的小兔子\n\n又叮叮当当做了一个漂亮的首饰盒\n\n小木匠把小兔子递给小公主小公主抱着小兔子，摸摸首饰盒\n\n“你还没有给我做粉红色的心呢”\n\n小木匠撇撇嘴\n\n“我的心已经给你了，你为什么还要心呢”\n\n小公主眨眨眼\n\n“你什么时候把心给我了”\n“你给我星星的时候”\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-乔小巴\n\n[原文链接](https://www.zhihu.com/question/36632066/answer/68468017)\n\n### 故事一.偷偷地想你~O(∩_∩)O~\n\n**吃饭篇~**\n\n大兔子和小兔子一起吃饭。小兔子捧着饭碗，对大兔子说：“想你。”\n\n“我不就在你身边吗？”大兔子说。\n\n“可我还是想你。”小兔子咂吧咂吧嘴，“我每吃一口饭都要想你一遍，所以，我的饭又香又甜，哪怕是我最不喜欢的卷心菜。”\n\n大兔子不说话，只是低着头继续吃饭。\n\n**散步篇~**\n\n大兔子和小兔子一起散步。\n\n小兔子一蹦一跳，对大兔子说：“想你。”\n\n“我不就在你身边吗？”\n\n大兔子说。“可我还是想你。”\n\n小兔子踮起脚尖，“我每走一步路都要想你一遍，所以，再长的路走起来都轻轻松松，哪怕路上满是泥泞。”\n\n大兔子不说话，只是慢悠悠地继续走路。\n\n**看月亮篇~**\n\n大兔子和小兔子坐在一起看月亮。\n\n小兔子托着下巴，对大兔子说：“想你。”\n\n“我不就在你身边吗？”大兔子说。\n\n“可我还是想你。”小兔子歪着脑袋，“我每看一眼月亮都要想你一遍，所以，月亮看上去那么美，哪怕乌云遮挡了它的光芒。”\n\n大兔子不说话，只是抬起头继续看月亮。\n\n**睡觉篇~**\n\n大兔子和小兔子该睡觉了。\n\n小兔子盖好被子，对大兔子说：“想你。”\n\n“我不就在你身边吗。”大兔子说。“可我还是想你。”小兔子闭上眼睛，“我每做一个梦都要想你一遍，所以，每个梦都是那么温暖，哪怕梦里出现妖怪我都不会害怕。”\n\n大兔子不说话，躺到床上。\n\n**想你篇~嘘…**\n\n小兔子睡着了，大兔子轻轻亲吻小兔子的额头。\n\n“每天每天，每分每秒，我都在想你，悄悄地想......”\n\n### 故事二.我爱你，要比你爱我更多更长~嘘……(*^__^*) \n\n小兔子要上床睡觉了，\n\n它紧紧抓著大兔子的长耳朵，要大兔子好好地听它说。\n\n“猜猜我有多爱你？”小兔子问。\n\n“噢！我大概猜不出来。”大兔子笑笑地说。\n\n“我爱你这么多。”小兔子把手臂张开，开得不能再开。\n\n大兔子有双更长的手臂，它张开来一比，说：“可是，我爱你这么多。”\n\n小兔子动动右耳，想：“嗯，这真的很多。”\n\n“我爱你，像我举的这么高，高得不能再高。”小兔子说，双臂用力往上撑举。\n\n“我爱你，像我举的这么高，高得不能再高。”大兔子也说。\n\n哦，小兔子想，真糟，他又比我高。\n\n小兔子又有个好主意，它把脚顶在树干上倒立了起来。它说：“我爱你到我的脚趾头这么多。”\n\n大兔子一把抓起小兔子的手，将它抛起来，飞得比它的头还高，说：“我爱你到你的脚趾头这么多。”\n\n小兔子大叫：“我爱你，一直到过了小路，在远远的河那边。”\n\n大兔子说：“我爱你，一直到过了小河，越过山的那一边。”\n\n小兔子想，那真的好远。它揉揉红红的两眼，开始困了，想不出来了；\n\n它抬头看著树丛后面那一大片的黑夜，觉得再也没有任何东西比天空更远的了。\n\n大兔子轻轻抱起频频打著呵欠的小兔子，小兔子闭上了眼睛，在进入梦乡前，喃喃说：“我爱你，从这里一直到月亮。”\n\n“噢！那么远，”大兔子说。\n\n真的非常远、非常远。\n\n大兔子轻轻将小兔子放到叶子铺成的床上，低下头来，亲亲它，祝它晚安。\n\n然后，大兔子躺在小兔子的旁边，小声地微笑著说：“我爱你，从这里一直到月亮，再绕回来。”\n\n","slug":"short-stories-before-bed2","published":1,"updated":"2019-03-04T13:07:39.111Z","comments":1,"photos":[],"link":"","_id":"cjwj070f00036m8zaobyaaerx","content":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"知乎用户-泊安\"><a href=\"#知乎用户-泊安\" class=\"headerlink\" title=\"知乎用户-泊安\"></a>知乎用户-泊安</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/102599532\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>小公主喜欢上了小木匠</p>\n<p>小木匠认真的在为小公主打造梳妆台</p>\n<p>小公主托着腮趴在旁边</p>\n<p>眼里都是小星星</p>\n<p>小木匠把梳妆台做完了</p>\n<p>小公主不舍得小木匠走</p>\n<p>“可以让梳妆台有一颗粉红色的心么”</p>\n<p>“我还想要一个双层的大大的首饰盒”</p>\n<p>“还有，还有，你可以给我做一个木头的小兔子么”</p>\n<p>小木匠点点头</p>\n<p>小木匠叮叮当当做了一个呆呆的小兔子</p>\n<p>又叮叮当当做了一个漂亮的首饰盒</p>\n<p>小木匠把小兔子递给小公主小公主抱着小兔子，摸摸首饰盒</p>\n<p>“你还没有给我做粉红色的心呢”</p>\n<p>小木匠撇撇嘴</p>\n<p>“我的心已经给你了，你为什么还要心呢”</p>\n<p>小公主眨眨眼</p>\n<p>“你什么时候把心给我了”<br>“你给我星星的时候”</p>\n<hr>\n<h2 id=\"知乎用户-乔小巴\"><a href=\"#知乎用户-乔小巴\" class=\"headerlink\" title=\"知乎用户-乔小巴\"></a>知乎用户-乔小巴</h2><p><a href=\"https://www.zhihu.com/question/36632066/answer/68468017\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<h3 id=\"故事一-偷偷地想你O-∩-∩-O\"><a href=\"#故事一-偷偷地想你O-∩-∩-O\" class=\"headerlink\" title=\"故事一.偷偷地想你O(∩_∩)O\"></a>故事一.偷偷地想你<del>O(∩_∩)O</del></h3><p><strong>吃饭篇~</strong></p>\n<p>大兔子和小兔子一起吃饭。小兔子捧着饭碗，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”大兔子说。</p>\n<p>“可我还是想你。”小兔子咂吧咂吧嘴，“我每吃一口饭都要想你一遍，所以，我的饭又香又甜，哪怕是我最不喜欢的卷心菜。”</p>\n<p>大兔子不说话，只是低着头继续吃饭。</p>\n<p><strong>散步篇~</strong></p>\n<p>大兔子和小兔子一起散步。</p>\n<p>小兔子一蹦一跳，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”</p>\n<p>大兔子说。“可我还是想你。”</p>\n<p>小兔子踮起脚尖，“我每走一步路都要想你一遍，所以，再长的路走起来都轻轻松松，哪怕路上满是泥泞。”</p>\n<p>大兔子不说话，只是慢悠悠地继续走路。</p>\n<p><strong>看月亮篇~</strong></p>\n<p>大兔子和小兔子坐在一起看月亮。</p>\n<p>小兔子托着下巴，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”大兔子说。</p>\n<p>“可我还是想你。”小兔子歪着脑袋，“我每看一眼月亮都要想你一遍，所以，月亮看上去那么美，哪怕乌云遮挡了它的光芒。”</p>\n<p>大兔子不说话，只是抬起头继续看月亮。</p>\n<p><strong>睡觉篇~</strong></p>\n<p>大兔子和小兔子该睡觉了。</p>\n<p>小兔子盖好被子，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗。”大兔子说。“可我还是想你。”小兔子闭上眼睛，“我每做一个梦都要想你一遍，所以，每个梦都是那么温暖，哪怕梦里出现妖怪我都不会害怕。”</p>\n<p>大兔子不说话，躺到床上。</p>\n<p><strong>想你篇~嘘…</strong></p>\n<p>小兔子睡着了，大兔子轻轻亲吻小兔子的额头。</p>\n<p>“每天每天，每分每秒，我都在想你，悄悄地想……”</p>\n<h3 id=\"故事二-我爱你，要比你爱我更多更长-嘘……\"><a href=\"#故事二-我爱你，要比你爱我更多更长-嘘……\" class=\"headerlink\" title=\"故事二.我爱你，要比你爱我更多更长~嘘……(^__^)\"></a>故事二.我爱你，要比你爱我更多更长~嘘……(<em>^__^</em>)</h3><p>小兔子要上床睡觉了，</p>\n<p>它紧紧抓著大兔子的长耳朵，要大兔子好好地听它说。</p>\n<p>“猜猜我有多爱你？”小兔子问。</p>\n<p>“噢！我大概猜不出来。”大兔子笑笑地说。</p>\n<p>“我爱你这么多。”小兔子把手臂张开，开得不能再开。</p>\n<p>大兔子有双更长的手臂，它张开来一比，说：“可是，我爱你这么多。”</p>\n<p>小兔子动动右耳，想：“嗯，这真的很多。”</p>\n<p>“我爱你，像我举的这么高，高得不能再高。”小兔子说，双臂用力往上撑举。</p>\n<p>“我爱你，像我举的这么高，高得不能再高。”大兔子也说。</p>\n<p>哦，小兔子想，真糟，他又比我高。</p>\n<p>小兔子又有个好主意，它把脚顶在树干上倒立了起来。它说：“我爱你到我的脚趾头这么多。”</p>\n<p>大兔子一把抓起小兔子的手，将它抛起来，飞得比它的头还高，说：“我爱你到你的脚趾头这么多。”</p>\n<p>小兔子大叫：“我爱你，一直到过了小路，在远远的河那边。”</p>\n<p>大兔子说：“我爱你，一直到过了小河，越过山的那一边。”</p>\n<p>小兔子想，那真的好远。它揉揉红红的两眼，开始困了，想不出来了；</p>\n<p>它抬头看著树丛后面那一大片的黑夜，觉得再也没有任何东西比天空更远的了。</p>\n<p>大兔子轻轻抱起频频打著呵欠的小兔子，小兔子闭上了眼睛，在进入梦乡前，喃喃说：“我爱你，从这里一直到月亮。”</p>\n<p>“噢！那么远，”大兔子说。</p>\n<p>真的非常远、非常远。</p>\n<p>大兔子轻轻将小兔子放到叶子铺成的床上，低下头来，亲亲它，祝它晚安。</p>\n<p>然后，大兔子躺在小兔子的旁边，小声地微笑著说：“我爱你，从这里一直到月亮，再绕回来。”</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>","more":"<h2 id=\"知乎用户-泊安\"><a href=\"#知乎用户-泊安\" class=\"headerlink\" title=\"知乎用户-泊安\"></a>知乎用户-泊安</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/102599532\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>小公主喜欢上了小木匠</p>\n<p>小木匠认真的在为小公主打造梳妆台</p>\n<p>小公主托着腮趴在旁边</p>\n<p>眼里都是小星星</p>\n<p>小木匠把梳妆台做完了</p>\n<p>小公主不舍得小木匠走</p>\n<p>“可以让梳妆台有一颗粉红色的心么”</p>\n<p>“我还想要一个双层的大大的首饰盒”</p>\n<p>“还有，还有，你可以给我做一个木头的小兔子么”</p>\n<p>小木匠点点头</p>\n<p>小木匠叮叮当当做了一个呆呆的小兔子</p>\n<p>又叮叮当当做了一个漂亮的首饰盒</p>\n<p>小木匠把小兔子递给小公主小公主抱着小兔子，摸摸首饰盒</p>\n<p>“你还没有给我做粉红色的心呢”</p>\n<p>小木匠撇撇嘴</p>\n<p>“我的心已经给你了，你为什么还要心呢”</p>\n<p>小公主眨眨眼</p>\n<p>“你什么时候把心给我了”<br>“你给我星星的时候”</p>\n<hr>\n<h2 id=\"知乎用户-乔小巴\"><a href=\"#知乎用户-乔小巴\" class=\"headerlink\" title=\"知乎用户-乔小巴\"></a>知乎用户-乔小巴</h2><p><a href=\"https://www.zhihu.com/question/36632066/answer/68468017\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<h3 id=\"故事一-偷偷地想你O-∩-∩-O\"><a href=\"#故事一-偷偷地想你O-∩-∩-O\" class=\"headerlink\" title=\"故事一.偷偷地想你O(∩_∩)O\"></a>故事一.偷偷地想你<del>O(∩_∩)O</del></h3><p><strong>吃饭篇~</strong></p>\n<p>大兔子和小兔子一起吃饭。小兔子捧着饭碗，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”大兔子说。</p>\n<p>“可我还是想你。”小兔子咂吧咂吧嘴，“我每吃一口饭都要想你一遍，所以，我的饭又香又甜，哪怕是我最不喜欢的卷心菜。”</p>\n<p>大兔子不说话，只是低着头继续吃饭。</p>\n<p><strong>散步篇~</strong></p>\n<p>大兔子和小兔子一起散步。</p>\n<p>小兔子一蹦一跳，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”</p>\n<p>大兔子说。“可我还是想你。”</p>\n<p>小兔子踮起脚尖，“我每走一步路都要想你一遍，所以，再长的路走起来都轻轻松松，哪怕路上满是泥泞。”</p>\n<p>大兔子不说话，只是慢悠悠地继续走路。</p>\n<p><strong>看月亮篇~</strong></p>\n<p>大兔子和小兔子坐在一起看月亮。</p>\n<p>小兔子托着下巴，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗？”大兔子说。</p>\n<p>“可我还是想你。”小兔子歪着脑袋，“我每看一眼月亮都要想你一遍，所以，月亮看上去那么美，哪怕乌云遮挡了它的光芒。”</p>\n<p>大兔子不说话，只是抬起头继续看月亮。</p>\n<p><strong>睡觉篇~</strong></p>\n<p>大兔子和小兔子该睡觉了。</p>\n<p>小兔子盖好被子，对大兔子说：“想你。”</p>\n<p>“我不就在你身边吗。”大兔子说。“可我还是想你。”小兔子闭上眼睛，“我每做一个梦都要想你一遍，所以，每个梦都是那么温暖，哪怕梦里出现妖怪我都不会害怕。”</p>\n<p>大兔子不说话，躺到床上。</p>\n<p><strong>想你篇~嘘…</strong></p>\n<p>小兔子睡着了，大兔子轻轻亲吻小兔子的额头。</p>\n<p>“每天每天，每分每秒，我都在想你，悄悄地想……”</p>\n<h3 id=\"故事二-我爱你，要比你爱我更多更长-嘘……\"><a href=\"#故事二-我爱你，要比你爱我更多更长-嘘……\" class=\"headerlink\" title=\"故事二.我爱你，要比你爱我更多更长~嘘……(^__^)\"></a>故事二.我爱你，要比你爱我更多更长~嘘……(<em>^__^</em>)</h3><p>小兔子要上床睡觉了，</p>\n<p>它紧紧抓著大兔子的长耳朵，要大兔子好好地听它说。</p>\n<p>“猜猜我有多爱你？”小兔子问。</p>\n<p>“噢！我大概猜不出来。”大兔子笑笑地说。</p>\n<p>“我爱你这么多。”小兔子把手臂张开，开得不能再开。</p>\n<p>大兔子有双更长的手臂，它张开来一比，说：“可是，我爱你这么多。”</p>\n<p>小兔子动动右耳，想：“嗯，这真的很多。”</p>\n<p>“我爱你，像我举的这么高，高得不能再高。”小兔子说，双臂用力往上撑举。</p>\n<p>“我爱你，像我举的这么高，高得不能再高。”大兔子也说。</p>\n<p>哦，小兔子想，真糟，他又比我高。</p>\n<p>小兔子又有个好主意，它把脚顶在树干上倒立了起来。它说：“我爱你到我的脚趾头这么多。”</p>\n<p>大兔子一把抓起小兔子的手，将它抛起来，飞得比它的头还高，说：“我爱你到你的脚趾头这么多。”</p>\n<p>小兔子大叫：“我爱你，一直到过了小路，在远远的河那边。”</p>\n<p>大兔子说：“我爱你，一直到过了小河，越过山的那一边。”</p>\n<p>小兔子想，那真的好远。它揉揉红红的两眼，开始困了，想不出来了；</p>\n<p>它抬头看著树丛后面那一大片的黑夜，觉得再也没有任何东西比天空更远的了。</p>\n<p>大兔子轻轻抱起频频打著呵欠的小兔子，小兔子闭上了眼睛，在进入梦乡前，喃喃说：“我爱你，从这里一直到月亮。”</p>\n<p>“噢！那么远，”大兔子说。</p>\n<p>真的非常远、非常远。</p>\n<p>大兔子轻轻将小兔子放到叶子铺成的床上，低下头来，亲亲它，祝它晚安。</p>\n<p>然后，大兔子躺在小兔子的旁边，小声地微笑著说：“我爱你，从这里一直到月亮，再绕回来。”</p>"},{"layout":"post","title":"睡前小故事——Day 4","date":"2019-01-23T00:00:00.000Z","_content":"\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-行歌\n[原文链接](https://www.zhihu.com/question/59017055/answer/182887133)\n\n**一、**\n\n嘎嘣豆是宠物店里最调皮的仓鼠。\n\n它每天晚上都能悄悄的打开自己的笼子逃出来，跑到嘎嘣脆的笼子里一头拱进食盒里大吃特吃。\n\n嘎嘣脆是宠物店里最不爱动弹的猫。\n\n它每天只干三件事，吃饭，睡觉，看嘎嘣豆吃它的猫粮。\n\n**二、**\n\n“我很想知道，老板是不给你饭吃吗？”某天晚上嘎嘣脆看着挣扎在猫粮里的嘎嘣豆，一脸同情。\n\n“当然不是！”嘎嘣豆挥舞着小短腿费了半天的功夫才从食盒里坐起来，“我只是很喜欢猫粮的味道好的吧。”\n\n“所以你吃成了一个球。”嘎嘣脆一脸嫌弃的伸出他高贵的猫爪子，戳了戳他圆滚滚的肚子。\n\n**三、**\n\n嘎嘣脆是宠物店里最挑食的猫，他不喜欢吃一粒一粒硬邦邦的猫粮。\n\n“廉价的混合物配不上我高贵的胃。”\n\n这是他的原话，虽然他说完之后遭到了隔壁英短无情的嘲笑。但是，王要有王的尊严，也要有王的气度。\n\n所以嘎嘣脆也不屑于计较，但是因为挑食他一天到晚都懒洋洋的，毛也没有光泽。\n\n来店里买猫的顾客走了一拨又一拨，身为高贵的布偶猫他却迟迟没能被挑中。\n\n“这只猫不会得了什么病吧？”顾客跟店员窃窃私语。\n\n**四、**\n\n嘎嘣豆是宠物店最调皮的仓鼠。\n\n自从他学会了越狱，每天晚上就孜孜不倦的去拜访隔壁，美其名曰增进感情。\n\n他去吃嘎嘣脆的猫粮是有代价的，他把一条条的小鱼干鱿鱼干拖进嘎嘣脆的笼子里，好进行平等的交流互换。\n\n嘎嘣脆在天天夜宵的滋补下精神见好，毛也逐渐变得光滑。\n\n**五、**\n\n嘎嘣豆是宠物店里最胖的仓鼠。\n\n嘎嘣脆是宠物店里最漂亮的猫。\n\n“都说了给它少喂一点！怎么还是这么胖！”\n\n嘎嘣豆依然天天晚上过来吃猫粮，只是吃完之后要回去多跑几遍跑轮。\n\n嘎嘣脆咬着小鱼干忍不住问他：“跑跑轮累不累呀？”\n\n“嘿呀都累死鼠了。”嘎嘣豆躺在食盒里，四只小爪伸展开瘫成一个大字。\n\n“什么时候他们能给你你换一个口味的猫粮啊，我吃的都要吐了呢。”嘎嘣豆捂着自己鼓鼓的腮帮子，叹了口气。\n\n**六、**\n\n嘎嘣豆从那一天开始再也不过去吃猫粮了。\n\n因为嘎嘣脆伸出他的桌子拍了拍嘎嘣豆的头。\n\n“那个，老鼠，你说实话，你是不是根本不喜欢吃猫粮。”\n\n“不要叫我老鼠！我是仓鼠！仓鼠！仓鼠！而且我有名字！嘎嘣豆！”\n\n“额……好吧……嘎嘣豆。。”\n\n暴跳如雷的小仓鼠叉着腰瞪着他：“这还差不多……猫粮……猫粮还好吧。。”\n\n嘎嘣脆若有所思：“他们是不是说我不吃饭肯定是得病了要关起来？”\n\n小仓鼠不说话，瞪着黑色的小眼珠看着他拼命的眨。\n\n**七、**\n\n嘎嘣豆一直是一只乖巧的小仓鼠，他懂事以来的日常就是越狱和欺负不爱吃饭的病猫嘎嘣脆，有一次他好奇尝了一口猫粮，咸滋滋，好难吃。\n\n直到有一天他越狱跑到休息室，听到老板说，那只病歪歪的猫再不见好就先关到后院吧。\n\n噫，后院都是攻击性强没人肯要的宠物，嘎嘣豆打了个哆嗦。\n\n那一天开始嘎嘣豆开始费尽心思的去偷储藏室里的小鱼干给嘎嘣脆吃，顺便要消灭他挑食的证据，一大碗猫粮也要毁尸灭迹。\n\n怎么办呢，只能吃掉。\n\n**八、**\n\n嘎嘣脆终于改掉了挑食的坏毛病，他越来越健康，长的也更加漂亮，店主开心的要拿小鱼干奖励它，打开柜子却发现里面空荡荡。\n\n真傻。\n\n嘎嘣豆隔着笼子，对他挤眉弄眼的笑。\n\n![](https://pic4.zhimg.com/80/v2-8ff3a0e1b2ca5bd7f3e5a0c2bdfb74ef_hd.jpg)\n\n> 特别喜欢这个系列的仓鼠嘤嘤嘤\n\n![](https://pic2.zhimg.com/80/v2-582f4926eaca6725abf134a2b60cfe49_hd.jpg)\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-挽挽酱\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/211044928)\n\n一个女孩让我帮她寄快递，\n\n给了我一个空纸箱让我打包。\n\n我好奇的问她:\n\n\"这是寄给谁的?\"\n\n她说:\"喜欢很久的男生。\"\n我懵了一下:\n\n\"可是里面没有东西啊。\"\n\n她说:\"有些东西，只有我自己能看见。\"\n\n我一听更懵逼了，\n\n神秘地问她到底是什么。\n\n她说:\"一箱情愿。\"\n\n后来，\n\n男生把一个箱子还给了她。\n\n两箱情愿，一箱欢喜。\n\n> Best wishes！( ´罒`*)✧\"\n\n\n","source":"_posts/2019-01-23-short-stories-before-bed4.markdown","raw":"---\nlayout: post\ntitle: 睡前小故事——Day 4\ndate: 2019-01-23 00:00:00 +0800\ncategories:\n- Life\ntags: \n- 睡前小故事 \n---\n\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-行歌\n[原文链接](https://www.zhihu.com/question/59017055/answer/182887133)\n\n**一、**\n\n嘎嘣豆是宠物店里最调皮的仓鼠。\n\n它每天晚上都能悄悄的打开自己的笼子逃出来，跑到嘎嘣脆的笼子里一头拱进食盒里大吃特吃。\n\n嘎嘣脆是宠物店里最不爱动弹的猫。\n\n它每天只干三件事，吃饭，睡觉，看嘎嘣豆吃它的猫粮。\n\n**二、**\n\n“我很想知道，老板是不给你饭吃吗？”某天晚上嘎嘣脆看着挣扎在猫粮里的嘎嘣豆，一脸同情。\n\n“当然不是！”嘎嘣豆挥舞着小短腿费了半天的功夫才从食盒里坐起来，“我只是很喜欢猫粮的味道好的吧。”\n\n“所以你吃成了一个球。”嘎嘣脆一脸嫌弃的伸出他高贵的猫爪子，戳了戳他圆滚滚的肚子。\n\n**三、**\n\n嘎嘣脆是宠物店里最挑食的猫，他不喜欢吃一粒一粒硬邦邦的猫粮。\n\n“廉价的混合物配不上我高贵的胃。”\n\n这是他的原话，虽然他说完之后遭到了隔壁英短无情的嘲笑。但是，王要有王的尊严，也要有王的气度。\n\n所以嘎嘣脆也不屑于计较，但是因为挑食他一天到晚都懒洋洋的，毛也没有光泽。\n\n来店里买猫的顾客走了一拨又一拨，身为高贵的布偶猫他却迟迟没能被挑中。\n\n“这只猫不会得了什么病吧？”顾客跟店员窃窃私语。\n\n**四、**\n\n嘎嘣豆是宠物店最调皮的仓鼠。\n\n自从他学会了越狱，每天晚上就孜孜不倦的去拜访隔壁，美其名曰增进感情。\n\n他去吃嘎嘣脆的猫粮是有代价的，他把一条条的小鱼干鱿鱼干拖进嘎嘣脆的笼子里，好进行平等的交流互换。\n\n嘎嘣脆在天天夜宵的滋补下精神见好，毛也逐渐变得光滑。\n\n**五、**\n\n嘎嘣豆是宠物店里最胖的仓鼠。\n\n嘎嘣脆是宠物店里最漂亮的猫。\n\n“都说了给它少喂一点！怎么还是这么胖！”\n\n嘎嘣豆依然天天晚上过来吃猫粮，只是吃完之后要回去多跑几遍跑轮。\n\n嘎嘣脆咬着小鱼干忍不住问他：“跑跑轮累不累呀？”\n\n“嘿呀都累死鼠了。”嘎嘣豆躺在食盒里，四只小爪伸展开瘫成一个大字。\n\n“什么时候他们能给你你换一个口味的猫粮啊，我吃的都要吐了呢。”嘎嘣豆捂着自己鼓鼓的腮帮子，叹了口气。\n\n**六、**\n\n嘎嘣豆从那一天开始再也不过去吃猫粮了。\n\n因为嘎嘣脆伸出他的桌子拍了拍嘎嘣豆的头。\n\n“那个，老鼠，你说实话，你是不是根本不喜欢吃猫粮。”\n\n“不要叫我老鼠！我是仓鼠！仓鼠！仓鼠！而且我有名字！嘎嘣豆！”\n\n“额……好吧……嘎嘣豆。。”\n\n暴跳如雷的小仓鼠叉着腰瞪着他：“这还差不多……猫粮……猫粮还好吧。。”\n\n嘎嘣脆若有所思：“他们是不是说我不吃饭肯定是得病了要关起来？”\n\n小仓鼠不说话，瞪着黑色的小眼珠看着他拼命的眨。\n\n**七、**\n\n嘎嘣豆一直是一只乖巧的小仓鼠，他懂事以来的日常就是越狱和欺负不爱吃饭的病猫嘎嘣脆，有一次他好奇尝了一口猫粮，咸滋滋，好难吃。\n\n直到有一天他越狱跑到休息室，听到老板说，那只病歪歪的猫再不见好就先关到后院吧。\n\n噫，后院都是攻击性强没人肯要的宠物，嘎嘣豆打了个哆嗦。\n\n那一天开始嘎嘣豆开始费尽心思的去偷储藏室里的小鱼干给嘎嘣脆吃，顺便要消灭他挑食的证据，一大碗猫粮也要毁尸灭迹。\n\n怎么办呢，只能吃掉。\n\n**八、**\n\n嘎嘣脆终于改掉了挑食的坏毛病，他越来越健康，长的也更加漂亮，店主开心的要拿小鱼干奖励它，打开柜子却发现里面空荡荡。\n\n真傻。\n\n嘎嘣豆隔着笼子，对他挤眉弄眼的笑。\n\n![](https://pic4.zhimg.com/80/v2-8ff3a0e1b2ca5bd7f3e5a0c2bdfb74ef_hd.jpg)\n\n> 特别喜欢这个系列的仓鼠嘤嘤嘤\n\n![](https://pic2.zhimg.com/80/v2-582f4926eaca6725abf134a2b60cfe49_hd.jpg)\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-挽挽酱\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/211044928)\n\n一个女孩让我帮她寄快递，\n\n给了我一个空纸箱让我打包。\n\n我好奇的问她:\n\n\"这是寄给谁的?\"\n\n她说:\"喜欢很久的男生。\"\n我懵了一下:\n\n\"可是里面没有东西啊。\"\n\n她说:\"有些东西，只有我自己能看见。\"\n\n我一听更懵逼了，\n\n神秘地问她到底是什么。\n\n她说:\"一箱情愿。\"\n\n后来，\n\n男生把一个箱子还给了她。\n\n两箱情愿，一箱欢喜。\n\n> Best wishes！( ´罒`*)✧\"\n\n\n","slug":"short-stories-before-bed4","published":1,"updated":"2019-03-04T13:07:39.111Z","comments":1,"photos":[],"link":"","_id":"cjwj070f30039m8zaffuk2s85","content":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"知乎用户-行歌\"><a href=\"#知乎用户-行歌\" class=\"headerlink\" title=\"知乎用户-行歌\"></a>知乎用户-行歌</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/182887133\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>一、</strong></p>\n<p>嘎嘣豆是宠物店里最调皮的仓鼠。</p>\n<p>它每天晚上都能悄悄的打开自己的笼子逃出来，跑到嘎嘣脆的笼子里一头拱进食盒里大吃特吃。</p>\n<p>嘎嘣脆是宠物店里最不爱动弹的猫。</p>\n<p>它每天只干三件事，吃饭，睡觉，看嘎嘣豆吃它的猫粮。</p>\n<p><strong>二、</strong></p>\n<p>“我很想知道，老板是不给你饭吃吗？”某天晚上嘎嘣脆看着挣扎在猫粮里的嘎嘣豆，一脸同情。</p>\n<p>“当然不是！”嘎嘣豆挥舞着小短腿费了半天的功夫才从食盒里坐起来，“我只是很喜欢猫粮的味道好的吧。”</p>\n<p>“所以你吃成了一个球。”嘎嘣脆一脸嫌弃的伸出他高贵的猫爪子，戳了戳他圆滚滚的肚子。</p>\n<p><strong>三、</strong></p>\n<p>嘎嘣脆是宠物店里最挑食的猫，他不喜欢吃一粒一粒硬邦邦的猫粮。</p>\n<p>“廉价的混合物配不上我高贵的胃。”</p>\n<p>这是他的原话，虽然他说完之后遭到了隔壁英短无情的嘲笑。但是，王要有王的尊严，也要有王的气度。</p>\n<p>所以嘎嘣脆也不屑于计较，但是因为挑食他一天到晚都懒洋洋的，毛也没有光泽。</p>\n<p>来店里买猫的顾客走了一拨又一拨，身为高贵的布偶猫他却迟迟没能被挑中。</p>\n<p>“这只猫不会得了什么病吧？”顾客跟店员窃窃私语。</p>\n<p><strong>四、</strong></p>\n<p>嘎嘣豆是宠物店最调皮的仓鼠。</p>\n<p>自从他学会了越狱，每天晚上就孜孜不倦的去拜访隔壁，美其名曰增进感情。</p>\n<p>他去吃嘎嘣脆的猫粮是有代价的，他把一条条的小鱼干鱿鱼干拖进嘎嘣脆的笼子里，好进行平等的交流互换。</p>\n<p>嘎嘣脆在天天夜宵的滋补下精神见好，毛也逐渐变得光滑。</p>\n<p><strong>五、</strong></p>\n<p>嘎嘣豆是宠物店里最胖的仓鼠。</p>\n<p>嘎嘣脆是宠物店里最漂亮的猫。</p>\n<p>“都说了给它少喂一点！怎么还是这么胖！”</p>\n<p>嘎嘣豆依然天天晚上过来吃猫粮，只是吃完之后要回去多跑几遍跑轮。</p>\n<p>嘎嘣脆咬着小鱼干忍不住问他：“跑跑轮累不累呀？”</p>\n<p>“嘿呀都累死鼠了。”嘎嘣豆躺在食盒里，四只小爪伸展开瘫成一个大字。</p>\n<p>“什么时候他们能给你你换一个口味的猫粮啊，我吃的都要吐了呢。”嘎嘣豆捂着自己鼓鼓的腮帮子，叹了口气。</p>\n<p><strong>六、</strong></p>\n<p>嘎嘣豆从那一天开始再也不过去吃猫粮了。</p>\n<p>因为嘎嘣脆伸出他的桌子拍了拍嘎嘣豆的头。</p>\n<p>“那个，老鼠，你说实话，你是不是根本不喜欢吃猫粮。”</p>\n<p>“不要叫我老鼠！我是仓鼠！仓鼠！仓鼠！而且我有名字！嘎嘣豆！”</p>\n<p>“额……好吧……嘎嘣豆。。”</p>\n<p>暴跳如雷的小仓鼠叉着腰瞪着他：“这还差不多……猫粮……猫粮还好吧。。”</p>\n<p>嘎嘣脆若有所思：“他们是不是说我不吃饭肯定是得病了要关起来？”</p>\n<p>小仓鼠不说话，瞪着黑色的小眼珠看着他拼命的眨。</p>\n<p><strong>七、</strong></p>\n<p>嘎嘣豆一直是一只乖巧的小仓鼠，他懂事以来的日常就是越狱和欺负不爱吃饭的病猫嘎嘣脆，有一次他好奇尝了一口猫粮，咸滋滋，好难吃。</p>\n<p>直到有一天他越狱跑到休息室，听到老板说，那只病歪歪的猫再不见好就先关到后院吧。</p>\n<p>噫，后院都是攻击性强没人肯要的宠物，嘎嘣豆打了个哆嗦。</p>\n<p>那一天开始嘎嘣豆开始费尽心思的去偷储藏室里的小鱼干给嘎嘣脆吃，顺便要消灭他挑食的证据，一大碗猫粮也要毁尸灭迹。</p>\n<p>怎么办呢，只能吃掉。</p>\n<p><strong>八、</strong></p>\n<p>嘎嘣脆终于改掉了挑食的坏毛病，他越来越健康，长的也更加漂亮，店主开心的要拿小鱼干奖励它，打开柜子却发现里面空荡荡。</p>\n<p>真傻。</p>\n<p>嘎嘣豆隔着笼子，对他挤眉弄眼的笑。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-8ff3a0e1b2ca5bd7f3e5a0c2bdfb74ef_hd.jpg\" alt></p>\n<blockquote>\n<p>特别喜欢这个系列的仓鼠嘤嘤嘤</p>\n</blockquote>\n<p><img src=\"https://pic2.zhimg.com/80/v2-582f4926eaca6725abf134a2b60cfe49_hd.jpg\" alt></p>\n<hr>\n<h2 id=\"知乎用户-挽挽酱\"><a href=\"#知乎用户-挽挽酱\" class=\"headerlink\" title=\"知乎用户-挽挽酱\"></a>知乎用户-挽挽酱</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/211044928\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>一个女孩让我帮她寄快递，</p>\n<p>给了我一个空纸箱让我打包。</p>\n<p>我好奇的问她:</p>\n<p>“这是寄给谁的?”</p>\n<p>她说:”喜欢很久的男生。”<br>我懵了一下:</p>\n<p>“可是里面没有东西啊。”</p>\n<p>她说:”有些东西，只有我自己能看见。”</p>\n<p>我一听更懵逼了，</p>\n<p>神秘地问她到底是什么。</p>\n<p>她说:”一箱情愿。”</p>\n<p>后来，</p>\n<p>男生把一个箱子还给了她。</p>\n<p>两箱情愿，一箱欢喜。</p>\n<blockquote>\n<p>Best wishes！( ´罒`*)✧”</p>\n</blockquote>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>","more":"<h2 id=\"知乎用户-行歌\"><a href=\"#知乎用户-行歌\" class=\"headerlink\" title=\"知乎用户-行歌\"></a>知乎用户-行歌</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/182887133\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>一、</strong></p>\n<p>嘎嘣豆是宠物店里最调皮的仓鼠。</p>\n<p>它每天晚上都能悄悄的打开自己的笼子逃出来，跑到嘎嘣脆的笼子里一头拱进食盒里大吃特吃。</p>\n<p>嘎嘣脆是宠物店里最不爱动弹的猫。</p>\n<p>它每天只干三件事，吃饭，睡觉，看嘎嘣豆吃它的猫粮。</p>\n<p><strong>二、</strong></p>\n<p>“我很想知道，老板是不给你饭吃吗？”某天晚上嘎嘣脆看着挣扎在猫粮里的嘎嘣豆，一脸同情。</p>\n<p>“当然不是！”嘎嘣豆挥舞着小短腿费了半天的功夫才从食盒里坐起来，“我只是很喜欢猫粮的味道好的吧。”</p>\n<p>“所以你吃成了一个球。”嘎嘣脆一脸嫌弃的伸出他高贵的猫爪子，戳了戳他圆滚滚的肚子。</p>\n<p><strong>三、</strong></p>\n<p>嘎嘣脆是宠物店里最挑食的猫，他不喜欢吃一粒一粒硬邦邦的猫粮。</p>\n<p>“廉价的混合物配不上我高贵的胃。”</p>\n<p>这是他的原话，虽然他说完之后遭到了隔壁英短无情的嘲笑。但是，王要有王的尊严，也要有王的气度。</p>\n<p>所以嘎嘣脆也不屑于计较，但是因为挑食他一天到晚都懒洋洋的，毛也没有光泽。</p>\n<p>来店里买猫的顾客走了一拨又一拨，身为高贵的布偶猫他却迟迟没能被挑中。</p>\n<p>“这只猫不会得了什么病吧？”顾客跟店员窃窃私语。</p>\n<p><strong>四、</strong></p>\n<p>嘎嘣豆是宠物店最调皮的仓鼠。</p>\n<p>自从他学会了越狱，每天晚上就孜孜不倦的去拜访隔壁，美其名曰增进感情。</p>\n<p>他去吃嘎嘣脆的猫粮是有代价的，他把一条条的小鱼干鱿鱼干拖进嘎嘣脆的笼子里，好进行平等的交流互换。</p>\n<p>嘎嘣脆在天天夜宵的滋补下精神见好，毛也逐渐变得光滑。</p>\n<p><strong>五、</strong></p>\n<p>嘎嘣豆是宠物店里最胖的仓鼠。</p>\n<p>嘎嘣脆是宠物店里最漂亮的猫。</p>\n<p>“都说了给它少喂一点！怎么还是这么胖！”</p>\n<p>嘎嘣豆依然天天晚上过来吃猫粮，只是吃完之后要回去多跑几遍跑轮。</p>\n<p>嘎嘣脆咬着小鱼干忍不住问他：“跑跑轮累不累呀？”</p>\n<p>“嘿呀都累死鼠了。”嘎嘣豆躺在食盒里，四只小爪伸展开瘫成一个大字。</p>\n<p>“什么时候他们能给你你换一个口味的猫粮啊，我吃的都要吐了呢。”嘎嘣豆捂着自己鼓鼓的腮帮子，叹了口气。</p>\n<p><strong>六、</strong></p>\n<p>嘎嘣豆从那一天开始再也不过去吃猫粮了。</p>\n<p>因为嘎嘣脆伸出他的桌子拍了拍嘎嘣豆的头。</p>\n<p>“那个，老鼠，你说实话，你是不是根本不喜欢吃猫粮。”</p>\n<p>“不要叫我老鼠！我是仓鼠！仓鼠！仓鼠！而且我有名字！嘎嘣豆！”</p>\n<p>“额……好吧……嘎嘣豆。。”</p>\n<p>暴跳如雷的小仓鼠叉着腰瞪着他：“这还差不多……猫粮……猫粮还好吧。。”</p>\n<p>嘎嘣脆若有所思：“他们是不是说我不吃饭肯定是得病了要关起来？”</p>\n<p>小仓鼠不说话，瞪着黑色的小眼珠看着他拼命的眨。</p>\n<p><strong>七、</strong></p>\n<p>嘎嘣豆一直是一只乖巧的小仓鼠，他懂事以来的日常就是越狱和欺负不爱吃饭的病猫嘎嘣脆，有一次他好奇尝了一口猫粮，咸滋滋，好难吃。</p>\n<p>直到有一天他越狱跑到休息室，听到老板说，那只病歪歪的猫再不见好就先关到后院吧。</p>\n<p>噫，后院都是攻击性强没人肯要的宠物，嘎嘣豆打了个哆嗦。</p>\n<p>那一天开始嘎嘣豆开始费尽心思的去偷储藏室里的小鱼干给嘎嘣脆吃，顺便要消灭他挑食的证据，一大碗猫粮也要毁尸灭迹。</p>\n<p>怎么办呢，只能吃掉。</p>\n<p><strong>八、</strong></p>\n<p>嘎嘣脆终于改掉了挑食的坏毛病，他越来越健康，长的也更加漂亮，店主开心的要拿小鱼干奖励它，打开柜子却发现里面空荡荡。</p>\n<p>真傻。</p>\n<p>嘎嘣豆隔着笼子，对他挤眉弄眼的笑。</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-8ff3a0e1b2ca5bd7f3e5a0c2bdfb74ef_hd.jpg\" alt></p>\n<blockquote>\n<p>特别喜欢这个系列的仓鼠嘤嘤嘤</p>\n</blockquote>\n<p><img src=\"https://pic2.zhimg.com/80/v2-582f4926eaca6725abf134a2b60cfe49_hd.jpg\" alt></p>\n<hr>\n<h2 id=\"知乎用户-挽挽酱\"><a href=\"#知乎用户-挽挽酱\" class=\"headerlink\" title=\"知乎用户-挽挽酱\"></a>知乎用户-挽挽酱</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/211044928\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>一个女孩让我帮她寄快递，</p>\n<p>给了我一个空纸箱让我打包。</p>\n<p>我好奇的问她:</p>\n<p>“这是寄给谁的?”</p>\n<p>她说:”喜欢很久的男生。”<br>我懵了一下:</p>\n<p>“可是里面没有东西啊。”</p>\n<p>她说:”有些东西，只有我自己能看见。”</p>\n<p>我一听更懵逼了，</p>\n<p>神秘地问她到底是什么。</p>\n<p>她说:”一箱情愿。”</p>\n<p>后来，</p>\n<p>男生把一个箱子还给了她。</p>\n<p>两箱情愿，一箱欢喜。</p>\n<blockquote>\n<p>Best wishes！( ´罒`*)✧”</p>\n</blockquote>"},{"layout":"post","title":"睡前小故事——Day 3","date":"2019-01-22T00:00:00.000Z","_content":"\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-Wangshiyin\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/210115111)\n\n**1.**\n\n有一天，小鱼问大鱼：大…鱼…大…鱼，你…喜…欢…吃…什…么…样…的…小…鱼…呀…？\n\n大鱼说：我…喜…欢…吃…讲话…慢…的…小…鱼…，\n\n小鱼说：哦我造了。\n\n**2.**\n\n两只小蜜蜂呀。飞到花丛中。一只飞得高，一只飞得低。\n\n飞得高的那只对飞得低的那只说：“你这只low bee”\n\n**3.**\n\n为什么海水是蓝色的呀。\n\n因为海洋里有很多小鱼\n\n它们会：blue blue blue ～\n\n-------------------------------------------------------------------\n\n## 知乎用户-关山月\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/219229734)\n\n> (◕ˇ∀ˇ◕)谢谢大家捧场。。\n\n**1.**\n\n有一个长得特别胖的柠檬，别的柠檬都是椭圆的，尖尖的，可是他却特别圆，跟小和尚的头似的。\n\n他特别的苦恼！于是每天不喝水，不吃饭的减肥，想把自己饿瘦成别的柠檬的样子。\n\n但是到了别的柠檬都变黄了，成熟了，他还是那么胖\n\n于是他就等啊等饿啊饿，立志把自己饿得那么瘦才成熟。\n\n直到很久很久以后。。他才发现。。。自己。。。原来。。。是个柚子(≖_≖ )\n\n**2.**\n\n她偷偷用小号拜了男神为师父\n\n整天问他\n\n“师父，我该把眼插在哪？”\n\n“师父，我该什么时候放大？”\n\n男神不太懂辅助位置怎么打，每次都支支吾吾打发过去。\n\n直到有一天，她问了好多问题男神糊弄不过去了，就说，“徒儿你等等，我问问你师娘。”\n\n这一刻她觉得自己竟卑微的可怜。\n\n没过多久QQ大号响起\n\n是男神问她\n\n“在吗？那个。。你会玩辅助吗。。？”\n\n**3.**\n\n有个小仙女喜欢把云朵捏成各种各样的形状\n\n这天她捏出了一群动物花草，却又突然一挥手把他们打散了\n\n路过的蝴蝶问她:\n\n “你为什么不开心啊？” \n \n仙女说:\n \n “没有朋友和我一起玩。” \n \n蝴蝶说:\n \n “管风的小神仙喜欢你很久了” \n \n仙女奇怪的问：\n \n “你怎么知道？”\n \n蝴蝶默默的笑着说： \n  \n  “要不你以为你每次捏云朵的时候，为什么从来没有破坏的风”( ﹡ˆoˆ﹡ )\n\n**4.**\n\n![](https://pic3.zhimg.com/80/v2-68c90cd4b904479a87ba7471946cfaae_hd.jpg)\n\n**5.**\n\n![](https://pic3.zhimg.com/80/v2-786e79e002767dff3c4cdf94db8d9dbe_hd.jpg)\n\n**6.**\n\n![](https://pic3.zhimg.com/80/v2-057dc3d307cc5a7a300b9f583bc08eee_hd.jpg)\n\n**7.**\n\n![](https://pic4.zhimg.com/80/v2-5ffd4bd027a13884d8fb0ab9290544a7_hd.jpg)\n\n**8.**\n\n![](https://pic4.zhimg.com/80/v2-4afde27c560ece5b92561678899d46f7_hd.jpg)\n\n**9.**\n\n![](https://pic1.zhimg.com/80/v2-4a9fd53f83efb8f5d375b3688a1f915c_hd.jpg)\n\n> **唉。。差点忘记说了(⋟﹏⋞)故事来源于网络且是多年收藏，图片呢来自微博，已经是规范转载了！那就请各位小可爱们！别再举报了！做人！要厚道呀！**\n\n>喜欢吗?。。\n>喜欢。。。","source":"_posts/2019-01-22-short-stories-before-bed3.markdown","raw":"---\nlayout: post\ntitle: 睡前小故事——Day 3\ndate: 2019-01-22 00:00:00 +0800\ncategories:\n- Life\ntags: \n- 睡前小故事 \n---\n\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-Wangshiyin\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/210115111)\n\n**1.**\n\n有一天，小鱼问大鱼：大…鱼…大…鱼，你…喜…欢…吃…什…么…样…的…小…鱼…呀…？\n\n大鱼说：我…喜…欢…吃…讲话…慢…的…小…鱼…，\n\n小鱼说：哦我造了。\n\n**2.**\n\n两只小蜜蜂呀。飞到花丛中。一只飞得高，一只飞得低。\n\n飞得高的那只对飞得低的那只说：“你这只low bee”\n\n**3.**\n\n为什么海水是蓝色的呀。\n\n因为海洋里有很多小鱼\n\n它们会：blue blue blue ～\n\n-------------------------------------------------------------------\n\n## 知乎用户-关山月\n\n[原文链接](https://www.zhihu.com/question/59017055/answer/219229734)\n\n> (◕ˇ∀ˇ◕)谢谢大家捧场。。\n\n**1.**\n\n有一个长得特别胖的柠檬，别的柠檬都是椭圆的，尖尖的，可是他却特别圆，跟小和尚的头似的。\n\n他特别的苦恼！于是每天不喝水，不吃饭的减肥，想把自己饿瘦成别的柠檬的样子。\n\n但是到了别的柠檬都变黄了，成熟了，他还是那么胖\n\n于是他就等啊等饿啊饿，立志把自己饿得那么瘦才成熟。\n\n直到很久很久以后。。他才发现。。。自己。。。原来。。。是个柚子(≖_≖ )\n\n**2.**\n\n她偷偷用小号拜了男神为师父\n\n整天问他\n\n“师父，我该把眼插在哪？”\n\n“师父，我该什么时候放大？”\n\n男神不太懂辅助位置怎么打，每次都支支吾吾打发过去。\n\n直到有一天，她问了好多问题男神糊弄不过去了，就说，“徒儿你等等，我问问你师娘。”\n\n这一刻她觉得自己竟卑微的可怜。\n\n没过多久QQ大号响起\n\n是男神问她\n\n“在吗？那个。。你会玩辅助吗。。？”\n\n**3.**\n\n有个小仙女喜欢把云朵捏成各种各样的形状\n\n这天她捏出了一群动物花草，却又突然一挥手把他们打散了\n\n路过的蝴蝶问她:\n\n “你为什么不开心啊？” \n \n仙女说:\n \n “没有朋友和我一起玩。” \n \n蝴蝶说:\n \n “管风的小神仙喜欢你很久了” \n \n仙女奇怪的问：\n \n “你怎么知道？”\n \n蝴蝶默默的笑着说： \n  \n  “要不你以为你每次捏云朵的时候，为什么从来没有破坏的风”( ﹡ˆoˆ﹡ )\n\n**4.**\n\n![](https://pic3.zhimg.com/80/v2-68c90cd4b904479a87ba7471946cfaae_hd.jpg)\n\n**5.**\n\n![](https://pic3.zhimg.com/80/v2-786e79e002767dff3c4cdf94db8d9dbe_hd.jpg)\n\n**6.**\n\n![](https://pic3.zhimg.com/80/v2-057dc3d307cc5a7a300b9f583bc08eee_hd.jpg)\n\n**7.**\n\n![](https://pic4.zhimg.com/80/v2-5ffd4bd027a13884d8fb0ab9290544a7_hd.jpg)\n\n**8.**\n\n![](https://pic4.zhimg.com/80/v2-4afde27c560ece5b92561678899d46f7_hd.jpg)\n\n**9.**\n\n![](https://pic1.zhimg.com/80/v2-4a9fd53f83efb8f5d375b3688a1f915c_hd.jpg)\n\n> **唉。。差点忘记说了(⋟﹏⋞)故事来源于网络且是多年收藏，图片呢来自微博，已经是规范转载了！那就请各位小可爱们！别再举报了！做人！要厚道呀！**\n\n>喜欢吗?。。\n>喜欢。。。","slug":"short-stories-before-bed3","published":1,"updated":"2019-03-04T13:07:39.111Z","comments":1,"photos":[],"link":"","_id":"cjwj070f4003cm8zapztxct16","content":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"知乎用户-Wangshiyin\"><a href=\"#知乎用户-Wangshiyin\" class=\"headerlink\" title=\"知乎用户-Wangshiyin\"></a>知乎用户-Wangshiyin</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/210115111\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>1.</strong></p>\n<p>有一天，小鱼问大鱼：大…鱼…大…鱼，你…喜…欢…吃…什…么…样…的…小…鱼…呀…？</p>\n<p>大鱼说：我…喜…欢…吃…讲话…慢…的…小…鱼…，</p>\n<p>小鱼说：哦我造了。</p>\n<p><strong>2.</strong></p>\n<p>两只小蜜蜂呀。飞到花丛中。一只飞得高，一只飞得低。</p>\n<p>飞得高的那只对飞得低的那只说：“你这只low bee”</p>\n<p><strong>3.</strong></p>\n<p>为什么海水是蓝色的呀。</p>\n<p>因为海洋里有很多小鱼</p>\n<p>它们会：blue blue blue ～</p>\n<hr>\n<h2 id=\"知乎用户-关山月\"><a href=\"#知乎用户-关山月\" class=\"headerlink\" title=\"知乎用户-关山月\"></a>知乎用户-关山月</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/219229734\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<blockquote>\n<p>(◕ˇ∀ˇ◕)谢谢大家捧场。。</p>\n</blockquote>\n<p><strong>1.</strong></p>\n<p>有一个长得特别胖的柠檬，别的柠檬都是椭圆的，尖尖的，可是他却特别圆，跟小和尚的头似的。</p>\n<p>他特别的苦恼！于是每天不喝水，不吃饭的减肥，想把自己饿瘦成别的柠檬的样子。</p>\n<p>但是到了别的柠檬都变黄了，成熟了，他还是那么胖</p>\n<p>于是他就等啊等饿啊饿，立志把自己饿得那么瘦才成熟。</p>\n<p>直到很久很久以后。。他才发现。。。自己。。。原来。。。是个柚子(≖_≖ )</p>\n<p><strong>2.</strong></p>\n<p>她偷偷用小号拜了男神为师父</p>\n<p>整天问他</p>\n<p>“师父，我该把眼插在哪？”</p>\n<p>“师父，我该什么时候放大？”</p>\n<p>男神不太懂辅助位置怎么打，每次都支支吾吾打发过去。</p>\n<p>直到有一天，她问了好多问题男神糊弄不过去了，就说，“徒儿你等等，我问问你师娘。”</p>\n<p>这一刻她觉得自己竟卑微的可怜。</p>\n<p>没过多久QQ大号响起</p>\n<p>是男神问她</p>\n<p>“在吗？那个。。你会玩辅助吗。。？”</p>\n<p><strong>3.</strong></p>\n<p>有个小仙女喜欢把云朵捏成各种各样的形状</p>\n<p>这天她捏出了一群动物花草，却又突然一挥手把他们打散了</p>\n<p>路过的蝴蝶问她:</p>\n<p> “你为什么不开心啊？” </p>\n<p>仙女说:</p>\n<p> “没有朋友和我一起玩。” </p>\n<p>蝴蝶说:</p>\n<p> “管风的小神仙喜欢你很久了” </p>\n<p>仙女奇怪的问：</p>\n<p> “你怎么知道？”</p>\n<p>蝴蝶默默的笑着说： </p>\n<p>  “要不你以为你每次捏云朵的时候，为什么从来没有破坏的风”( ﹡ˆoˆ﹡ )</p>\n<p><strong>4.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-68c90cd4b904479a87ba7471946cfaae_hd.jpg\" alt></p>\n<p><strong>5.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-786e79e002767dff3c4cdf94db8d9dbe_hd.jpg\" alt></p>\n<p><strong>6.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-057dc3d307cc5a7a300b9f583bc08eee_hd.jpg\" alt></p>\n<p><strong>7.</strong></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-5ffd4bd027a13884d8fb0ab9290544a7_hd.jpg\" alt></p>\n<p><strong>8.</strong></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-4afde27c560ece5b92561678899d46f7_hd.jpg\" alt></p>\n<p><strong>9.</strong></p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-4a9fd53f83efb8f5d375b3688a1f915c_hd.jpg\" alt></p>\n<blockquote>\n<p><strong>唉。。差点忘记说了(⋟﹏⋞)故事来源于网络且是多年收藏，图片呢来自微博，已经是规范转载了！那就请各位小可爱们！别再举报了！做人！要厚道呀！</strong></p>\n</blockquote>\n<blockquote>\n<p>喜欢吗?。。<br>喜欢。。。</p>\n</blockquote>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>","more":"<h2 id=\"知乎用户-Wangshiyin\"><a href=\"#知乎用户-Wangshiyin\" class=\"headerlink\" title=\"知乎用户-Wangshiyin\"></a>知乎用户-Wangshiyin</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/210115111\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>1.</strong></p>\n<p>有一天，小鱼问大鱼：大…鱼…大…鱼，你…喜…欢…吃…什…么…样…的…小…鱼…呀…？</p>\n<p>大鱼说：我…喜…欢…吃…讲话…慢…的…小…鱼…，</p>\n<p>小鱼说：哦我造了。</p>\n<p><strong>2.</strong></p>\n<p>两只小蜜蜂呀。飞到花丛中。一只飞得高，一只飞得低。</p>\n<p>飞得高的那只对飞得低的那只说：“你这只low bee”</p>\n<p><strong>3.</strong></p>\n<p>为什么海水是蓝色的呀。</p>\n<p>因为海洋里有很多小鱼</p>\n<p>它们会：blue blue blue ～</p>\n<hr>\n<h2 id=\"知乎用户-关山月\"><a href=\"#知乎用户-关山月\" class=\"headerlink\" title=\"知乎用户-关山月\"></a>知乎用户-关山月</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/219229734\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<blockquote>\n<p>(◕ˇ∀ˇ◕)谢谢大家捧场。。</p>\n</blockquote>\n<p><strong>1.</strong></p>\n<p>有一个长得特别胖的柠檬，别的柠檬都是椭圆的，尖尖的，可是他却特别圆，跟小和尚的头似的。</p>\n<p>他特别的苦恼！于是每天不喝水，不吃饭的减肥，想把自己饿瘦成别的柠檬的样子。</p>\n<p>但是到了别的柠檬都变黄了，成熟了，他还是那么胖</p>\n<p>于是他就等啊等饿啊饿，立志把自己饿得那么瘦才成熟。</p>\n<p>直到很久很久以后。。他才发现。。。自己。。。原来。。。是个柚子(≖_≖ )</p>\n<p><strong>2.</strong></p>\n<p>她偷偷用小号拜了男神为师父</p>\n<p>整天问他</p>\n<p>“师父，我该把眼插在哪？”</p>\n<p>“师父，我该什么时候放大？”</p>\n<p>男神不太懂辅助位置怎么打，每次都支支吾吾打发过去。</p>\n<p>直到有一天，她问了好多问题男神糊弄不过去了，就说，“徒儿你等等，我问问你师娘。”</p>\n<p>这一刻她觉得自己竟卑微的可怜。</p>\n<p>没过多久QQ大号响起</p>\n<p>是男神问她</p>\n<p>“在吗？那个。。你会玩辅助吗。。？”</p>\n<p><strong>3.</strong></p>\n<p>有个小仙女喜欢把云朵捏成各种各样的形状</p>\n<p>这天她捏出了一群动物花草，却又突然一挥手把他们打散了</p>\n<p>路过的蝴蝶问她:</p>\n<p> “你为什么不开心啊？” </p>\n<p>仙女说:</p>\n<p> “没有朋友和我一起玩。” </p>\n<p>蝴蝶说:</p>\n<p> “管风的小神仙喜欢你很久了” </p>\n<p>仙女奇怪的问：</p>\n<p> “你怎么知道？”</p>\n<p>蝴蝶默默的笑着说： </p>\n<p>  “要不你以为你每次捏云朵的时候，为什么从来没有破坏的风”( ﹡ˆoˆ﹡ )</p>\n<p><strong>4.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-68c90cd4b904479a87ba7471946cfaae_hd.jpg\" alt></p>\n<p><strong>5.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-786e79e002767dff3c4cdf94db8d9dbe_hd.jpg\" alt></p>\n<p><strong>6.</strong></p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-057dc3d307cc5a7a300b9f583bc08eee_hd.jpg\" alt></p>\n<p><strong>7.</strong></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-5ffd4bd027a13884d8fb0ab9290544a7_hd.jpg\" alt></p>\n<p><strong>8.</strong></p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-4afde27c560ece5b92561678899d46f7_hd.jpg\" alt></p>\n<p><strong>9.</strong></p>\n<p><img src=\"https://pic1.zhimg.com/80/v2-4a9fd53f83efb8f5d375b3688a1f915c_hd.jpg\" alt></p>\n<blockquote>\n<p><strong>唉。。差点忘记说了(⋟﹏⋞)故事来源于网络且是多年收藏，图片呢来自微博，已经是规范转载了！那就请各位小可爱们！别再举报了！做人！要厚道呀！</strong></p>\n</blockquote>\n<blockquote>\n<p>喜欢吗?。。<br>喜欢。。。</p>\n</blockquote>"},{"layout":"post","title":"睡前小故事——Day 5","date":"2019-01-23T00:00:00.000Z","_content":"\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-川戈\n[原文链接](https://www.zhihu.com/question/59017055/answer/357749734)\n\n**1、**\n\n书生觉得自己倒霉透了。\n\n进京赶考的路上，书生看到了一群山贼正在打劫车队。饱读诗书的他立刻上前仗义执言，训得匪徒哑口无言。\n\n“现在收手还来得及，否则我立刻就去报官！你们可以保持沉默，但你们说的每一句话，都将成为呈堂证供！”书生指点江山，意气风发。\n\n“你说得对！”为首的蒙面人诚恳地说，“我的确没考虑到这一点。”\n\n书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。\n\n“小的们，把这个书生一块儿绑回去，灭口！”\n\n**2、**\n\n书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。\n\n“小的们，把这个书生一块儿绑回去，灭口！”\n\n“喂，那个书生，我看你下午那番话，有几分歪才，留寨子里当个军师如何？”\n\n书生挺直了腰，面无惧色：“劫生辰纲的事不怪你们，但想让我同流合污，没门！”\n\n美娇娘嫣然一笑：“那就柴房里关着，关到同意为止呗！”\n\n书生这下急了，进京赶考可耽误不得啊！他连忙服软：“这位大王……”\n\n谁知美娇娘突然翻了脸，狠狠弹了书生一个脑瓜崩，疼得他流出眼泪来。\n\n“不要叫我大王，要叫我女王大人！”\n\n**3、**\n\n小喽啰们发现，寨主最近特别爱往柴房跑。\n\n本来只想劝书生在山寨入伙，但聊着聊着，美娇娘却发现，和书生聊天太他娘的有意思啦！\n\n“你这样不好，”书生皱起了眉头，“【他娘的】，这是脏话，女孩子家，要温柔才像样！”\n\n“温柔？那是弱女子才干的事儿！我可是要当巾帼英雄的人！”美娇娘柳眉一竖，就要发火。\n\n“谁说女英雄就要讲脏话！你知道花木兰吗？你知道穆桂英吗？梁红玉、樊梨花、聂隐娘……”\n\n美娇娘的眼睛里逐渐冒出了小星星：“你懂的好多，快给我讲讲！”\n\n书生得意一笑：“行，那我就给大王你讲讲……”\n\n“啪”一个脑瓜崩弹在了书生脑门上。\n\n“说了多少次，不要叫我大王，要叫我女王大人！”\n\n**4、**\n\n美娇娘逐渐成了书生的迷妹，他的住处啊，从柴房变成了厢房。\n\n这天，美娇娘推开了书生的房门：“我仔细想过了，你的确不适合当我的军师。”\n\n书生喜出望外：“这么说，我可以下山了？”\n\n美娇娘摇了摇头：“我觉得，你还是当我的压寨夫君更好一点。”\n\n书生两眼一黑，差点晕了过去。虽然美娇娘长得好看，心眼不坏，劫富济贫也算个侠盗，对自己也很好——可她是个山贼啊，我家书香门第，怎么能嫁给山贼呢？\n\n啊呸，我怎么能用“嫁”这个字，应该是“娶”才对。\n\n书生摇了摇头：“对不起，我心仪的姑娘，必须知书达理，才华胜过我才行。”\n\n美娇娘丹凤眼一瞪：“武功胜过你行不行？”\n\n书生一咬牙，闭上了眼睛：“宁为玉碎不为瓦全！”\n\n**5、**\n\n“不就是才华吗？我现在就去读书！”美娇娘一言不发出了院子，连夜绑来了城里的老秀才，悬梁刺股苦读了三天三夜，“我就不信我学不来！”\n\n第四天，她叹着气踹开了书生的房门：“算了，读书太难了，你还是下山吧。”\n\n书生临走时，突然觉得有些难过。他犹豫了片刻，还是回过头说了一句：“青山不改，绿水长流。大王，后会有期！”\n\n“说了不要叫我大王……”美娇娘拳头刚举起来，又突然停住，背过了身子悄悄擦泪，“算了，随你怎么叫吧。”\n\n**6、**\n\n书生一进城，就被官兵抓了起来。\n\n原来，有人举报他是山贼的同伙，一起劫了生辰纲。书生无处伸冤，直接关进了大牢，赶考的事儿也泡了汤。\n\n问斩前一天晚上，火光大作，嘈杂万分。牢房大门被一刀劈开，一道人影进来，背着书生就走，一路杀出重围，回了山寨。\n\n书生这才注意到，原来救自己的，是美娇娘。\n\n看着她一身是伤，却依然笑颜如花，书生叹了口气：“没办法，这下只能当你的狗头军师了。”\n\n“只是军师而已吗？”美娇娘有些失望，“难道一定要才华胜过你，才肯当我压寨夫君？”\n\n“唉，真拿你没办法，”书生无奈地叹了口气，“明天开始，我教你读书。”\n\n**7、**\n\n书生半夜出来赏月，无意中听到美娇娘在和老秀才商量什么。\n\n“读书太难了，有没有快一点的办法？”\n\n……\n\n“我明白了，这就证明，他的才华远不如我，他就只能乖乖从了我！”\n\n听着美娇娘豪迈大笑，书生冷哼一声。\n\n我凭本事单的身，想作弊？不可能！\n\n**8、**\n\n第二天，美娇娘坏笑着推开书生的门：“喂，我来考考你，若是答错了，你便乖乖从了我！”\n\n书生一摆手：“出招吧。”\n\n“你写个回字出来。”“回字有四种写法，大王，你要的是哪一种？”\n\n美娇娘一愣：“算了算了，你还是画个龙给我看看。”\n\n书生得意一笑：“龙有虺虬螭蛟多个品种，大王，你要看哪样？”\n\n美娇娘抓耳挠腮，涨红了脸，原地踱了两圈，突然一拍桌子，拽着书生把他推倒在卧室的床上。\n\n“说了多少次，叫我女王大人！”\n\n----------------------------------------------------------------------------\n","source":"_posts/2019-01-23-short-stories-before-bed5.markdown","raw":"---\nlayout: post\ntitle: 睡前小故事——Day 5\ndate: 2019-01-23 00:00:00 +0800\ncategories:\n- Life\ntags: \n- 睡前小故事 \n---\n\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-川戈\n[原文链接](https://www.zhihu.com/question/59017055/answer/357749734)\n\n**1、**\n\n书生觉得自己倒霉透了。\n\n进京赶考的路上，书生看到了一群山贼正在打劫车队。饱读诗书的他立刻上前仗义执言，训得匪徒哑口无言。\n\n“现在收手还来得及，否则我立刻就去报官！你们可以保持沉默，但你们说的每一句话，都将成为呈堂证供！”书生指点江山，意气风发。\n\n“你说得对！”为首的蒙面人诚恳地说，“我的确没考虑到这一点。”\n\n书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。\n\n“小的们，把这个书生一块儿绑回去，灭口！”\n\n**2、**\n\n书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。\n\n“小的们，把这个书生一块儿绑回去，灭口！”\n\n“喂，那个书生，我看你下午那番话，有几分歪才，留寨子里当个军师如何？”\n\n书生挺直了腰，面无惧色：“劫生辰纲的事不怪你们，但想让我同流合污，没门！”\n\n美娇娘嫣然一笑：“那就柴房里关着，关到同意为止呗！”\n\n书生这下急了，进京赶考可耽误不得啊！他连忙服软：“这位大王……”\n\n谁知美娇娘突然翻了脸，狠狠弹了书生一个脑瓜崩，疼得他流出眼泪来。\n\n“不要叫我大王，要叫我女王大人！”\n\n**3、**\n\n小喽啰们发现，寨主最近特别爱往柴房跑。\n\n本来只想劝书生在山寨入伙，但聊着聊着，美娇娘却发现，和书生聊天太他娘的有意思啦！\n\n“你这样不好，”书生皱起了眉头，“【他娘的】，这是脏话，女孩子家，要温柔才像样！”\n\n“温柔？那是弱女子才干的事儿！我可是要当巾帼英雄的人！”美娇娘柳眉一竖，就要发火。\n\n“谁说女英雄就要讲脏话！你知道花木兰吗？你知道穆桂英吗？梁红玉、樊梨花、聂隐娘……”\n\n美娇娘的眼睛里逐渐冒出了小星星：“你懂的好多，快给我讲讲！”\n\n书生得意一笑：“行，那我就给大王你讲讲……”\n\n“啪”一个脑瓜崩弹在了书生脑门上。\n\n“说了多少次，不要叫我大王，要叫我女王大人！”\n\n**4、**\n\n美娇娘逐渐成了书生的迷妹，他的住处啊，从柴房变成了厢房。\n\n这天，美娇娘推开了书生的房门：“我仔细想过了，你的确不适合当我的军师。”\n\n书生喜出望外：“这么说，我可以下山了？”\n\n美娇娘摇了摇头：“我觉得，你还是当我的压寨夫君更好一点。”\n\n书生两眼一黑，差点晕了过去。虽然美娇娘长得好看，心眼不坏，劫富济贫也算个侠盗，对自己也很好——可她是个山贼啊，我家书香门第，怎么能嫁给山贼呢？\n\n啊呸，我怎么能用“嫁”这个字，应该是“娶”才对。\n\n书生摇了摇头：“对不起，我心仪的姑娘，必须知书达理，才华胜过我才行。”\n\n美娇娘丹凤眼一瞪：“武功胜过你行不行？”\n\n书生一咬牙，闭上了眼睛：“宁为玉碎不为瓦全！”\n\n**5、**\n\n“不就是才华吗？我现在就去读书！”美娇娘一言不发出了院子，连夜绑来了城里的老秀才，悬梁刺股苦读了三天三夜，“我就不信我学不来！”\n\n第四天，她叹着气踹开了书生的房门：“算了，读书太难了，你还是下山吧。”\n\n书生临走时，突然觉得有些难过。他犹豫了片刻，还是回过头说了一句：“青山不改，绿水长流。大王，后会有期！”\n\n“说了不要叫我大王……”美娇娘拳头刚举起来，又突然停住，背过了身子悄悄擦泪，“算了，随你怎么叫吧。”\n\n**6、**\n\n书生一进城，就被官兵抓了起来。\n\n原来，有人举报他是山贼的同伙，一起劫了生辰纲。书生无处伸冤，直接关进了大牢，赶考的事儿也泡了汤。\n\n问斩前一天晚上，火光大作，嘈杂万分。牢房大门被一刀劈开，一道人影进来，背着书生就走，一路杀出重围，回了山寨。\n\n书生这才注意到，原来救自己的，是美娇娘。\n\n看着她一身是伤，却依然笑颜如花，书生叹了口气：“没办法，这下只能当你的狗头军师了。”\n\n“只是军师而已吗？”美娇娘有些失望，“难道一定要才华胜过你，才肯当我压寨夫君？”\n\n“唉，真拿你没办法，”书生无奈地叹了口气，“明天开始，我教你读书。”\n\n**7、**\n\n书生半夜出来赏月，无意中听到美娇娘在和老秀才商量什么。\n\n“读书太难了，有没有快一点的办法？”\n\n……\n\n“我明白了，这就证明，他的才华远不如我，他就只能乖乖从了我！”\n\n听着美娇娘豪迈大笑，书生冷哼一声。\n\n我凭本事单的身，想作弊？不可能！\n\n**8、**\n\n第二天，美娇娘坏笑着推开书生的门：“喂，我来考考你，若是答错了，你便乖乖从了我！”\n\n书生一摆手：“出招吧。”\n\n“你写个回字出来。”“回字有四种写法，大王，你要的是哪一种？”\n\n美娇娘一愣：“算了算了，你还是画个龙给我看看。”\n\n书生得意一笑：“龙有虺虬螭蛟多个品种，大王，你要看哪样？”\n\n美娇娘抓耳挠腮，涨红了脸，原地踱了两圈，突然一拍桌子，拽着书生把他推倒在卧室的床上。\n\n“说了多少次，叫我女王大人！”\n\n----------------------------------------------------------------------------\n","slug":"short-stories-before-bed5","published":1,"updated":"2019-03-04T13:07:39.112Z","comments":1,"photos":[],"link":"","_id":"cjwj070f7003hm8zaaeia45r7","content":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"知乎用户-川戈\"><a href=\"#知乎用户-川戈\" class=\"headerlink\" title=\"知乎用户-川戈\"></a>知乎用户-川戈</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/357749734\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>1、</strong></p>\n<p>书生觉得自己倒霉透了。</p>\n<p>进京赶考的路上，书生看到了一群山贼正在打劫车队。饱读诗书的他立刻上前仗义执言，训得匪徒哑口无言。</p>\n<p>“现在收手还来得及，否则我立刻就去报官！你们可以保持沉默，但你们说的每一句话，都将成为呈堂证供！”书生指点江山，意气风发。</p>\n<p>“你说得对！”为首的蒙面人诚恳地说，“我的确没考虑到这一点。”</p>\n<p>书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。</p>\n<p>“小的们，把这个书生一块儿绑回去，灭口！”</p>\n<p><strong>2、</strong></p>\n<p>书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。</p>\n<p>“小的们，把这个书生一块儿绑回去，灭口！”</p>\n<p>“喂，那个书生，我看你下午那番话，有几分歪才，留寨子里当个军师如何？”</p>\n<p>书生挺直了腰，面无惧色：“劫生辰纲的事不怪你们，但想让我同流合污，没门！”</p>\n<p>美娇娘嫣然一笑：“那就柴房里关着，关到同意为止呗！”</p>\n<p>书生这下急了，进京赶考可耽误不得啊！他连忙服软：“这位大王……”</p>\n<p>谁知美娇娘突然翻了脸，狠狠弹了书生一个脑瓜崩，疼得他流出眼泪来。</p>\n<p>“不要叫我大王，要叫我女王大人！”</p>\n<p><strong>3、</strong></p>\n<p>小喽啰们发现，寨主最近特别爱往柴房跑。</p>\n<p>本来只想劝书生在山寨入伙，但聊着聊着，美娇娘却发现，和书生聊天太他娘的有意思啦！</p>\n<p>“你这样不好，”书生皱起了眉头，“【他娘的】，这是脏话，女孩子家，要温柔才像样！”</p>\n<p>“温柔？那是弱女子才干的事儿！我可是要当巾帼英雄的人！”美娇娘柳眉一竖，就要发火。</p>\n<p>“谁说女英雄就要讲脏话！你知道花木兰吗？你知道穆桂英吗？梁红玉、樊梨花、聂隐娘……”</p>\n<p>美娇娘的眼睛里逐渐冒出了小星星：“你懂的好多，快给我讲讲！”</p>\n<p>书生得意一笑：“行，那我就给大王你讲讲……”</p>\n<p>“啪”一个脑瓜崩弹在了书生脑门上。</p>\n<p>“说了多少次，不要叫我大王，要叫我女王大人！”</p>\n<p><strong>4、</strong></p>\n<p>美娇娘逐渐成了书生的迷妹，他的住处啊，从柴房变成了厢房。</p>\n<p>这天，美娇娘推开了书生的房门：“我仔细想过了，你的确不适合当我的军师。”</p>\n<p>书生喜出望外：“这么说，我可以下山了？”</p>\n<p>美娇娘摇了摇头：“我觉得，你还是当我的压寨夫君更好一点。”</p>\n<p>书生两眼一黑，差点晕了过去。虽然美娇娘长得好看，心眼不坏，劫富济贫也算个侠盗，对自己也很好——可她是个山贼啊，我家书香门第，怎么能嫁给山贼呢？</p>\n<p>啊呸，我怎么能用“嫁”这个字，应该是“娶”才对。</p>\n<p>书生摇了摇头：“对不起，我心仪的姑娘，必须知书达理，才华胜过我才行。”</p>\n<p>美娇娘丹凤眼一瞪：“武功胜过你行不行？”</p>\n<p>书生一咬牙，闭上了眼睛：“宁为玉碎不为瓦全！”</p>\n<p><strong>5、</strong></p>\n<p>“不就是才华吗？我现在就去读书！”美娇娘一言不发出了院子，连夜绑来了城里的老秀才，悬梁刺股苦读了三天三夜，“我就不信我学不来！”</p>\n<p>第四天，她叹着气踹开了书生的房门：“算了，读书太难了，你还是下山吧。”</p>\n<p>书生临走时，突然觉得有些难过。他犹豫了片刻，还是回过头说了一句：“青山不改，绿水长流。大王，后会有期！”</p>\n<p>“说了不要叫我大王……”美娇娘拳头刚举起来，又突然停住，背过了身子悄悄擦泪，“算了，随你怎么叫吧。”</p>\n<p><strong>6、</strong></p>\n<p>书生一进城，就被官兵抓了起来。</p>\n<p>原来，有人举报他是山贼的同伙，一起劫了生辰纲。书生无处伸冤，直接关进了大牢，赶考的事儿也泡了汤。</p>\n<p>问斩前一天晚上，火光大作，嘈杂万分。牢房大门被一刀劈开，一道人影进来，背着书生就走，一路杀出重围，回了山寨。</p>\n<p>书生这才注意到，原来救自己的，是美娇娘。</p>\n<p>看着她一身是伤，却依然笑颜如花，书生叹了口气：“没办法，这下只能当你的狗头军师了。”</p>\n<p>“只是军师而已吗？”美娇娘有些失望，“难道一定要才华胜过你，才肯当我压寨夫君？”</p>\n<p>“唉，真拿你没办法，”书生无奈地叹了口气，“明天开始，我教你读书。”</p>\n<p><strong>7、</strong></p>\n<p>书生半夜出来赏月，无意中听到美娇娘在和老秀才商量什么。</p>\n<p>“读书太难了，有没有快一点的办法？”</p>\n<p>……</p>\n<p>“我明白了，这就证明，他的才华远不如我，他就只能乖乖从了我！”</p>\n<p>听着美娇娘豪迈大笑，书生冷哼一声。</p>\n<p>我凭本事单的身，想作弊？不可能！</p>\n<p><strong>8、</strong></p>\n<p>第二天，美娇娘坏笑着推开书生的门：“喂，我来考考你，若是答错了，你便乖乖从了我！”</p>\n<p>书生一摆手：“出招吧。”</p>\n<p>“你写个回字出来。”“回字有四种写法，大王，你要的是哪一种？”</p>\n<p>美娇娘一愣：“算了算了，你还是画个龙给我看看。”</p>\n<p>书生得意一笑：“龙有虺虬螭蛟多个品种，大王，你要看哪样？”</p>\n<p>美娇娘抓耳挠腮，涨红了脸，原地踱了两圈，突然一拍桌子，拽着书生把他推倒在卧室的床上。</p>\n<p>“说了多少次，叫我女王大人！”</p>\n<hr>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>","more":"<h2 id=\"知乎用户-川戈\"><a href=\"#知乎用户-川戈\" class=\"headerlink\" title=\"知乎用户-川戈\"></a>知乎用户-川戈</h2><p><a href=\"https://www.zhihu.com/question/59017055/answer/357749734\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p><strong>1、</strong></p>\n<p>书生觉得自己倒霉透了。</p>\n<p>进京赶考的路上，书生看到了一群山贼正在打劫车队。饱读诗书的他立刻上前仗义执言，训得匪徒哑口无言。</p>\n<p>“现在收手还来得及，否则我立刻就去报官！你们可以保持沉默，但你们说的每一句话，都将成为呈堂证供！”书生指点江山，意气风发。</p>\n<p>“你说得对！”为首的蒙面人诚恳地说，“我的确没考虑到这一点。”</p>\n<p>书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。</p>\n<p>“小的们，把这个书生一块儿绑回去，灭口！”</p>\n<p><strong>2、</strong></p>\n<p>书生昂首挺胸，心想最近自己果然口才大有进步，却突然听到了蒙面人的一句话。</p>\n<p>“小的们，把这个书生一块儿绑回去，灭口！”</p>\n<p>“喂，那个书生，我看你下午那番话，有几分歪才，留寨子里当个军师如何？”</p>\n<p>书生挺直了腰，面无惧色：“劫生辰纲的事不怪你们，但想让我同流合污，没门！”</p>\n<p>美娇娘嫣然一笑：“那就柴房里关着，关到同意为止呗！”</p>\n<p>书生这下急了，进京赶考可耽误不得啊！他连忙服软：“这位大王……”</p>\n<p>谁知美娇娘突然翻了脸，狠狠弹了书生一个脑瓜崩，疼得他流出眼泪来。</p>\n<p>“不要叫我大王，要叫我女王大人！”</p>\n<p><strong>3、</strong></p>\n<p>小喽啰们发现，寨主最近特别爱往柴房跑。</p>\n<p>本来只想劝书生在山寨入伙，但聊着聊着，美娇娘却发现，和书生聊天太他娘的有意思啦！</p>\n<p>“你这样不好，”书生皱起了眉头，“【他娘的】，这是脏话，女孩子家，要温柔才像样！”</p>\n<p>“温柔？那是弱女子才干的事儿！我可是要当巾帼英雄的人！”美娇娘柳眉一竖，就要发火。</p>\n<p>“谁说女英雄就要讲脏话！你知道花木兰吗？你知道穆桂英吗？梁红玉、樊梨花、聂隐娘……”</p>\n<p>美娇娘的眼睛里逐渐冒出了小星星：“你懂的好多，快给我讲讲！”</p>\n<p>书生得意一笑：“行，那我就给大王你讲讲……”</p>\n<p>“啪”一个脑瓜崩弹在了书生脑门上。</p>\n<p>“说了多少次，不要叫我大王，要叫我女王大人！”</p>\n<p><strong>4、</strong></p>\n<p>美娇娘逐渐成了书生的迷妹，他的住处啊，从柴房变成了厢房。</p>\n<p>这天，美娇娘推开了书生的房门：“我仔细想过了，你的确不适合当我的军师。”</p>\n<p>书生喜出望外：“这么说，我可以下山了？”</p>\n<p>美娇娘摇了摇头：“我觉得，你还是当我的压寨夫君更好一点。”</p>\n<p>书生两眼一黑，差点晕了过去。虽然美娇娘长得好看，心眼不坏，劫富济贫也算个侠盗，对自己也很好——可她是个山贼啊，我家书香门第，怎么能嫁给山贼呢？</p>\n<p>啊呸，我怎么能用“嫁”这个字，应该是“娶”才对。</p>\n<p>书生摇了摇头：“对不起，我心仪的姑娘，必须知书达理，才华胜过我才行。”</p>\n<p>美娇娘丹凤眼一瞪：“武功胜过你行不行？”</p>\n<p>书生一咬牙，闭上了眼睛：“宁为玉碎不为瓦全！”</p>\n<p><strong>5、</strong></p>\n<p>“不就是才华吗？我现在就去读书！”美娇娘一言不发出了院子，连夜绑来了城里的老秀才，悬梁刺股苦读了三天三夜，“我就不信我学不来！”</p>\n<p>第四天，她叹着气踹开了书生的房门：“算了，读书太难了，你还是下山吧。”</p>\n<p>书生临走时，突然觉得有些难过。他犹豫了片刻，还是回过头说了一句：“青山不改，绿水长流。大王，后会有期！”</p>\n<p>“说了不要叫我大王……”美娇娘拳头刚举起来，又突然停住，背过了身子悄悄擦泪，“算了，随你怎么叫吧。”</p>\n<p><strong>6、</strong></p>\n<p>书生一进城，就被官兵抓了起来。</p>\n<p>原来，有人举报他是山贼的同伙，一起劫了生辰纲。书生无处伸冤，直接关进了大牢，赶考的事儿也泡了汤。</p>\n<p>问斩前一天晚上，火光大作，嘈杂万分。牢房大门被一刀劈开，一道人影进来，背着书生就走，一路杀出重围，回了山寨。</p>\n<p>书生这才注意到，原来救自己的，是美娇娘。</p>\n<p>看着她一身是伤，却依然笑颜如花，书生叹了口气：“没办法，这下只能当你的狗头军师了。”</p>\n<p>“只是军师而已吗？”美娇娘有些失望，“难道一定要才华胜过你，才肯当我压寨夫君？”</p>\n<p>“唉，真拿你没办法，”书生无奈地叹了口气，“明天开始，我教你读书。”</p>\n<p><strong>7、</strong></p>\n<p>书生半夜出来赏月，无意中听到美娇娘在和老秀才商量什么。</p>\n<p>“读书太难了，有没有快一点的办法？”</p>\n<p>……</p>\n<p>“我明白了，这就证明，他的才华远不如我，他就只能乖乖从了我！”</p>\n<p>听着美娇娘豪迈大笑，书生冷哼一声。</p>\n<p>我凭本事单的身，想作弊？不可能！</p>\n<p><strong>8、</strong></p>\n<p>第二天，美娇娘坏笑着推开书生的门：“喂，我来考考你，若是答错了，你便乖乖从了我！”</p>\n<p>书生一摆手：“出招吧。”</p>\n<p>“你写个回字出来。”“回字有四种写法，大王，你要的是哪一种？”</p>\n<p>美娇娘一愣：“算了算了，你还是画个龙给我看看。”</p>\n<p>书生得意一笑：“龙有虺虬螭蛟多个品种，大王，你要看哪样？”</p>\n<p>美娇娘抓耳挠腮，涨红了脸，原地踱了两圈，突然一拍桌子，拽着书生把他推倒在卧室的床上。</p>\n<p>“说了多少次，叫我女王大人！”</p>\n<hr>"},{"layout":"post","title":"VPS使用指南","date":"2019-03-02T00:00:00.000Z","description":null,"_content":"\n{% cq %} 默念二十四字社会主义核心价值观 {% endcq %}\n\n<!-- more -->\n\n# 安装ShadowsocksR\n\n使用root用户登录，运行以下命令：\n\n``` shell\n# 安装ShadowsocksR\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh\nchmod +x shadowsocksR.sh\n./shadowsocksR.sh 2>&1 | tee shadowsocksR.log\n\n# 卸载ShadowsocksR\n./shadowsocksR.sh uninstall\n\n# 安装 BBR\nwget --no-check-certificate https://raw.githubusercontent.com/yuwancumian666/how-to-start-a-new-VPS/master/tcp.sh\nchmod +x tcp.sh\n./tcp.sh\n```\n\n## 多用户配置示例\n\n``` json\n{\n    \"server\":\"0.0.0.0\",\n    \"server_ipv6\":\"[::]\",\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n        \"10657\":\"***\",\n        \"10658\":\"***\",\n        \"10659\":\"***\",\n        \"10660\":\"***\"\n    },\n    \"timeout\":120,\n    \"method\":\"aes-256-cfb\",\n    \"protocol\":\"origin\",\n    \"protocol_param\":\"\",\n    \"obfs\":\"plain\",\n    \"obfs_param\":\"\",\n    \"redirect\":\"\",\n    \"dns_ipv6\":false,\n    \"fast_open\":false,\n    \"workers\":1\n}\n```\n\n\n# 更改Python软连接\n\n查看已安装python版本 `ls /usr/bin`\n\n``` shell\nrm /usr/bin/python\nln -s /usr/bin/python3.5 /usr/bin/python\n```\n\n# 定时任务 crontab\n\n``` bash\ncrontab -e\n#30 22 * * * python ~/email/pymail.py >> ~/email/pymail.log\n# 修改默认编辑器\nselect-editor\n```\n","source":"_posts/2019-03-01-how-to-start-a-vps.md","raw":"---\nlayout: post\ntitle: VPS使用指南\ndate: 2019-03-02 00:00:00 +0800\ndescription: \ncategories:\n- Software\ntags: \n- ssr\n- Linux\n---\n\n{% cq %} 默念二十四字社会主义核心价值观 {% endcq %}\n\n<!-- more -->\n\n# 安装ShadowsocksR\n\n使用root用户登录，运行以下命令：\n\n``` shell\n# 安装ShadowsocksR\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh\nchmod +x shadowsocksR.sh\n./shadowsocksR.sh 2>&1 | tee shadowsocksR.log\n\n# 卸载ShadowsocksR\n./shadowsocksR.sh uninstall\n\n# 安装 BBR\nwget --no-check-certificate https://raw.githubusercontent.com/yuwancumian666/how-to-start-a-new-VPS/master/tcp.sh\nchmod +x tcp.sh\n./tcp.sh\n```\n\n## 多用户配置示例\n\n``` json\n{\n    \"server\":\"0.0.0.0\",\n    \"server_ipv6\":\"[::]\",\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"port_password\":{\n        \"10657\":\"***\",\n        \"10658\":\"***\",\n        \"10659\":\"***\",\n        \"10660\":\"***\"\n    },\n    \"timeout\":120,\n    \"method\":\"aes-256-cfb\",\n    \"protocol\":\"origin\",\n    \"protocol_param\":\"\",\n    \"obfs\":\"plain\",\n    \"obfs_param\":\"\",\n    \"redirect\":\"\",\n    \"dns_ipv6\":false,\n    \"fast_open\":false,\n    \"workers\":1\n}\n```\n\n\n# 更改Python软连接\n\n查看已安装python版本 `ls /usr/bin`\n\n``` shell\nrm /usr/bin/python\nln -s /usr/bin/python3.5 /usr/bin/python\n```\n\n# 定时任务 crontab\n\n``` bash\ncrontab -e\n#30 22 * * * python ~/email/pymail.py >> ~/email/pymail.log\n# 修改默认编辑器\nselect-editor\n```\n","slug":"how-to-start-a-vps","published":1,"updated":"2019-03-05T07:59:26.340Z","comments":1,"photos":[],"link":"","_id":"cjwj070fa003jm8zaan7kut1y","content":"<blockquote class=\"blockquote-center\"><p>默念二十四字社会主义核心价值观 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h1 id=\"安装ShadowsocksR\"><a href=\"#安装ShadowsocksR\" class=\"headerlink\" title=\"安装ShadowsocksR\"></a>安装ShadowsocksR</h1><p>使用root用户登录，运行以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装ShadowsocksR</span><br><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh</span><br><span class=\"line\">chmod +x shadowsocksR.sh</span><br><span class=\"line\">./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 卸载ShadowsocksR</span><br><span class=\"line\">./shadowsocksR.sh uninstall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 BBR</span><br><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/yuwancumian666/how-to-start-a-new-VPS/master/tcp.sh</span><br><span class=\"line\">chmod +x tcp.sh</span><br><span class=\"line\">./tcp.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"多用户配置示例\"><a href=\"#多用户配置示例\" class=\"headerlink\" title=\"多用户配置示例\"></a>多用户配置示例</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"server\"</span>:<span class=\"string\">\"0.0.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"server_ipv6\"</span>:<span class=\"string\">\"[::]\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"port_password\"</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"10657\"</span>:<span class=\"string\">\"***\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"10658\"</span>:<span class=\"string\">\"***\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"10659\"</span>:<span class=\"string\">\"***\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"10660\"</span>:<span class=\"string\">\"***\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"timeout\"</span>:<span class=\"number\">120</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"protocol\"</span>:<span class=\"string\">\"origin\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"protocol_param\"</span>:<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"obfs\"</span>:<span class=\"string\">\"plain\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"obfs_param\"</span>:<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"redirect\"</span>:<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"dns_ipv6\"</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"fast_open\"</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"workers\"</span>:<span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"更改Python软连接\"><a href=\"#更改Python软连接\" class=\"headerlink\" title=\"更改Python软连接\"></a>更改Python软连接</h1><p>查看已安装python版本 <code>ls /usr/bin</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm /usr/bin/python</span><br><span class=\"line\">ln -s /usr/bin/python3.5 /usr/bin/python</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"定时任务-crontab\"><a href=\"#定时任务-crontab\" class=\"headerlink\" title=\"定时任务 crontab\"></a>定时任务 crontab</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br><span class=\"line\"><span class=\"comment\">#30 22 * * * python ~/email/pymail.py &gt;&gt; ~/email/pymail.log</span></span><br><span class=\"line\"><span class=\"comment\"># 修改默认编辑器</span></span><br><span class=\"line\">select-editor</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>默念二十四字社会主义核心价值观 </p>\n</blockquote>","more":"<h1 id=\"安装ShadowsocksR\"><a href=\"#安装ShadowsocksR\" class=\"headerlink\" title=\"安装ShadowsocksR\"></a>安装ShadowsocksR</h1><p>使用root用户登录，运行以下命令：</p>\n<!--�54-->\n\n<h2 id=\"多用户配置示例\"><a href=\"#多用户配置示例\" class=\"headerlink\" title=\"多用户配置示例\"></a>多用户配置示例</h2><!--�55-->\n\n<h1 id=\"更改Python软连接\"><a href=\"#更改Python软连接\" class=\"headerlink\" title=\"更改Python软连接\"></a>更改Python软连接</h1><p>查看已安装python版本 <code>ls /usr/bin</code></p>\n<!--�56-->\n\n<h1 id=\"定时任务-crontab\"><a href=\"#定时任务-crontab\" class=\"headerlink\" title=\"定时任务 crontab\"></a>定时任务 crontab</h1><!--�57-->"},{"title":"Hexo——GitHub Pages搭建","date":"2019-03-04T20:29:12.000Z","comments":1,"_content":"\n{% cq %} Hello Hexo! {% endcq %}\n\n<!-- more -->\n\n# 填坑\n\n## Markdown中不能使用变量\n\n`Ruby-Jekyll`环境下，是可以直接在markdown中插入yaml中定义的变量的，所以就可以把OSS(COS)存储的图片链接放到yaml里，方便管理。从Jekyll转到Hexo发现在markdown中使用变量是行不通的，但是知道了半点解决办法——注册插件：[GitHub](https://github.com/hexojs/hexo/issues/2756)和[知乎](https://www.zhihu.com/question/264598381)的解决方案。在此方案下我做了一些不完全的测试：\n1. 在`source/_data`目录下新建文件夹并有序存放yaml文件，在`hexo generate`过程中是找不到yaml文件的。\n2. 把yaml放在根目录下，能找到文件，但是找不到变量的键，1中也会有此种情况。\n3. 直接把数据放在`站点配置文件`中，可用找到变量并引用其值，但是只能硬编码，不能动态地找到变量，因为js中的变量类型是字符串\n\n{% codeblock lang:javascript themes/next/scripts/include-variable.js %}\nhexo.extend.tag.register('variable', function(args) {\n    // 这里 传入的变量 args[0] 类型是字符串，所以不能和 js 语句相连接，如：hexo.config.data.args[0]\n    // `hexo g`过程中打印下列信息，也就是执行该文件\n    console.log(\"------------------variable---------------------\");\n    console.log(args[0])\n    console.log(hexo.config.url)\n    console.log(hexo.config.data.iOS)\n    // return `<img src=\"` + args[0] + `\" />`;\n    return ``+hexo.config.data.iOS;\n  });\n{% endcodeblock %}\n\n## 关于代码块附加说明的样式\n\n在代码高亮主题`night bright` 下，使用`{% raw %}{% codeblock %} {% endcodeblock %}{% endraw %}`添加说明后，页面显示字体颜色和背景相近，不容易分辨，可以更改css样式来解决这一问题：\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-05-codeblock-caption.jpg 540 280 %}\n\n{% codeblock lang:styl public/css/main.css %}\nif $highlight_theme == \"night bright\"\n  $highlight-background   = #000000\n  $highlight-current-line = #2a2a2a\n  $highlight-selection    = #424242\n  $highlight-foreground   = #555  /* #eaeaea */\n  $highlight-comment      = #969896\n  $highlight-red          = #d54e53\n  // ……\n{% endcodeblock %}\n\n\n# 配置与美化\n\n\n## 图片并排\n\nHexo默认情况下是不能让图片并排显示的，这里需要更改一下设置，将下方代码块的两行注释掉即可。\nMarkdown中的语法`{% raw %}{% gp 1-n %} {% endgp %}{% endraw %}`，n代表需要并排的图片个数。\n\n{% note warning %}\n不可在行内使用单反引号引用标签插件，否则会被hexo理解为插入标签。\n{% endnote %}\n\n{% codeblock lang:javascript next/source/css/_common/components/tags/group-pictures.styl %}\n.page-post-detail .post-body .group-picture-column {\n  // float: none;\n  margin-top: 10px;\n  // width: auto !important;\n  img { margin: 0 auto; }\n}\n{% endcodeblock %}\n\n当图片设置为并排显示以后，不能使用\"fancybox\"的预览功能，要在另一个文件中注释掉一句代码：\n\n{% codeblock lang:javascript themes/next/source/js/src/utils.js %}\nwrapImageWithFancyBox: function() {\n    $('.content img')\n      .not(':hidden')\n      // .not('.group-picture img, .post-gallery img')\n      .each(function() {\n{% endcodeblock %}\n\n## 一言\n\n来自这里：[ouuan](https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）)\n\n1. 在代码所示文件中找到这一字段：`<aside id=\"sidebar\" class=\"sidebar\">`，然后在下边粘贴。\n{% code lang:html themes/next/layout/_macro/sidebar.swig %}\n<!-- \n<aside id=\"sidebar\" class=\"sidebar\">\n -->\n<!-- 一言 start -->\n<div class=\"sidebar-inner\">\n    <div>\n        <div style=\"display: table-cell;vertical-align: top; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\">“</div>\n        <div style=\"display: table-cell;text-align: left; vertical-align: middle; text-indent: 2em; padding: 0.8em 0.2em 1em 0.2em\"><b><span style=\"color:burlywood;\"><span id=\"hitokoto-content\"></span></span></b></div>\n        <div style=\"display: table-cell; vertical-align: bottom; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\">”</div>\n    </div>\n    <div style=\"text-align: right; font-size: 0.8em; color: black;\" id=\"hitokoto-from\"></div>\n    <div style=\"margin-top: 15px; font-size: 0.8em; color: black;\"><a href=\"https://hitokoto.cn/\">Hitokoto</a></div>\n</div>\n<div style=\"height: 15px\"></div>\n<!-- 一言 end -->\n{% endcode %}\n\n1. \n{% code lang:html themes/next/layout/_scripts/commons.swig %}\n<script type=\"text/javascript\">\n    $.get('https://v1.hitokoto.cn/?c=a', function (data) {\n        $('#hitokoto-content').css('display', '').text(data.hitokoto);\n        $('#hitokoto-from').css('display', '').text('——' + data.from);\n    });\n</script>\n{% endcode%}\n\n3. \n{% code lang:styl themes/next/source/css/_custom/custom.styl %}\n.sidebar {\n    background: rgba(0, 0, 0, 0);\n}\n{% endcode %}\n\n## 折叠块功能\n\n详细内容请见该[链接](https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html)\n\n{% fold 所涉及到的文件： %}\n+ themes\\next\\scripts\\tags.js\n+ themes\\next\\scripts\\fold.js\n+ themes\\next\\source\\js\\src\\post-details.js\n+ themes\\next\\source\\css\\_custom\\custom.styl\n{% endfold %}\n\n## 网页背景\n\n在[这里](https://yltx.cf/2019/01/18/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF)学到的背景图设置，看到其博客效果后向朋友学习了[如何去掉文章背景](#文章背景)。\n\n设置网页背景及文章透明度\n{% code lang:css themes/next/source/css/_custom/custom.styl %}\nbody {\n    background-image:url(/images/background/20180830_040329207_iOS.jpg);\n    background-repeat: no-repeat;  //\n    background-attachment:fixed;  // 背景图不滚动\n    background-size: cover;\n}\n.main-inner {\n    opacity: 0.8;  // 文章透明度\n}\n{% endcode %}\n\n## 文章背景\n\n去除背景只需要把该元素的`background`属性注释掉即可。\n\n{% note warning %}\n使用深色背景会造成博客阅读困难\n{% endnote %}\n\n1. 文章及文章预览\n\n{% code lang:css themes/next/source/css/_schemes/Pisces/_layout.styl%}\n.content-wrap {\n  float: right;\n  box-sizing: border-box;\n  padding: $content-desktop-padding;\n  width: $content-wrap;\n  // background: white;\n  min-height: 700px;\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n  // ……\n  }\n{% endcode %}\n\n2. 阅读全文按钮\n\n{% code lang:css themes/next/source/css/_common/components/buttons.styl %}\n.btn {\n  display: inline-block;\n  padding: 0 20px;\n  font-size: $btn-default-font-size;\n  color: $btn-default-color;\n  // background: $btn-default-bg;\n  border: $btn-default-border-width solid $btn-default-border-color;\n  text-decoration: none;\n  border-radius: $btn-default-radius;\n  transition-property: background-color;\n  the-transition();\n  line-height: 2;\n  // ……\n}\n{% endcode %}\n\n# 标签插件\n\n## 笔记及其样式\n\n使用方式\n`{% raw %}{% note class_name %} Content (md partial supported) {% endnote %}{% endraw %}`\n\n{% note default %} default {% endnote %}\n{% note primary %} primary {% endnote %}\n{% note success %} success {% endnote %}\n{% note info %} info {% endnote %}\n{% note warning %} warning {% endnote %}\n{% note danger %} danger {% endnote %}\n\n\n## Gist\n\n`{% raw %}{% gist gist_id file_name %}{% endraw %}`\n\n{% fold 点击查看gist %}\n{% gist 19169c91a19ab7580e4678e4ed25375f extensions.json %}\n{% endfold %}\n\n## swig标签\n\n{% raw %}{% raw %}\ncontent\n{% endraw %}{% endraw %}\n\n\n\n# 接下来\n\n\n\n## 浮动插入图片，[像这个](https://notes.iissnan.com/2016/next-documentations-reload/#前季剧情回顾)\n\n## 无法访问404\n\n只能以`localhost:4000/404.html`的方式访问\n","source":"_posts/2019-03-04-start-hexo.md","raw":"---\ntitle: Hexo——GitHub Pages搭建\ndate: 2019-03-04 20:29:12\ncategory:\n- [模板]\ntags: \n- 问题\n- 示例\ncomments: true\n---\n\n{% cq %} Hello Hexo! {% endcq %}\n\n<!-- more -->\n\n# 填坑\n\n## Markdown中不能使用变量\n\n`Ruby-Jekyll`环境下，是可以直接在markdown中插入yaml中定义的变量的，所以就可以把OSS(COS)存储的图片链接放到yaml里，方便管理。从Jekyll转到Hexo发现在markdown中使用变量是行不通的，但是知道了半点解决办法——注册插件：[GitHub](https://github.com/hexojs/hexo/issues/2756)和[知乎](https://www.zhihu.com/question/264598381)的解决方案。在此方案下我做了一些不完全的测试：\n1. 在`source/_data`目录下新建文件夹并有序存放yaml文件，在`hexo generate`过程中是找不到yaml文件的。\n2. 把yaml放在根目录下，能找到文件，但是找不到变量的键，1中也会有此种情况。\n3. 直接把数据放在`站点配置文件`中，可用找到变量并引用其值，但是只能硬编码，不能动态地找到变量，因为js中的变量类型是字符串\n\n{% codeblock lang:javascript themes/next/scripts/include-variable.js %}\nhexo.extend.tag.register('variable', function(args) {\n    // 这里 传入的变量 args[0] 类型是字符串，所以不能和 js 语句相连接，如：hexo.config.data.args[0]\n    // `hexo g`过程中打印下列信息，也就是执行该文件\n    console.log(\"------------------variable---------------------\");\n    console.log(args[0])\n    console.log(hexo.config.url)\n    console.log(hexo.config.data.iOS)\n    // return `<img src=\"` + args[0] + `\" />`;\n    return ``+hexo.config.data.iOS;\n  });\n{% endcodeblock %}\n\n## 关于代码块附加说明的样式\n\n在代码高亮主题`night bright` 下，使用`{% raw %}{% codeblock %} {% endcodeblock %}{% endraw %}`添加说明后，页面显示字体颜色和背景相近，不容易分辨，可以更改css样式来解决这一问题：\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-05-codeblock-caption.jpg 540 280 %}\n\n{% codeblock lang:styl public/css/main.css %}\nif $highlight_theme == \"night bright\"\n  $highlight-background   = #000000\n  $highlight-current-line = #2a2a2a\n  $highlight-selection    = #424242\n  $highlight-foreground   = #555  /* #eaeaea */\n  $highlight-comment      = #969896\n  $highlight-red          = #d54e53\n  // ……\n{% endcodeblock %}\n\n\n# 配置与美化\n\n\n## 图片并排\n\nHexo默认情况下是不能让图片并排显示的，这里需要更改一下设置，将下方代码块的两行注释掉即可。\nMarkdown中的语法`{% raw %}{% gp 1-n %} {% endgp %}{% endraw %}`，n代表需要并排的图片个数。\n\n{% note warning %}\n不可在行内使用单反引号引用标签插件，否则会被hexo理解为插入标签。\n{% endnote %}\n\n{% codeblock lang:javascript next/source/css/_common/components/tags/group-pictures.styl %}\n.page-post-detail .post-body .group-picture-column {\n  // float: none;\n  margin-top: 10px;\n  // width: auto !important;\n  img { margin: 0 auto; }\n}\n{% endcodeblock %}\n\n当图片设置为并排显示以后，不能使用\"fancybox\"的预览功能，要在另一个文件中注释掉一句代码：\n\n{% codeblock lang:javascript themes/next/source/js/src/utils.js %}\nwrapImageWithFancyBox: function() {\n    $('.content img')\n      .not(':hidden')\n      // .not('.group-picture img, .post-gallery img')\n      .each(function() {\n{% endcodeblock %}\n\n## 一言\n\n来自这里：[ouuan](https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）)\n\n1. 在代码所示文件中找到这一字段：`<aside id=\"sidebar\" class=\"sidebar\">`，然后在下边粘贴。\n{% code lang:html themes/next/layout/_macro/sidebar.swig %}\n<!-- \n<aside id=\"sidebar\" class=\"sidebar\">\n -->\n<!-- 一言 start -->\n<div class=\"sidebar-inner\">\n    <div>\n        <div style=\"display: table-cell;vertical-align: top; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\">“</div>\n        <div style=\"display: table-cell;text-align: left; vertical-align: middle; text-indent: 2em; padding: 0.8em 0.2em 1em 0.2em\"><b><span style=\"color:burlywood;\"><span id=\"hitokoto-content\"></span></span></b></div>\n        <div style=\"display: table-cell; vertical-align: bottom; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\">”</div>\n    </div>\n    <div style=\"text-align: right; font-size: 0.8em; color: black;\" id=\"hitokoto-from\"></div>\n    <div style=\"margin-top: 15px; font-size: 0.8em; color: black;\"><a href=\"https://hitokoto.cn/\">Hitokoto</a></div>\n</div>\n<div style=\"height: 15px\"></div>\n<!-- 一言 end -->\n{% endcode %}\n\n1. \n{% code lang:html themes/next/layout/_scripts/commons.swig %}\n<script type=\"text/javascript\">\n    $.get('https://v1.hitokoto.cn/?c=a', function (data) {\n        $('#hitokoto-content').css('display', '').text(data.hitokoto);\n        $('#hitokoto-from').css('display', '').text('——' + data.from);\n    });\n</script>\n{% endcode%}\n\n3. \n{% code lang:styl themes/next/source/css/_custom/custom.styl %}\n.sidebar {\n    background: rgba(0, 0, 0, 0);\n}\n{% endcode %}\n\n## 折叠块功能\n\n详细内容请见该[链接](https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html)\n\n{% fold 所涉及到的文件： %}\n+ themes\\next\\scripts\\tags.js\n+ themes\\next\\scripts\\fold.js\n+ themes\\next\\source\\js\\src\\post-details.js\n+ themes\\next\\source\\css\\_custom\\custom.styl\n{% endfold %}\n\n## 网页背景\n\n在[这里](https://yltx.cf/2019/01/18/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF)学到的背景图设置，看到其博客效果后向朋友学习了[如何去掉文章背景](#文章背景)。\n\n设置网页背景及文章透明度\n{% code lang:css themes/next/source/css/_custom/custom.styl %}\nbody {\n    background-image:url(/images/background/20180830_040329207_iOS.jpg);\n    background-repeat: no-repeat;  //\n    background-attachment:fixed;  // 背景图不滚动\n    background-size: cover;\n}\n.main-inner {\n    opacity: 0.8;  // 文章透明度\n}\n{% endcode %}\n\n## 文章背景\n\n去除背景只需要把该元素的`background`属性注释掉即可。\n\n{% note warning %}\n使用深色背景会造成博客阅读困难\n{% endnote %}\n\n1. 文章及文章预览\n\n{% code lang:css themes/next/source/css/_schemes/Pisces/_layout.styl%}\n.content-wrap {\n  float: right;\n  box-sizing: border-box;\n  padding: $content-desktop-padding;\n  width: $content-wrap;\n  // background: white;\n  min-height: 700px;\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n  // ……\n  }\n{% endcode %}\n\n2. 阅读全文按钮\n\n{% code lang:css themes/next/source/css/_common/components/buttons.styl %}\n.btn {\n  display: inline-block;\n  padding: 0 20px;\n  font-size: $btn-default-font-size;\n  color: $btn-default-color;\n  // background: $btn-default-bg;\n  border: $btn-default-border-width solid $btn-default-border-color;\n  text-decoration: none;\n  border-radius: $btn-default-radius;\n  transition-property: background-color;\n  the-transition();\n  line-height: 2;\n  // ……\n}\n{% endcode %}\n\n# 标签插件\n\n## 笔记及其样式\n\n使用方式\n`{% raw %}{% note class_name %} Content (md partial supported) {% endnote %}{% endraw %}`\n\n{% note default %} default {% endnote %}\n{% note primary %} primary {% endnote %}\n{% note success %} success {% endnote %}\n{% note info %} info {% endnote %}\n{% note warning %} warning {% endnote %}\n{% note danger %} danger {% endnote %}\n\n\n## Gist\n\n`{% raw %}{% gist gist_id file_name %}{% endraw %}`\n\n{% fold 点击查看gist %}\n{% gist 19169c91a19ab7580e4678e4ed25375f extensions.json %}\n{% endfold %}\n\n## swig标签\n\n{% raw %}{% raw %}\ncontent\n{% endraw %}{% endraw %}\n\n\n\n# 接下来\n\n\n\n## 浮动插入图片，[像这个](https://notes.iissnan.com/2016/next-documentations-reload/#前季剧情回顾)\n\n## 无法访问404\n\n只能以`localhost:4000/404.html`的方式访问\n","slug":"start-hexo","published":1,"updated":"2019-03-25T16:44:47.957Z","layout":"post","photos":[],"link":"","_id":"cjwj070fc003mm8zafxbvt5mo","content":"<blockquote class=\"blockquote-center\"><p>Hello Hexo! </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h1 id=\"填坑\"><a href=\"#填坑\" class=\"headerlink\" title=\"填坑\"></a>填坑</h1><h2 id=\"Markdown中不能使用变量\"><a href=\"#Markdown中不能使用变量\" class=\"headerlink\" title=\"Markdown中不能使用变量\"></a>Markdown中不能使用变量</h2><p><code>Ruby-Jekyll</code>环境下，是可以直接在markdown中插入yaml中定义的变量的，所以就可以把OSS(COS)存储的图片链接放到yaml里，方便管理。从Jekyll转到Hexo发现在markdown中使用变量是行不通的，但是知道了半点解决办法——注册插件：<a href=\"https://github.com/hexojs/hexo/issues/2756\" target=\"_blank\" rel=\"noopener\">GitHub</a>和<a href=\"https://www.zhihu.com/question/264598381\" target=\"_blank\" rel=\"noopener\">知乎</a>的解决方案。在此方案下我做了一些不完全的测试：</p>\n<ol>\n<li>在<code>source/_data</code>目录下新建文件夹并有序存放yaml文件，在<code>hexo generate</code>过程中是找不到yaml文件的。</li>\n<li>把yaml放在根目录下，能找到文件，但是找不到变量的键，1中也会有此种情况。</li>\n<li>直接把数据放在<code>站点配置文件</code>中，可用找到变量并引用其值，但是只能硬编码，不能动态地找到变量，因为js中的变量类型是字符串</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption><span>themes/next/scripts/include-variable.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'variable'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里 传入的变量 args[0] 类型是字符串，所以不能和 js 语句相连接，如：hexo.config.data.args[0]</span></span><br><span class=\"line\">    <span class=\"comment\">// `hexo g`过程中打印下列信息，也就是执行该文件</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"------------------variable---------------------\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(hexo.config.url)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(hexo.config.data.iOS)</span><br><span class=\"line\">    <span class=\"comment\">// return `&lt;img src=\"` + args[0] + `\" /&gt;`;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">``</span>+hexo.config.data.iOS;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于代码块附加说明的样式\"><a href=\"#关于代码块附加说明的样式\" class=\"headerlink\" title=\"关于代码块附加说明的样式\"></a>关于代码块附加说明的样式</h2><p>在代码高亮主题<code>night bright</code> 下，使用<code>{% codeblock %} {% endcodeblock %}</code>添加说明后，页面显示字体颜色和背景相近，不容易分辨，可以更改css样式来解决这一问题：</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-05-codeblock-caption.jpg\" width=\"540\" height=\"280\">\n\n<figure class=\"highlight styl\"><figcaption><span>public/css/main.css</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"variable\">$highlight_theme</span> == <span class=\"string\">\"night bright\"</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-<span class=\"attribute\">background</span>   = <span class=\"number\">#000000</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-current-line = <span class=\"number\">#2a2a2a</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-selection    = <span class=\"number\">#424242</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-foreground   = <span class=\"number\">#555</span>  <span class=\"comment\">/* #eaeaea */</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-comment      = <span class=\"number\">#969896</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-red          = <span class=\"number\">#d54e53</span></span><br><span class=\"line\">  <span class=\"comment\">// ……</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"配置与美化\"><a href=\"#配置与美化\" class=\"headerlink\" title=\"配置与美化\"></a>配置与美化</h1><h2 id=\"图片并排\"><a href=\"#图片并排\" class=\"headerlink\" title=\"图片并排\"></a>图片并排</h2><p>Hexo默认情况下是不能让图片并排显示的，这里需要更改一下设置，将下方代码块的两行注释掉即可。<br>Markdown中的语法<code>{% gp 1-n %} {% endgp %}</code>，n代表需要并排的图片个数。</p>\n<div class=\"note warning\">\n            <p>不可在行内使用单反引号引用标签插件，否则会被hexo理解为插入标签。</p>\n          </div>\n\n<figure class=\"highlight javascript\"><figcaption><span>next/source/css/_common/components/tags/group-pictures.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.page-post-detail .post-body .group-picture-column &#123;</span><br><span class=\"line\">  <span class=\"comment\">// float: none;</span></span><br><span class=\"line\">  margin-top: <span class=\"number\">10</span>px;</span><br><span class=\"line\">  <span class=\"comment\">// width: auto !important;</span></span><br><span class=\"line\">  img &#123; <span class=\"attr\">margin</span>: <span class=\"number\">0</span> auto; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当图片设置为并排显示以后，不能使用”fancybox”的预览功能，要在另一个文件中注释掉一句代码：</p>\n<figure class=\"highlight javascript\"><figcaption><span>themes/next/source/js/src/utils.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wrapImageWithFancyBox: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">'.content img'</span>)</span><br><span class=\"line\">      .not(<span class=\"string\">':hidden'</span>)</span><br><span class=\"line\">      <span class=\"comment\">// .not('.group-picture img, .post-gallery img')</span></span><br><span class=\"line\">      .each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一言\"><a href=\"#一言\" class=\"headerlink\" title=\"一言\"></a>一言</h2><p>来自这里：<a href=\"https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）\" target=\"_blank\" rel=\"noopener\">ouuan</a></p>\n<ol>\n<li><p>在代码所示文件中找到这一字段：<code>&lt;aside id=&quot;sidebar&quot; class=&quot;sidebar&quot;&gt;</code>，然后在下边粘贴。</p>\n<figure class=\"highlight html\"><figcaption><span>themes/next/layout/_macro/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">&lt;aside id=\"sidebar\" class=\"sidebar\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 一言 start --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sidebar-inner\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell;vertical-align: top; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\"</span>&gt;</span>“<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell;text-align: left; vertical-align: middle; text-indent: 2em; padding: 0.8em 0.2em 1em 0.2em\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:burlywood;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hitokoto-content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell; vertical-align: bottom; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\"</span>&gt;</span>”<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: right; font-size: 0.8em; color: black;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hitokoto-from\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 15px; font-size: 0.8em; color: black;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://hitokoto.cn/\"</span>&gt;</span>Hitokoto<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height: 15px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 一言 end --&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><figure class=\"highlight html\"><figcaption><span>themes/next/layout/_scripts/commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    $.<span class=\"keyword\">get</span>('https://v1.hitokoto.cn/?c=a', function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        $(<span class=\"string\">'#hitokoto-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(data.hitokoto);</span></span><br><span class=\"line\"><span class=\"javascript\">        $(<span class=\"string\">'#hitokoto-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + data.from);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><figure class=\"highlight styl\"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"折叠块功能\"><a href=\"#折叠块功能\" class=\"headerlink\" title=\"折叠块功能\"></a>折叠块功能</h2><p>详细内容请见该<a href=\"https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">所涉及到的文件：</div></div><div class=\"fold\">\n<ul>\n<li>themes\\next\\scripts\\tags.js</li>\n<li>themes\\next\\scripts\\fold.js</li>\n<li>themes\\next\\source\\js\\src\\post-details.js</li>\n<li>themes\\next\\source\\css_custom\\custom.styl</li>\n</ul>\n\n</div></div>\n\n<h2 id=\"网页背景\"><a href=\"#网页背景\" class=\"headerlink\" title=\"网页背景\"></a>网页背景</h2><p>在<a href=\"https://yltx.cf/2019/01/18/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF\" target=\"_blank\" rel=\"noopener\">这里</a>学到的背景图设置，看到其博客效果后向朋友学习了<a href=\"#文章背景\">如何去掉文章背景</a>。</p>\n<p>设置网页背景及文章透明度</p>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(/images/background/20180830_040329207_iOS.jpg);</span><br><span class=\"line\">    background-repeat: no-repeat;  //</span><br><span class=\"line\">    background-attachment:fixed;  // 背景图不滚动</span><br><span class=\"line\">    <span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">cover</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.main-inner</span> &#123;</span><br><span class=\"line\">    opacity: 0.8;  // 文章透明度</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文章背景\"><a href=\"#文章背景\" class=\"headerlink\" title=\"文章背景\"></a>文章背景</h2><p>去除背景只需要把该元素的<code>background</code>属性注释掉即可。</p>\n<div class=\"note warning\">\n            <p>使用深色背景会造成博客阅读困难</p>\n          </div>\n\n<ol>\n<li>文章及文章预览</li>\n</ol>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_schemes/Pisces/_layout.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: $content-desktop-padding;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: $content-wrap;</span><br><span class=\"line\">  // background: white;</span><br><span class=\"line\">  <span class=\"selector-tag\">min-height</span>: 700<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\">  // ……</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>阅读全文按钮</li>\n</ol>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_common/components/buttons.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: $btn-default-font-size;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: $btn-default-color;</span><br><span class=\"line\">  // background: $btn-default-bg;</span><br><span class=\"line\">  border: $btn-default-border-width solid $btn-default-border-color;</span><br><span class=\"line\">  <span class=\"selector-tag\">text-decoration</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">  border-radius: $btn-default-radius;</span><br><span class=\"line\">  <span class=\"selector-tag\">transition-property</span>: <span class=\"selector-tag\">background-color</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">the-transition</span>();</span><br><span class=\"line\">  <span class=\"selector-tag\">line-height</span>: 2;</span><br><span class=\"line\">  // ……</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"标签插件\"><a href=\"#标签插件\" class=\"headerlink\" title=\"标签插件\"></a>标签插件</h1><h2 id=\"笔记及其样式\"><a href=\"#笔记及其样式\" class=\"headerlink\" title=\"笔记及其样式\"></a>笔记及其样式</h2><p>使用方式<br><code>{% note class_name %} Content (md partial supported) {% endnote %}</code></p>\n<div class=\"note default\">\n            <p>default </p>\n          </div>\n<div class=\"note primary\">\n            <p>primary </p>\n          </div>\n<div class=\"note success\">\n            <p>success </p>\n          </div>\n<div class=\"note info\">\n            <p>info </p>\n          </div>\n<div class=\"note warning\">\n            <p>warning </p>\n          </div>\n<div class=\"note danger\">\n            <p>danger </p>\n          </div>\n\n\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p><code>{% gist gist_id file_name %}</code></p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">点击查看gist</div></div><div class=\"fold\">\n<script src=\"//gist.github.com/19169c91a19ab7580e4678e4ed25375f.js?file=extensions.json\"></script>\n</div></div>\n\n<h2 id=\"swig标签\"><a href=\"#swig标签\" class=\"headerlink\" title=\"swig标签\"></a>swig标签</h2>{% raw %}\ncontent\n{% endraw %}\n\n\n\n<h1 id=\"接下来\"><a href=\"#接下来\" class=\"headerlink\" title=\"接下来\"></a>接下来</h1><h2 id=\"浮动插入图片，像这个\"><a href=\"#浮动插入图片，像这个\" class=\"headerlink\" title=\"浮动插入图片，像这个\"></a>浮动插入图片，<a href=\"https://notes.iissnan.com/2016/next-documentations-reload/#前季剧情回顾\" target=\"_blank\" rel=\"noopener\">像这个</a></h2><h2 id=\"无法访问404\"><a href=\"#无法访问404\" class=\"headerlink\" title=\"无法访问404\"></a>无法访问404</h2><p>只能以<code>localhost:4000/404.html</code>的方式访问</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>Hello Hexo! </p>\n</blockquote>","more":"<h1 id=\"填坑\"><a href=\"#填坑\" class=\"headerlink\" title=\"填坑\"></a>填坑</h1><h2 id=\"Markdown中不能使用变量\"><a href=\"#Markdown中不能使用变量\" class=\"headerlink\" title=\"Markdown中不能使用变量\"></a>Markdown中不能使用变量</h2><p><code>Ruby-Jekyll</code>环境下，是可以直接在markdown中插入yaml中定义的变量的，所以就可以把OSS(COS)存储的图片链接放到yaml里，方便管理。从Jekyll转到Hexo发现在markdown中使用变量是行不通的，但是知道了半点解决办法——注册插件：<a href=\"https://github.com/hexojs/hexo/issues/2756\" target=\"_blank\" rel=\"noopener\">GitHub</a>和<a href=\"https://www.zhihu.com/question/264598381\" target=\"_blank\" rel=\"noopener\">知乎</a>的解决方案。在此方案下我做了一些不完全的测试：</p>\n<ol>\n<li>在<code>source/_data</code>目录下新建文件夹并有序存放yaml文件，在<code>hexo generate</code>过程中是找不到yaml文件的。</li>\n<li>把yaml放在根目录下，能找到文件，但是找不到变量的键，1中也会有此种情况。</li>\n<li>直接把数据放在<code>站点配置文件</code>中，可用找到变量并引用其值，但是只能硬编码，不能动态地找到变量，因为js中的变量类型是字符串</li>\n</ol>\n<figure class=\"highlight javascript\"><figcaption><span>themes/next/scripts/include-variable.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo.extend.tag.register(<span class=\"string\">'variable'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这里 传入的变量 args[0] 类型是字符串，所以不能和 js 语句相连接，如：hexo.config.data.args[0]</span></span><br><span class=\"line\">    <span class=\"comment\">// `hexo g`过程中打印下列信息，也就是执行该文件</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"------------------variable---------------------\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(args[<span class=\"number\">0</span>])</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(hexo.config.url)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(hexo.config.data.iOS)</span><br><span class=\"line\">    <span class=\"comment\">// return `&lt;img src=\"` + args[0] + `\" /&gt;`;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">``</span>+hexo.config.data.iOS;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于代码块附加说明的样式\"><a href=\"#关于代码块附加说明的样式\" class=\"headerlink\" title=\"关于代码块附加说明的样式\"></a>关于代码块附加说明的样式</h2><p>在代码高亮主题<code>night bright</code> 下，使用<code>{% codeblock %} {% endcodeblock %}</code>添加说明后，页面显示字体颜色和背景相近，不容易分辨，可以更改css样式来解决这一问题：</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-05-codeblock-caption.jpg\" width=\"540\" height=\"280\">\n\n<figure class=\"highlight styl\"><figcaption><span>public/css/main.css</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"variable\">$highlight_theme</span> == <span class=\"string\">\"night bright\"</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-<span class=\"attribute\">background</span>   = <span class=\"number\">#000000</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-current-line = <span class=\"number\">#2a2a2a</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-selection    = <span class=\"number\">#424242</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-foreground   = <span class=\"number\">#555</span>  <span class=\"comment\">/* #eaeaea */</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-comment      = <span class=\"number\">#969896</span></span><br><span class=\"line\">  <span class=\"variable\">$highlight</span>-red          = <span class=\"number\">#d54e53</span></span><br><span class=\"line\">  <span class=\"comment\">// ……</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"配置与美化\"><a href=\"#配置与美化\" class=\"headerlink\" title=\"配置与美化\"></a>配置与美化</h1><h2 id=\"图片并排\"><a href=\"#图片并排\" class=\"headerlink\" title=\"图片并排\"></a>图片并排</h2><p>Hexo默认情况下是不能让图片并排显示的，这里需要更改一下设置，将下方代码块的两行注释掉即可。<br>Markdown中的语法<code>{% gp 1-n %} {% endgp %}</code>，n代表需要并排的图片个数。</p>\n<div class=\"note warning\">\n            <p>不可在行内使用单反引号引用标签插件，否则会被hexo理解为插入标签。</p>\n          </div>\n\n<figure class=\"highlight javascript\"><figcaption><span>next/source/css/_common/components/tags/group-pictures.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.page-post-detail .post-body .group-picture-column &#123;</span><br><span class=\"line\">  <span class=\"comment\">// float: none;</span></span><br><span class=\"line\">  margin-top: <span class=\"number\">10</span>px;</span><br><span class=\"line\">  <span class=\"comment\">// width: auto !important;</span></span><br><span class=\"line\">  img &#123; <span class=\"attr\">margin</span>: <span class=\"number\">0</span> auto; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当图片设置为并排显示以后，不能使用”fancybox”的预览功能，要在另一个文件中注释掉一句代码：</p>\n<figure class=\"highlight javascript\"><figcaption><span>themes/next/source/js/src/utils.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wrapImageWithFancyBox: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">'.content img'</span>)</span><br><span class=\"line\">      .not(<span class=\"string\">':hidden'</span>)</span><br><span class=\"line\">      <span class=\"comment\">// .not('.group-picture img, .post-gallery img')</span></span><br><span class=\"line\">      .each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一言\"><a href=\"#一言\" class=\"headerlink\" title=\"一言\"></a>一言</h2><p>来自这里：<a href=\"https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）\" target=\"_blank\" rel=\"noopener\">ouuan</a></p>\n<ol>\n<li><p>在代码所示文件中找到这一字段：<code>&lt;aside id=&quot;sidebar&quot; class=&quot;sidebar&quot;&gt;</code>，然后在下边粘贴。</p>\n<figure class=\"highlight html\"><figcaption><span>themes/next/layout/_macro/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">&lt;aside id=\"sidebar\" class=\"sidebar\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 一言 start --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sidebar-inner\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell;vertical-align: top; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\"</span>&gt;</span>“<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell;text-align: left; vertical-align: middle; text-indent: 2em; padding: 0.8em 0.2em 1em 0.2em\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:burlywood;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hitokoto-content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: table-cell; vertical-align: bottom; color:#B2B7F2;font-size:24px;font-family:'Times New Roman',serif;font-weight:bold;text-align:left;\"</span>&gt;</span>”<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: right; font-size: 0.8em; color: black;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hitokoto-from\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 15px; font-size: 0.8em; color: black;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://hitokoto.cn/\"</span>&gt;</span>Hitokoto<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height: 15px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 一言 end --&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><figure class=\"highlight html\"><figcaption><span>themes/next/layout/_scripts/commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    $.<span class=\"keyword\">get</span>('https://v1.hitokoto.cn/?c=a', function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        $(<span class=\"string\">'#hitokoto-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(data.hitokoto);</span></span><br><span class=\"line\"><span class=\"javascript\">        $(<span class=\"string\">'#hitokoto-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + data.from);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><figure class=\"highlight styl\"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: rgba(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"折叠块功能\"><a href=\"#折叠块功能\" class=\"headerlink\" title=\"折叠块功能\"></a>折叠块功能</h2><p>详细内容请见该<a href=\"https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">所涉及到的文件：</div></div><div class=\"fold\">\n<ul>\n<li>themes\\next\\scripts\\tags.js</li>\n<li>themes\\next\\scripts\\fold.js</li>\n<li>themes\\next\\source\\js\\src\\post-details.js</li>\n<li>themes\\next\\source\\css_custom\\custom.styl</li>\n</ul>\n\n</div></div>\n\n<h2 id=\"网页背景\"><a href=\"#网页背景\" class=\"headerlink\" title=\"网页背景\"></a>网页背景</h2><p>在<a href=\"https://yltx.cf/2019/01/18/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E5%8D%9A%E5%AE%A2%E8%83%8C%E6%99%AF\" target=\"_blank\" rel=\"noopener\">这里</a>学到的背景图设置，看到其博客效果后向朋友学习了<a href=\"#文章背景\">如何去掉文章背景</a>。</p>\n<p>设置网页背景及文章透明度</p>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>:<span class=\"built_in\">url</span>(/images/background/20180830_040329207_iOS.jpg);</span><br><span class=\"line\">    background-repeat: no-repeat;  //</span><br><span class=\"line\">    background-attachment:fixed;  // 背景图不滚动</span><br><span class=\"line\">    <span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">cover</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.main-inner</span> &#123;</span><br><span class=\"line\">    opacity: 0.8;  // 文章透明度</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文章背景\"><a href=\"#文章背景\" class=\"headerlink\" title=\"文章背景\"></a>文章背景</h2><p>去除背景只需要把该元素的<code>background</code>属性注释掉即可。</p>\n<div class=\"note warning\">\n            <p>使用深色背景会造成博客阅读困难</p>\n          </div>\n\n<ol>\n<li>文章及文章预览</li>\n</ol>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_schemes/Pisces/_layout.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content-wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: $content-desktop-padding;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: $content-wrap;</span><br><span class=\"line\">  // background: white;</span><br><span class=\"line\">  <span class=\"selector-tag\">min-height</span>: 700<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\">  // ……</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>阅读全文按钮</li>\n</ol>\n<figure class=\"highlight css\"><figcaption><span>themes/next/source/css/_common/components/buttons.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: $btn-default-font-size;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: $btn-default-color;</span><br><span class=\"line\">  // background: $btn-default-bg;</span><br><span class=\"line\">  border: $btn-default-border-width solid $btn-default-border-color;</span><br><span class=\"line\">  <span class=\"selector-tag\">text-decoration</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">  border-radius: $btn-default-radius;</span><br><span class=\"line\">  <span class=\"selector-tag\">transition-property</span>: <span class=\"selector-tag\">background-color</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">the-transition</span>();</span><br><span class=\"line\">  <span class=\"selector-tag\">line-height</span>: 2;</span><br><span class=\"line\">  // ……</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"标签插件\"><a href=\"#标签插件\" class=\"headerlink\" title=\"标签插件\"></a>标签插件</h1><h2 id=\"笔记及其样式\"><a href=\"#笔记及其样式\" class=\"headerlink\" title=\"笔记及其样式\"></a>笔记及其样式</h2><p>使用方式<br><code>{% note class_name %} Content (md partial supported) {% endnote %}</code></p>\n<div class=\"note default\">\n            <p>default </p>\n          </div>\n<div class=\"note primary\">\n            <p>primary </p>\n          </div>\n<div class=\"note success\">\n            <p>success </p>\n          </div>\n<div class=\"note info\">\n            <p>info </p>\n          </div>\n<div class=\"note warning\">\n            <p>warning </p>\n          </div>\n<div class=\"note danger\">\n            <p>danger </p>\n          </div>\n\n\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p><code>{% gist gist_id file_name %}</code></p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">点击查看gist</div></div><div class=\"fold\">\n<script src=\"//gist.github.com/19169c91a19ab7580e4678e4ed25375f.js?file=extensions.json\"></script>\n</div></div>\n\n<h2 id=\"swig标签\"><a href=\"#swig标签\" class=\"headerlink\" title=\"swig标签\"></a>swig标签</h2>{% raw %}\ncontent\n{% endraw %}\n\n\n\n<h1 id=\"接下来\"><a href=\"#接下来\" class=\"headerlink\" title=\"接下来\"></a>接下来</h1><h2 id=\"浮动插入图片，像这个\"><a href=\"#浮动插入图片，像这个\" class=\"headerlink\" title=\"浮动插入图片，像这个\"></a>浮动插入图片，<a href=\"https://notes.iissnan.com/2016/next-documentations-reload/#前季剧情回顾\" target=\"_blank\" rel=\"noopener\">像这个</a></h2><h2 id=\"无法访问404\"><a href=\"#无法访问404\" class=\"headerlink\" title=\"无法访问404\"></a>无法访问404</h2><p>只能以<code>localhost:4000/404.html</code>的方式访问</p>"},{"title":"Loline——基于flask的RESTful API","date":"2019-03-08T02:01:33.000Z","_content":"\n# Loline\n\n受于[一言](https://hitokoto.cn)的启发，利用今天一下午的时间利用flask建立了一个轻量级的RESTful API——Loline。其内容大抵是英雄联盟143位英雄的中英文绰号、名字和pick台词。\n\n<!-- more -->\n\n{% note warning %}\n下文所列出的部分网站可能需要科学上网才能访问\n{% endnote %}\n\n一开始要收集到所有英雄的全部台词的，发现收集这些东西真的很难。\n\n## 中文名称及绰号\n\n这个是在鹅厂联盟官网[资料库](https://lol.qq.com/data/info-heros.shtml)收集的，因为用了不懂的技术，网页源代码里边没有要找的数据，自然也不能用简单的爬虫来做这些事。还是浏览器开发者工具帮了忙：在Elements一栏可以复制想要的数据，然后保存到本地文件，就可以用Beautiful Soup来提取数据了。这里提取到的是中英文名称及中文绰号，然后根据英文名称去下一步爬取英文绰号。\n\n## 英文绰号\n一开始去了拳头的[开发网站](https://developer.riotgames.com/)，发现根本没有提供这种接口。后来发现在[GamePedia](https://lol.gamepedia.com/)的英雄详情页有需要的东西，但也仅仅是lol.qq.com的英文版（能用爬虫解决）。写好爬虫脚本，来回更改执行好几次才把英文绰号保存下来。\n{% note success %}\n在GemaPedia-英雄联盟的主页仔细看了一下，也没找到英雄详细信息的入口，得在搜索栏搜索英雄的名字才能找到，例如：[Teemo](https://lol.gamepedia.com/Teemo)。\n{% endnote %}\n{% img Champions https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-champions-lol-na.jpg 500 250 英雄联盟英文网站 %}\n{% img 阿狸 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-ahri-champions-lol-na.jpg 500 250 示例-阿狸 %}\n{% img 拳头开发者网站 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-developer-lol.jpg 500 250 拳头开发者网站 %}\n{% img GamePedia-LOL https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia.jpg 500 250 lol.gamepedia.com %}\n{% img GamePedia-提莫 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia-teemo.jpg 500 250 示例-提莫 %}\n\n## Pick台词\n\n然后又是pick台词的收集工作，这是最令人头疼的地方。在百度云搜素引擎上找到了大多数英雄的Word版英雄台词，但因为建立日期比较早，有很多台词已经更改了，再加上处理量比较大、需求量不高，就暂时搁置了那个Word。但总得有点内容吧，就选定了Pick英雄的台词，大都是百度谷歌搜集而来。因为英雄改版重做等原因，有些已经不适用了，然后自己启动游戏训练模式，选好英雄听语音，然后立马关掉……不知道百度、谷歌、开关游戏多少次，才勉强把143位英雄的台词收集完。因为有的英雄台词不太熟悉，可能有的已经过时而没有更改，这就等到发现再说吧。\n\n## Api的使用\n\n{% note danger %}\n使用方式经多次尝试，已经更新为{% post_link many-ways-to-loline 新的方式%}。\n{% endnote %}\n\n使用方法是同[一言](/2019/03/05/start-hexo/#一言)一样 ，你同样可以参照[原文作者](https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）)的方式，但只需要根据下方代码把`themes/next/layout/_macro/sidebar.swig`中的id和Hitokoto的小标题改一下即可。\n\n{% code lang:html themes/next/layout/_scripts/commons.swig %}\n<script type=\"text/javascript\">\n\t$.get('http://149.129.113.178:5000/', function (data) {\n    console.log('----------------------------------------')\n    console.log(data)\n\t\t$('#loline-content').css('display', '').text(data.words);\n\t\t$('#loline-from').css('display', '').text('——' + data.title_zh+' '+data.name_zh);\n\t});\n{% endcode %}\n\n## 代码\n\n收集数据的时候也写了不少的代码，但保存下来数据之后其中大多数已经没有用了，所以这里只贴出来了Flask的代码。需要请邮件联系获取:smile:\n\n{% code lang:python %}\n#! py -3\n# -*- coding: utf-8 -*-\n\nimport json\nimport random\nfrom util import load_champions\nfrom flask import Flask, jsonify, abort, make_response, request\n\n# http://www.pythondoc.com/flask-restful/first.html\napp = Flask(__name__)\napp.config['JSON_AS_ASCII'] = False\nchampions = load_champions(\"data/champions.json\")\n\n@app.route('/', methods=['GET'])\ndef index():\n    id_ = random.randint(1, len(champions))\n    print(id_)\n    champion = list(filter(lambda t: t['id'] == id_, champions))\n    return jsonify(champion[0])\n\ndef after_requests(response):\n    response.headers['Access-Control-Allow-Origin'] = '*'\n    response.headers['Access-Control-Allow-Methods'] = 'GET'\n    response.headers['Access-Control-Allow-Headers'] = 'Content-Type,Authorization'\n    return response\n\n@app.errorhandler(404)\ndef not_found(error):\n    return make_response(jsonify({'error': 'Not Found'}), 404)\n\nif __name__ == '__main__':\n    app.after_request(after_requests)\n    app.run(debug=True)\n\n{% endcode %}\n","source":"_posts/2019-03-08-loline.md","raw":"---\ntitle: Loline——基于flask的RESTful API\ndate: 2019-03-08 02:01:33\ncategory:\n- [Python]\n- [游戏]\ntags:\n- Python\n- Loline\n- Flask\n- json\n- 英雄联盟\n---\n\n# Loline\n\n受于[一言](https://hitokoto.cn)的启发，利用今天一下午的时间利用flask建立了一个轻量级的RESTful API——Loline。其内容大抵是英雄联盟143位英雄的中英文绰号、名字和pick台词。\n\n<!-- more -->\n\n{% note warning %}\n下文所列出的部分网站可能需要科学上网才能访问\n{% endnote %}\n\n一开始要收集到所有英雄的全部台词的，发现收集这些东西真的很难。\n\n## 中文名称及绰号\n\n这个是在鹅厂联盟官网[资料库](https://lol.qq.com/data/info-heros.shtml)收集的，因为用了不懂的技术，网页源代码里边没有要找的数据，自然也不能用简单的爬虫来做这些事。还是浏览器开发者工具帮了忙：在Elements一栏可以复制想要的数据，然后保存到本地文件，就可以用Beautiful Soup来提取数据了。这里提取到的是中英文名称及中文绰号，然后根据英文名称去下一步爬取英文绰号。\n\n## 英文绰号\n一开始去了拳头的[开发网站](https://developer.riotgames.com/)，发现根本没有提供这种接口。后来发现在[GamePedia](https://lol.gamepedia.com/)的英雄详情页有需要的东西，但也仅仅是lol.qq.com的英文版（能用爬虫解决）。写好爬虫脚本，来回更改执行好几次才把英文绰号保存下来。\n{% note success %}\n在GemaPedia-英雄联盟的主页仔细看了一下，也没找到英雄详细信息的入口，得在搜索栏搜索英雄的名字才能找到，例如：[Teemo](https://lol.gamepedia.com/Teemo)。\n{% endnote %}\n{% img Champions https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-champions-lol-na.jpg 500 250 英雄联盟英文网站 %}\n{% img 阿狸 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-ahri-champions-lol-na.jpg 500 250 示例-阿狸 %}\n{% img 拳头开发者网站 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-developer-lol.jpg 500 250 拳头开发者网站 %}\n{% img GamePedia-LOL https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia.jpg 500 250 lol.gamepedia.com %}\n{% img GamePedia-提莫 https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia-teemo.jpg 500 250 示例-提莫 %}\n\n## Pick台词\n\n然后又是pick台词的收集工作，这是最令人头疼的地方。在百度云搜素引擎上找到了大多数英雄的Word版英雄台词，但因为建立日期比较早，有很多台词已经更改了，再加上处理量比较大、需求量不高，就暂时搁置了那个Word。但总得有点内容吧，就选定了Pick英雄的台词，大都是百度谷歌搜集而来。因为英雄改版重做等原因，有些已经不适用了，然后自己启动游戏训练模式，选好英雄听语音，然后立马关掉……不知道百度、谷歌、开关游戏多少次，才勉强把143位英雄的台词收集完。因为有的英雄台词不太熟悉，可能有的已经过时而没有更改，这就等到发现再说吧。\n\n## Api的使用\n\n{% note danger %}\n使用方式经多次尝试，已经更新为{% post_link many-ways-to-loline 新的方式%}。\n{% endnote %}\n\n使用方法是同[一言](/2019/03/05/start-hexo/#一言)一样 ，你同样可以参照[原文作者](https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）)的方式，但只需要根据下方代码把`themes/next/layout/_macro/sidebar.swig`中的id和Hitokoto的小标题改一下即可。\n\n{% code lang:html themes/next/layout/_scripts/commons.swig %}\n<script type=\"text/javascript\">\n\t$.get('http://149.129.113.178:5000/', function (data) {\n    console.log('----------------------------------------')\n    console.log(data)\n\t\t$('#loline-content').css('display', '').text(data.words);\n\t\t$('#loline-from').css('display', '').text('——' + data.title_zh+' '+data.name_zh);\n\t});\n{% endcode %}\n\n## 代码\n\n收集数据的时候也写了不少的代码，但保存下来数据之后其中大多数已经没有用了，所以这里只贴出来了Flask的代码。需要请邮件联系获取:smile:\n\n{% code lang:python %}\n#! py -3\n# -*- coding: utf-8 -*-\n\nimport json\nimport random\nfrom util import load_champions\nfrom flask import Flask, jsonify, abort, make_response, request\n\n# http://www.pythondoc.com/flask-restful/first.html\napp = Flask(__name__)\napp.config['JSON_AS_ASCII'] = False\nchampions = load_champions(\"data/champions.json\")\n\n@app.route('/', methods=['GET'])\ndef index():\n    id_ = random.randint(1, len(champions))\n    print(id_)\n    champion = list(filter(lambda t: t['id'] == id_, champions))\n    return jsonify(champion[0])\n\ndef after_requests(response):\n    response.headers['Access-Control-Allow-Origin'] = '*'\n    response.headers['Access-Control-Allow-Methods'] = 'GET'\n    response.headers['Access-Control-Allow-Headers'] = 'Content-Type,Authorization'\n    return response\n\n@app.errorhandler(404)\ndef not_found(error):\n    return make_response(jsonify({'error': 'Not Found'}), 404)\n\nif __name__ == '__main__':\n    app.after_request(after_requests)\n    app.run(debug=True)\n\n{% endcode %}\n","slug":"loline","published":1,"updated":"2019-03-10T09:14:32.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fe003qm8zaf0egriux","content":"<h1 id=\"Loline\"><a href=\"#Loline\" class=\"headerlink\" title=\"Loline\"></a>Loline</h1><p>受于<a href=\"https://hitokoto.cn\" target=\"_blank\" rel=\"noopener\">一言</a>的启发，利用今天一下午的时间利用flask建立了一个轻量级的RESTful API——Loline。其内容大抵是英雄联盟143位英雄的中英文绰号、名字和pick台词。</p>\n<a id=\"more\"></a>\n\n<div class=\"note warning\">\n            <p>下文所列出的部分网站可能需要科学上网才能访问</p>\n          </div>\n\n<p>一开始要收集到所有英雄的全部台词的，发现收集这些东西真的很难。</p>\n<h2 id=\"中文名称及绰号\"><a href=\"#中文名称及绰号\" class=\"headerlink\" title=\"中文名称及绰号\"></a>中文名称及绰号</h2><p>这个是在鹅厂联盟官网<a href=\"https://lol.qq.com/data/info-heros.shtml\" target=\"_blank\" rel=\"noopener\">资料库</a>收集的，因为用了不懂的技术，网页源代码里边没有要找的数据，自然也不能用简单的爬虫来做这些事。还是浏览器开发者工具帮了忙：在Elements一栏可以复制想要的数据，然后保存到本地文件，就可以用Beautiful Soup来提取数据了。这里提取到的是中英文名称及中文绰号，然后根据英文名称去下一步爬取英文绰号。</p>\n<h2 id=\"英文绰号\"><a href=\"#英文绰号\" class=\"headerlink\" title=\"英文绰号\"></a>英文绰号</h2><p>一开始去了拳头的<a href=\"https://developer.riotgames.com/\" target=\"_blank\" rel=\"noopener\">开发网站</a>，发现根本没有提供这种接口。后来发现在<a href=\"https://lol.gamepedia.com/\" target=\"_blank\" rel=\"noopener\">GamePedia</a>的英雄详情页有需要的东西，但也仅仅是lol.qq.com的英文版（能用爬虫解决）。写好爬虫脚本，来回更改执行好几次才把英文绰号保存下来。</p>\n<div class=\"note success\">\n            <p>在GemaPedia-英雄联盟的主页仔细看了一下，也没找到英雄详细信息的入口，得在搜索栏搜索英雄的名字才能找到，例如：<a href=\"https://lol.gamepedia.com/Teemo\" target=\"_blank\" rel=\"noopener\">Teemo</a>。</p>\n          </div>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-champions-lol-na.jpg\" class=\"Champions\" width=\"500\" height=\"250\" title=\"英雄联盟英文网站\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-ahri-champions-lol-na.jpg\" class=\"阿狸\" width=\"500\" height=\"250\" title=\"示例-阿狸\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-developer-lol.jpg\" class=\"拳头开发者网站\" width=\"500\" height=\"250\" title=\"拳头开发者网站\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia.jpg\" class=\"GamePedia-LOL\" width=\"500\" height=\"250\" title=\"lol.gamepedia.com\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia-teemo.jpg\" class=\"GamePedia-提莫\" width=\"500\" height=\"250\" title=\"示例-提莫\">\n\n<h2 id=\"Pick台词\"><a href=\"#Pick台词\" class=\"headerlink\" title=\"Pick台词\"></a>Pick台词</h2><p>然后又是pick台词的收集工作，这是最令人头疼的地方。在百度云搜素引擎上找到了大多数英雄的Word版英雄台词，但因为建立日期比较早，有很多台词已经更改了，再加上处理量比较大、需求量不高，就暂时搁置了那个Word。但总得有点内容吧，就选定了Pick英雄的台词，大都是百度谷歌搜集而来。因为英雄改版重做等原因，有些已经不适用了，然后自己启动游戏训练模式，选好英雄听语音，然后立马关掉……不知道百度、谷歌、开关游戏多少次，才勉强把143位英雄的台词收集完。因为有的英雄台词不太熟悉，可能有的已经过时而没有更改，这就等到发现再说吧。</p>\n<h2 id=\"Api的使用\"><a href=\"#Api的使用\" class=\"headerlink\" title=\"Api的使用\"></a>Api的使用</h2><div class=\"note danger\">\n            <p>使用方式经多次尝试，已经更新为<a href=\"/2019/03/10/many-ways-to-loline/\" title=\"新的方式\">新的方式</a>。</p>\n          </div>\n\n<p>使用方法是同<a href=\"/2019/03/05/start-hexo/#一言\">一言</a>一样 ，你同样可以参照<a href=\"https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）\" target=\"_blank\" rel=\"noopener\">原文作者</a>的方式，但只需要根据下方代码把<code>themes/next/layout/_macro/sidebar.swig</code>中的id和Hitokoto的小标题改一下即可。</p>\n<figure class=\"highlight html\"><figcaption><span>themes/next/layout/_scripts/commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t$.<span class=\"keyword\">get</span>('http://149.129.113.178:5000/', function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'----------------------------------------'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(data)</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(data.words);</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + data.title_zh+<span class=\"string\">' '</span>+data.name_zh);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>收集数据的时候也写了不少的代码，但保存下来数据之后其中大多数已经没有用了，所以这里只贴出来了Flask的代码。需要请邮件联系获取:smile:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! py -3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">from</span> util <span class=\"keyword\">import</span> load_champions</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, jsonify, abort, make_response, request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># http://www.pythondoc.com/flask-restful/first.html</span></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config[<span class=\"string\">'JSON_AS_ASCII'</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">champions = load_champions(<span class=\"string\">\"data/champions.json\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/', methods=['GET'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    id_ = random.randint(<span class=\"number\">1</span>, len(champions))</span><br><span class=\"line\">    print(id_)</span><br><span class=\"line\">    champion = list(filter(<span class=\"keyword\">lambda</span> t: t[<span class=\"string\">'id'</span>] == id_, champions))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(champion[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">after_requests</span><span class=\"params\">(response)</span>:</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Origin'</span>] = <span class=\"string\">'*'</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Methods'</span>] = <span class=\"string\">'GET'</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Headers'</span>] = <span class=\"string\">'Content-Type,Authorization'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.errorhandler(404)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_found</span><span class=\"params\">(error)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> make_response(jsonify(&#123;<span class=\"string\">'error'</span>: <span class=\"string\">'Not Found'</span>&#125;), <span class=\"number\">404</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.after_request(after_requests)</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<h1 id=\"Loline\"><a href=\"#Loline\" class=\"headerlink\" title=\"Loline\"></a>Loline</h1><p>受于<a href=\"https://hitokoto.cn\" target=\"_blank\" rel=\"noopener\">一言</a>的启发，利用今天一下午的时间利用flask建立了一个轻量级的RESTful API——Loline。其内容大抵是英雄联盟143位英雄的中英文绰号、名字和pick台词。</p>","more":"<div class=\"note warning\">\n            <p>下文所列出的部分网站可能需要科学上网才能访问</p>\n          </div>\n\n<p>一开始要收集到所有英雄的全部台词的，发现收集这些东西真的很难。</p>\n<h2 id=\"中文名称及绰号\"><a href=\"#中文名称及绰号\" class=\"headerlink\" title=\"中文名称及绰号\"></a>中文名称及绰号</h2><p>这个是在鹅厂联盟官网<a href=\"https://lol.qq.com/data/info-heros.shtml\" target=\"_blank\" rel=\"noopener\">资料库</a>收集的，因为用了不懂的技术，网页源代码里边没有要找的数据，自然也不能用简单的爬虫来做这些事。还是浏览器开发者工具帮了忙：在Elements一栏可以复制想要的数据，然后保存到本地文件，就可以用Beautiful Soup来提取数据了。这里提取到的是中英文名称及中文绰号，然后根据英文名称去下一步爬取英文绰号。</p>\n<h2 id=\"英文绰号\"><a href=\"#英文绰号\" class=\"headerlink\" title=\"英文绰号\"></a>英文绰号</h2><p>一开始去了拳头的<a href=\"https://developer.riotgames.com/\" target=\"_blank\" rel=\"noopener\">开发网站</a>，发现根本没有提供这种接口。后来发现在<a href=\"https://lol.gamepedia.com/\" target=\"_blank\" rel=\"noopener\">GamePedia</a>的英雄详情页有需要的东西，但也仅仅是lol.qq.com的英文版（能用爬虫解决）。写好爬虫脚本，来回更改执行好几次才把英文绰号保存下来。</p>\n<div class=\"note success\">\n            <p>在GemaPedia-英雄联盟的主页仔细看了一下，也没找到英雄详细信息的入口，得在搜索栏搜索英雄的名字才能找到，例如：<a href=\"https://lol.gamepedia.com/Teemo\" target=\"_blank\" rel=\"noopener\">Teemo</a>。</p>\n          </div>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-champions-lol-na.jpg\" class=\"Champions\" width=\"500\" height=\"250\" title=\"英雄联盟英文网站\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-ahri-champions-lol-na.jpg\" class=\"阿狸\" width=\"500\" height=\"250\" title=\"示例-阿狸\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-developer-lol.jpg\" class=\"拳头开发者网站\" width=\"500\" height=\"250\" title=\"拳头开发者网站\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia.jpg\" class=\"GamePedia-LOL\" width=\"500\" height=\"250\" title=\"lol.gamepedia.com\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-08-lol-gamepedia-teemo.jpg\" class=\"GamePedia-提莫\" width=\"500\" height=\"250\" title=\"示例-提莫\">\n\n<h2 id=\"Pick台词\"><a href=\"#Pick台词\" class=\"headerlink\" title=\"Pick台词\"></a>Pick台词</h2><p>然后又是pick台词的收集工作，这是最令人头疼的地方。在百度云搜素引擎上找到了大多数英雄的Word版英雄台词，但因为建立日期比较早，有很多台词已经更改了，再加上处理量比较大、需求量不高，就暂时搁置了那个Word。但总得有点内容吧，就选定了Pick英雄的台词，大都是百度谷歌搜集而来。因为英雄改版重做等原因，有些已经不适用了，然后自己启动游戏训练模式，选好英雄听语音，然后立马关掉……不知道百度、谷歌、开关游戏多少次，才勉强把143位英雄的台词收集完。因为有的英雄台词不太熟悉，可能有的已经过时而没有更改，这就等到发现再说吧。</p>\n<h2 id=\"Api的使用\"><a href=\"#Api的使用\" class=\"headerlink\" title=\"Api的使用\"></a>Api的使用</h2><div class=\"note danger\">\n            <p>使用方式经多次尝试，已经更新为<a href=\"/2019/03/10/many-ways-to-loline/\" title=\"新的方式\">新的方式</a>。</p>\n          </div>\n\n<p>使用方法是同<a href=\"/2019/03/05/start-hexo/#一言\">一言</a>一样 ，你同样可以参照<a href=\"https://ouuan.github.io/hexo博客搭建指北/#一言（ヒトコト）\" target=\"_blank\" rel=\"noopener\">原文作者</a>的方式，但只需要根据下方代码把<code>themes/next/layout/_macro/sidebar.swig</code>中的id和Hitokoto的小标题改一下即可。</p>\n<figure class=\"highlight html\"><figcaption><span>themes/next/layout/_scripts/commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t$.<span class=\"keyword\">get</span>('http://149.129.113.178:5000/', function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'----------------------------------------'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(data)</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(data.words);</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + data.title_zh+<span class=\"string\">' '</span>+data.name_zh);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>收集数据的时候也写了不少的代码，但保存下来数据之后其中大多数已经没有用了，所以这里只贴出来了Flask的代码。需要请邮件联系获取:smile:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! py -3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">from</span> util <span class=\"keyword\">import</span> load_champions</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, jsonify, abort, make_response, request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># http://www.pythondoc.com/flask-restful/first.html</span></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config[<span class=\"string\">'JSON_AS_ASCII'</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">champions = load_champions(<span class=\"string\">\"data/champions.json\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/', methods=['GET'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    id_ = random.randint(<span class=\"number\">1</span>, len(champions))</span><br><span class=\"line\">    print(id_)</span><br><span class=\"line\">    champion = list(filter(<span class=\"keyword\">lambda</span> t: t[<span class=\"string\">'id'</span>] == id_, champions))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(champion[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">after_requests</span><span class=\"params\">(response)</span>:</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Origin'</span>] = <span class=\"string\">'*'</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Methods'</span>] = <span class=\"string\">'GET'</span></span><br><span class=\"line\">    response.headers[<span class=\"string\">'Access-Control-Allow-Headers'</span>] = <span class=\"string\">'Content-Type,Authorization'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.errorhandler(404)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">not_found</span><span class=\"params\">(error)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> make_response(jsonify(&#123;<span class=\"string\">'error'</span>: <span class=\"string\">'Not Found'</span>&#125;), <span class=\"number\">404</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.after_request(after_requests)</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Electron-Vue开发笔记——1","date":"2019-03-23T02:54:43.000Z","_content":"\n对于Electron的了解，还是开始于[Motrix](https://motrix.app/)，一个颜值极高的多功能下载工具。在GitHub项目页面看到了“Electron”一词，从此开始了废寝忘食的学习过程……\n\n<!-- more -->\n\n从electron到electron-vue，不仅重拾了之前自学的Html、CSS、js，还扩展到了Node.js，还有Vue、Bootstrap等前端框架。虽然现在并不知道他们到底是用来干嘛的（Vue，我说谁呢自己心里去除），但也有个初步的了解了。\n\n# 环境\n{% note warning %}\n欲练此功，必先自宫。\n{% endnote %}\n\n刚准备拿起书看计算机组成原理，就在知乎上看到有人推荐[Motrix](https://motrix.app/)这个东西，惊讶于颜值，了解项目的技术栈后，又感叹于技术。心里默默想着，这书怕是，看不成了。\n\n# 抄代码\n\n很多代码及代码风格都模仿自Motrix（羞羞:no_mouth:）\n\n# 样式与排版\n\n感觉好多种样式不对的情况都是没有刷新（瞎写定位）\n\n\n# 打开对话框\n打开对话框的尝试倒没有踩多少坑，看[electron文档](https://electronjs.org/docs/api/dialog)就可以handle。\n## 注意\n### 选择文件和文件夹-2019/03/26\n在[对话框文档](https://electronjs.org/docs/api/dialog)中有这么一句：\n{% note primary %}\n在 Windows 和 Linux 上, 打开对话框不能同时是文件选择器和目录选择器,\n因此如果在这些平台上将 properties 设置为[\"openFile\"、\"openDirectory\"],\n则将显示为目录选择器。\n{% endnote %}\n若对选择文件和文件夹都有需要，则应将它们分开处理。\n\n### 文件夹-2019/03/26\n在读取文件夹下的文件目录时，可以用`forEach`循环，因为`forEach`是同步的，即使没有`Sync`（详见该[博客](http://www.gimoo.net/t/1502/54e2acd26b263.html)）。在该循环内也建议使用同步函数，否则可能会遇到数据还没来得及传出来就返回的问题。当然，返回为空（或不全）。\n\n# 小结\n\n经过三天没日没夜地折腾，终于看到了一丝曙光。在bootstrap的加持下排版样式有了雏形，有了Vue的高级功能（没见过的都是高级），可以任意添加单个或多个图片了。\n\n## 预览-2019/03/23\n\n现在的界面就是酱紫：\n+ 原生卡片（bootstrap中.card-columns的样式，加了自制页眉）\n+ 自制卡片\n\n两种样式看起来只差一个图片的margin，看起来大小不太一样。但是设计的时候走了很多弯路。\n自制卡片没有使用.card-columns的时候图片的定位有问题：\n1. 宽>高的时候图片不能居中\n2. 高>宽的时候图片突破容器高度，向下伸出一大截。\n使用.card-group和.card-decks的时候一张图片占了整个页面，问题太多了，而且自己写的CSS也一直在变，没有太大的可比性。现在能做成这样子已经巨jb开心了，感觉自己啥都tm会……\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E5%8E%9F%E7%94%9F%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg 原生卡片样式 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E8%87%AA%E5%88%B6%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg 自制卡片样式 %}\n","source":"_posts/2019-03-23-electron-note-1.md","raw":"---\ntitle: Electron-Vue开发笔记——1\ndate: 2019-03-23 02:54:43\ncategory: \n- [Node.js]\n- [Electron]\ntags: \n- 前端\n- Electron-Vue\n---\n\n对于Electron的了解，还是开始于[Motrix](https://motrix.app/)，一个颜值极高的多功能下载工具。在GitHub项目页面看到了“Electron”一词，从此开始了废寝忘食的学习过程……\n\n<!-- more -->\n\n从electron到electron-vue，不仅重拾了之前自学的Html、CSS、js，还扩展到了Node.js，还有Vue、Bootstrap等前端框架。虽然现在并不知道他们到底是用来干嘛的（Vue，我说谁呢自己心里去除），但也有个初步的了解了。\n\n# 环境\n{% note warning %}\n欲练此功，必先自宫。\n{% endnote %}\n\n刚准备拿起书看计算机组成原理，就在知乎上看到有人推荐[Motrix](https://motrix.app/)这个东西，惊讶于颜值，了解项目的技术栈后，又感叹于技术。心里默默想着，这书怕是，看不成了。\n\n# 抄代码\n\n很多代码及代码风格都模仿自Motrix（羞羞:no_mouth:）\n\n# 样式与排版\n\n感觉好多种样式不对的情况都是没有刷新（瞎写定位）\n\n\n# 打开对话框\n打开对话框的尝试倒没有踩多少坑，看[electron文档](https://electronjs.org/docs/api/dialog)就可以handle。\n## 注意\n### 选择文件和文件夹-2019/03/26\n在[对话框文档](https://electronjs.org/docs/api/dialog)中有这么一句：\n{% note primary %}\n在 Windows 和 Linux 上, 打开对话框不能同时是文件选择器和目录选择器,\n因此如果在这些平台上将 properties 设置为[\"openFile\"、\"openDirectory\"],\n则将显示为目录选择器。\n{% endnote %}\n若对选择文件和文件夹都有需要，则应将它们分开处理。\n\n### 文件夹-2019/03/26\n在读取文件夹下的文件目录时，可以用`forEach`循环，因为`forEach`是同步的，即使没有`Sync`（详见该[博客](http://www.gimoo.net/t/1502/54e2acd26b263.html)）。在该循环内也建议使用同步函数，否则可能会遇到数据还没来得及传出来就返回的问题。当然，返回为空（或不全）。\n\n# 小结\n\n经过三天没日没夜地折腾，终于看到了一丝曙光。在bootstrap的加持下排版样式有了雏形，有了Vue的高级功能（没见过的都是高级），可以任意添加单个或多个图片了。\n\n## 预览-2019/03/23\n\n现在的界面就是酱紫：\n+ 原生卡片（bootstrap中.card-columns的样式，加了自制页眉）\n+ 自制卡片\n\n两种样式看起来只差一个图片的margin，看起来大小不太一样。但是设计的时候走了很多弯路。\n自制卡片没有使用.card-columns的时候图片的定位有问题：\n1. 宽>高的时候图片不能居中\n2. 高>宽的时候图片突破容器高度，向下伸出一大截。\n使用.card-group和.card-decks的时候一张图片占了整个页面，问题太多了，而且自己写的CSS也一直在变，没有太大的可比性。现在能做成这样子已经巨jb开心了，感觉自己啥都tm会……\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E5%8E%9F%E7%94%9F%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg 原生卡片样式 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E8%87%AA%E5%88%B6%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg 自制卡片样式 %}\n","slug":"electron-note-1","published":1,"updated":"2019-03-25T16:44:47.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070ff003um8za4vhzjjr6","content":"<p>对于Electron的了解，还是开始于<a href=\"https://motrix.app/\" target=\"_blank\" rel=\"noopener\">Motrix</a>，一个颜值极高的多功能下载工具。在GitHub项目页面看到了“Electron”一词，从此开始了废寝忘食的学习过程……</p>\n<a id=\"more\"></a>\n\n<p>从electron到electron-vue，不仅重拾了之前自学的Html、CSS、js，还扩展到了Node.js，还有Vue、Bootstrap等前端框架。虽然现在并不知道他们到底是用来干嘛的（Vue，我说谁呢自己心里去除），但也有个初步的了解了。</p>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><div class=\"note warning\">\n            <p>欲练此功，必先自宫。</p>\n          </div>\n\n<p>刚准备拿起书看计算机组成原理，就在知乎上看到有人推荐<a href=\"https://motrix.app/\" target=\"_blank\" rel=\"noopener\">Motrix</a>这个东西，惊讶于颜值，了解项目的技术栈后，又感叹于技术。心里默默想着，这书怕是，看不成了。</p>\n<h1 id=\"抄代码\"><a href=\"#抄代码\" class=\"headerlink\" title=\"抄代码\"></a>抄代码</h1><p>很多代码及代码风格都模仿自Motrix（羞羞:no_mouth:）</p>\n<h1 id=\"样式与排版\"><a href=\"#样式与排版\" class=\"headerlink\" title=\"样式与排版\"></a>样式与排版</h1><p>感觉好多种样式不对的情况都是没有刷新（瞎写定位）</p>\n<h1 id=\"打开对话框\"><a href=\"#打开对话框\" class=\"headerlink\" title=\"打开对话框\"></a>打开对话框</h1><p>打开对话框的尝试倒没有踩多少坑，看<a href=\"https://electronjs.org/docs/api/dialog\" target=\"_blank\" rel=\"noopener\">electron文档</a>就可以handle。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><h3 id=\"选择文件和文件夹-2019-03-26\"><a href=\"#选择文件和文件夹-2019-03-26\" class=\"headerlink\" title=\"选择文件和文件夹-2019/03/26\"></a>选择文件和文件夹-2019/03/26</h3><p>在<a href=\"https://electronjs.org/docs/api/dialog\" target=\"_blank\" rel=\"noopener\">对话框文档</a>中有这么一句：</p>\n<div class=\"note primary\">\n            <p>在 Windows 和 Linux 上, 打开对话框不能同时是文件选择器和目录选择器,<br>因此如果在这些平台上将 properties 设置为[“openFile”、”openDirectory”],<br>则将显示为目录选择器。</p>\n          </div>\n<p>若对选择文件和文件夹都有需要，则应将它们分开处理。</p>\n<h3 id=\"文件夹-2019-03-26\"><a href=\"#文件夹-2019-03-26\" class=\"headerlink\" title=\"文件夹-2019/03/26\"></a>文件夹-2019/03/26</h3><p>在读取文件夹下的文件目录时，可以用<code>forEach</code>循环，因为<code>forEach</code>是同步的，即使没有<code>Sync</code>（详见该<a href=\"http://www.gimoo.net/t/1502/54e2acd26b263.html\" target=\"_blank\" rel=\"noopener\">博客</a>）。在该循环内也建议使用同步函数，否则可能会遇到数据还没来得及传出来就返回的问题。当然，返回为空（或不全）。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>经过三天没日没夜地折腾，终于看到了一丝曙光。在bootstrap的加持下排版样式有了雏形，有了Vue的高级功能（没见过的都是高级），可以任意添加单个或多个图片了。</p>\n<h2 id=\"预览-2019-03-23\"><a href=\"#预览-2019-03-23\" class=\"headerlink\" title=\"预览-2019/03/23\"></a>预览-2019/03/23</h2><p>现在的界面就是酱紫：</p>\n<ul>\n<li>原生卡片（bootstrap中.card-columns的样式，加了自制页眉）</li>\n<li>自制卡片</li>\n</ul>\n<p>两种样式看起来只差一个图片的margin，看起来大小不太一样。但是设计的时候走了很多弯路。<br>自制卡片没有使用.card-columns的时候图片的定位有问题：</p>\n<ol>\n<li>宽&gt;高的时候图片不能居中</li>\n<li>高&gt;宽的时候图片突破容器高度，向下伸出一大截。<br>使用.card-group和.card-decks的时候一张图片占了整个页面，问题太多了，而且自己写的CSS也一直在变，没有太大的可比性。现在能做成这样子已经巨jb开心了，感觉自己啥都tm会……</li>\n</ol>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E5%8E%9F%E7%94%9F%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg\" title=\"原生卡片样式\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E8%87%AA%E5%88%B6%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg\" title=\"自制卡片样式\">\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>对于Electron的了解，还是开始于<a href=\"https://motrix.app/\" target=\"_blank\" rel=\"noopener\">Motrix</a>，一个颜值极高的多功能下载工具。在GitHub项目页面看到了“Electron”一词，从此开始了废寝忘食的学习过程……</p>","more":"<p>从electron到electron-vue，不仅重拾了之前自学的Html、CSS、js，还扩展到了Node.js，还有Vue、Bootstrap等前端框架。虽然现在并不知道他们到底是用来干嘛的（Vue，我说谁呢自己心里去除），但也有个初步的了解了。</p>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><div class=\"note warning\">\n            <p>欲练此功，必先自宫。</p>\n          </div>\n\n<p>刚准备拿起书看计算机组成原理，就在知乎上看到有人推荐<a href=\"https://motrix.app/\" target=\"_blank\" rel=\"noopener\">Motrix</a>这个东西，惊讶于颜值，了解项目的技术栈后，又感叹于技术。心里默默想着，这书怕是，看不成了。</p>\n<h1 id=\"抄代码\"><a href=\"#抄代码\" class=\"headerlink\" title=\"抄代码\"></a>抄代码</h1><p>很多代码及代码风格都模仿自Motrix（羞羞:no_mouth:）</p>\n<h1 id=\"样式与排版\"><a href=\"#样式与排版\" class=\"headerlink\" title=\"样式与排版\"></a>样式与排版</h1><p>感觉好多种样式不对的情况都是没有刷新（瞎写定位）</p>\n<h1 id=\"打开对话框\"><a href=\"#打开对话框\" class=\"headerlink\" title=\"打开对话框\"></a>打开对话框</h1><p>打开对话框的尝试倒没有踩多少坑，看<a href=\"https://electronjs.org/docs/api/dialog\" target=\"_blank\" rel=\"noopener\">electron文档</a>就可以handle。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><h3 id=\"选择文件和文件夹-2019-03-26\"><a href=\"#选择文件和文件夹-2019-03-26\" class=\"headerlink\" title=\"选择文件和文件夹-2019/03/26\"></a>选择文件和文件夹-2019/03/26</h3><p>在<a href=\"https://electronjs.org/docs/api/dialog\" target=\"_blank\" rel=\"noopener\">对话框文档</a>中有这么一句：</p>\n<div class=\"note primary\">\n            <p>在 Windows 和 Linux 上, 打开对话框不能同时是文件选择器和目录选择器,<br>因此如果在这些平台上将 properties 设置为[“openFile”、”openDirectory”],<br>则将显示为目录选择器。</p>\n          </div>\n<p>若对选择文件和文件夹都有需要，则应将它们分开处理。</p>\n<h3 id=\"文件夹-2019-03-26\"><a href=\"#文件夹-2019-03-26\" class=\"headerlink\" title=\"文件夹-2019/03/26\"></a>文件夹-2019/03/26</h3><p>在读取文件夹下的文件目录时，可以用<code>forEach</code>循环，因为<code>forEach</code>是同步的，即使没有<code>Sync</code>（详见该<a href=\"http://www.gimoo.net/t/1502/54e2acd26b263.html\" target=\"_blank\" rel=\"noopener\">博客</a>）。在该循环内也建议使用同步函数，否则可能会遇到数据还没来得及传出来就返回的问题。当然，返回为空（或不全）。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>经过三天没日没夜地折腾，终于看到了一丝曙光。在bootstrap的加持下排版样式有了雏形，有了Vue的高级功能（没见过的都是高级），可以任意添加单个或多个图片了。</p>\n<h2 id=\"预览-2019-03-23\"><a href=\"#预览-2019-03-23\" class=\"headerlink\" title=\"预览-2019/03/23\"></a>预览-2019/03/23</h2><p>现在的界面就是酱紫：</p>\n<ul>\n<li>原生卡片（bootstrap中.card-columns的样式，加了自制页眉）</li>\n<li>自制卡片</li>\n</ul>\n<p>两种样式看起来只差一个图片的margin，看起来大小不太一样。但是设计的时候走了很多弯路。<br>自制卡片没有使用.card-columns的时候图片的定位有问题：</p>\n<ol>\n<li>宽&gt;高的时候图片不能居中</li>\n<li>高&gt;宽的时候图片突破容器高度，向下伸出一大截。<br>使用.card-group和.card-decks的时候一张图片占了整个页面，问题太多了，而且自己写的CSS也一直在变，没有太大的可比性。现在能做成这样子已经巨jb开心了，感觉自己啥都tm会……</li>\n</ol>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E5%8E%9F%E7%94%9F%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg\" title=\"原生卡片样式\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-%E8%87%AA%E5%88%B6%E5%8D%A1%E7%89%87%E6%A0%B7%E5%BC%8F.jpg\" title=\"自制卡片样式\">"},{"title":"Loline —— 加载本地json","date":"2019-03-09T18:34:40.000Z","_content":"\n# 使用数据的几种方式\n\n## RESTful API\n这种方式在{% post_link loline 上一篇文章 %}中已经使用过。\n\n在使用Ajax跨域请求json的方式下，遇到了两点麻烦：\n1. 阿里云服务器上运行的python脚本有*不知名的问题*。\n2. GitHub Pages的博客上需要使用HTTPS来跨域请求，这就需要一个SSl证书，但是自己的证书不会被浏览器信任，而去阿里云申请证书（有免费的）需要注册域名，太麻烦了，所以就改变一下请求json的方式，改用本地加载数据的方式。\n\n<!-- more -->\n\n## 加载本地json\n\n{% note warning %}\n注意`\"/json/champions.json\"`不能写成`\"json/champions.json\"`的形式，不然会在post页面显示404错误。\n> http://localhost:4000/2019/03/08/loline/json/champions.json 404 (Not Found)\n{% endnote %}\n\n{% code lang:html next\\layout\\_scripts\\commons.swig %}\n<script type=\"text/javascript\">\n\t$.get(\"/json/champions.json\", function (data) {\n\t\tvar ranint = function(min, max) {\n    \treturn Math.round(Math.random() * (max - min)) + min;\n\t\t}(1, data.length);\n\t\tchampion = data[ranint-1];\n\t\t$('#loline-content').css('display', '').text(champion.words);\n\t\t$('#loline-from').css('display', '').text('——' + champion.title_zh+' '+champion.name_zh);\n\t});\n</script>\n{% endcode %}\n\n下边是相应的属性设置，但实际上和之前一言设置都差不多。\n{% fold 点击查看 %}\n\n{% code lang:html next\\layout\\_macro\\sidebar.swig %}\n<div class=\"sidebar-inner\">\n        <div>\n          <blockquote class=\"blockquote-loline\">\n            <b><span style=\"color:burlywood;\"><span id=\"loline-content\"></span></span></b>\n          </blockquote>\n        </div>\n        <div style=\"text-align: right; font-size: 0.8em; color: black;\" id=\"loline-from\"></div>\n        <div style=\"margin-top: 15px; font-size: 0.8em; color: black;\"><a href=\"https://yuwancumian666.github.io/2019/03/08/loline/#more\">LOLine</a></div>\n      </div>\n      <div style=\"height: 15px\"></div>\n{% endcode %}\n{% endfold %}\n\n## 直链访问\n\n可以以直链请求json的方式获取数据，数据源可以为博客所在的仓库。\n\n这种方式返回的data数据类型为`string`，所以代码也有相应的更改。\n\n{% code lang:javascript next\\layout\\_scripts\\commons.swig %}\n$.get(\"https://raw.githubusercontent.com/.../champions.json\", function (data) {\n    console.log('url: '+'{{ url }}');\n\t\tchampions = JSON.parse(data);\n\t\tvar ranint = function(min, max) {\n    \treturn Math.round(Math.random() * (max - min)) + min;\n\t\t}(1, data.length);\n\t\tchampion = champions[ranint-1];\n\t\t$('#loline-content').css('display', '').text(champion.words);\n\t\t$('#loline-from').css('display', '').text('——' + champion.title_zh+' '+champion.name_zh);\n\t});\n{% endcode %}\n\n\n# CSS——数据展示\n\n模仿`block-quote`标签的样式，在侧边栏中加入`block-loline`，如此一来又出现了新问题：svg大小和颜色控制不好，便换回了原来的样子。\n\n## blockquote-loline样式\n\n{% fold 查看代码： %}\n\n{% code lang:styl next\\source\\css\\_common\\components\\tags\\blockquote-center.styl %}\n.blockquote-loline {\n  position: relative;\n  margin: 40px 0;\n  padding: 0;\n  border-left: none;\n  text-align: center;\n\n  &::before, &::after {\n    position: absolute;\n    content: ' ';\n    display: block;\n    width: 100%;\n    height: 24px;\n    opacity: 0.2;\n    background-repeat: no-repeat;\n    background-position: 0 -6px;\n    background-size: 22px 22px;\n  }\n  &::before {\n    top: -20px;\n    background-image: url($sidebar-quote-left);\n    border-top: 1px solid $grey-light;\n  }\n  &::after {\n    bottom: -20px;\n    background-image: url($sidebar-quote-right);\n    border-bottom: 1px solid $grey-light;\n    background-position: 100% 8px;\n  }\n\n  p, div { text-align: center; }\n}\n{% endcode %}\n{% endfold %}\n\n## 设置base变量\n\n自定义了两个SVG，在`SVG: path`标签中可以加入`fill=\"#B2B7F2\"`定义SVG的颜色。\n\n在`next\\source\\css\\_common\\components\\tags\\blockquote-center.styl`中发现可用自定义变量，然后在下方文件中更改了以下原来的svg并新建了两个变量。\n\n{% code lang:styl next\\source\\css\\_variables\\base.styl %}\n// blockquote-loline icon 只是更改了一下颜色\n$sidebar-quote-left = '../images/sidebar-quote-l.svg'\n$sidebar-quote-right = '../images/sidebar-quote-r.svg'\n{% endcode %}\n","source":"_posts/2019-03-09-many-ways-to-loline.md","raw":"---\ntitle: Loline —— 加载本地json\ndate: 2019-03-09 18:34:40\ntags:\n- Loline\n- json\n---\n\n# 使用数据的几种方式\n\n## RESTful API\n这种方式在{% post_link loline 上一篇文章 %}中已经使用过。\n\n在使用Ajax跨域请求json的方式下，遇到了两点麻烦：\n1. 阿里云服务器上运行的python脚本有*不知名的问题*。\n2. GitHub Pages的博客上需要使用HTTPS来跨域请求，这就需要一个SSl证书，但是自己的证书不会被浏览器信任，而去阿里云申请证书（有免费的）需要注册域名，太麻烦了，所以就改变一下请求json的方式，改用本地加载数据的方式。\n\n<!-- more -->\n\n## 加载本地json\n\n{% note warning %}\n注意`\"/json/champions.json\"`不能写成`\"json/champions.json\"`的形式，不然会在post页面显示404错误。\n> http://localhost:4000/2019/03/08/loline/json/champions.json 404 (Not Found)\n{% endnote %}\n\n{% code lang:html next\\layout\\_scripts\\commons.swig %}\n<script type=\"text/javascript\">\n\t$.get(\"/json/champions.json\", function (data) {\n\t\tvar ranint = function(min, max) {\n    \treturn Math.round(Math.random() * (max - min)) + min;\n\t\t}(1, data.length);\n\t\tchampion = data[ranint-1];\n\t\t$('#loline-content').css('display', '').text(champion.words);\n\t\t$('#loline-from').css('display', '').text('——' + champion.title_zh+' '+champion.name_zh);\n\t});\n</script>\n{% endcode %}\n\n下边是相应的属性设置，但实际上和之前一言设置都差不多。\n{% fold 点击查看 %}\n\n{% code lang:html next\\layout\\_macro\\sidebar.swig %}\n<div class=\"sidebar-inner\">\n        <div>\n          <blockquote class=\"blockquote-loline\">\n            <b><span style=\"color:burlywood;\"><span id=\"loline-content\"></span></span></b>\n          </blockquote>\n        </div>\n        <div style=\"text-align: right; font-size: 0.8em; color: black;\" id=\"loline-from\"></div>\n        <div style=\"margin-top: 15px; font-size: 0.8em; color: black;\"><a href=\"https://yuwancumian666.github.io/2019/03/08/loline/#more\">LOLine</a></div>\n      </div>\n      <div style=\"height: 15px\"></div>\n{% endcode %}\n{% endfold %}\n\n## 直链访问\n\n可以以直链请求json的方式获取数据，数据源可以为博客所在的仓库。\n\n这种方式返回的data数据类型为`string`，所以代码也有相应的更改。\n\n{% code lang:javascript next\\layout\\_scripts\\commons.swig %}\n$.get(\"https://raw.githubusercontent.com/.../champions.json\", function (data) {\n    console.log('url: '+'{{ url }}');\n\t\tchampions = JSON.parse(data);\n\t\tvar ranint = function(min, max) {\n    \treturn Math.round(Math.random() * (max - min)) + min;\n\t\t}(1, data.length);\n\t\tchampion = champions[ranint-1];\n\t\t$('#loline-content').css('display', '').text(champion.words);\n\t\t$('#loline-from').css('display', '').text('——' + champion.title_zh+' '+champion.name_zh);\n\t});\n{% endcode %}\n\n\n# CSS——数据展示\n\n模仿`block-quote`标签的样式，在侧边栏中加入`block-loline`，如此一来又出现了新问题：svg大小和颜色控制不好，便换回了原来的样子。\n\n## blockquote-loline样式\n\n{% fold 查看代码： %}\n\n{% code lang:styl next\\source\\css\\_common\\components\\tags\\blockquote-center.styl %}\n.blockquote-loline {\n  position: relative;\n  margin: 40px 0;\n  padding: 0;\n  border-left: none;\n  text-align: center;\n\n  &::before, &::after {\n    position: absolute;\n    content: ' ';\n    display: block;\n    width: 100%;\n    height: 24px;\n    opacity: 0.2;\n    background-repeat: no-repeat;\n    background-position: 0 -6px;\n    background-size: 22px 22px;\n  }\n  &::before {\n    top: -20px;\n    background-image: url($sidebar-quote-left);\n    border-top: 1px solid $grey-light;\n  }\n  &::after {\n    bottom: -20px;\n    background-image: url($sidebar-quote-right);\n    border-bottom: 1px solid $grey-light;\n    background-position: 100% 8px;\n  }\n\n  p, div { text-align: center; }\n}\n{% endcode %}\n{% endfold %}\n\n## 设置base变量\n\n自定义了两个SVG，在`SVG: path`标签中可以加入`fill=\"#B2B7F2\"`定义SVG的颜色。\n\n在`next\\source\\css\\_common\\components\\tags\\blockquote-center.styl`中发现可用自定义变量，然后在下方文件中更改了以下原来的svg并新建了两个变量。\n\n{% code lang:styl next\\source\\css\\_variables\\base.styl %}\n// blockquote-loline icon 只是更改了一下颜色\n$sidebar-quote-left = '../images/sidebar-quote-l.svg'\n$sidebar-quote-right = '../images/sidebar-quote-r.svg'\n{% endcode %}\n","slug":"many-ways-to-loline","published":1,"updated":"2019-03-10T12:58:53.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fi003xm8zasvzj0n61","content":"<h1 id=\"使用数据的几种方式\"><a href=\"#使用数据的几种方式\" class=\"headerlink\" title=\"使用数据的几种方式\"></a>使用数据的几种方式</h1><h2 id=\"RESTful-API\"><a href=\"#RESTful-API\" class=\"headerlink\" title=\"RESTful API\"></a>RESTful API</h2><p>这种方式在<a href=\"/2019/03/08/loline/\" title=\"上一篇文章\">上一篇文章</a>中已经使用过。</p>\n<p>在使用Ajax跨域请求json的方式下，遇到了两点麻烦：</p>\n<ol>\n<li>阿里云服务器上运行的python脚本有<em>不知名的问题</em>。</li>\n<li>GitHub Pages的博客上需要使用HTTPS来跨域请求，这就需要一个SSl证书，但是自己的证书不会被浏览器信任，而去阿里云申请证书（有免费的）需要注册域名，太麻烦了，所以就改变一下请求json的方式，改用本地加载数据的方式。</li>\n</ol>\n<a id=\"more\"></a>\n\n<h2 id=\"加载本地json\"><a href=\"#加载本地json\" class=\"headerlink\" title=\"加载本地json\"></a>加载本地json</h2><div class=\"note warning\">\n            <p>注意<code>&quot;/json/champions.json&quot;</code>不能写成<code>&quot;json/champions.json&quot;</code>的形式，不然会在post页面显示404错误。</p><blockquote><p><a href=\"http://localhost:4000/2019/03/08/loline/json/champions.json\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/2019/03/08/loline/json/champions.json</a> 404 (Not Found)</p></blockquote>\n          </div>\n\n<figure class=\"highlight html\"><figcaption><span>next\\layout\\_scripts\\commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t$.<span class=\"keyword\">get</span>(\"/json/champions.json\", function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t<span class=\"keyword\">var</span> ranint = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">min, max</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    \t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min)) + min;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;(1, data.length);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tchampion = data[ranint-1];</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(champion.words);</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + champion.title_zh+<span class=\"string\">' '</span>+champion.name_zh);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下边是相应的属性设置，但实际上和之前一言设置都差不多。</p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">点击查看</div></div><div class=\"fold\">\n<figure class=\"highlight html\"><figcaption><span>next\\layout\\_macro\\sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sidebar-inner\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-loline\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:burlywood;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"loline-content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: right; font-size: 0.8em; color: black;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"loline-from\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 15px; font-size: 0.8em; color: black;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://yuwancumian666.github.io/2019/03/08/loline/#more\"</span>&gt;</span>LOLine<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height: 15px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</div></div>\n\n<h2 id=\"直链访问\"><a href=\"#直链访问\" class=\"headerlink\" title=\"直链访问\"></a>直链访问</h2><p>可以以直链请求json的方式获取数据，数据源可以为博客所在的仓库。</p>\n<p>这种方式返回的data数据类型为<code>string</code>，所以代码也有相应的更改。</p>\n<figure class=\"highlight javascript\"><figcaption><span>next\\layout\\_scripts\\commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"keyword\">get</span>(\"https://raw.githubusercontent.com/.../champions.json\", function (data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'url: '</span>+<span class=\"string\">''</span>);</span><br><span class=\"line\">\t\tchampions = <span class=\"built_in\">JSON</span>.parse(data);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ranint = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">min, max</span>) </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min)) + min;</span><br><span class=\"line\">\t\t&#125;(<span class=\"number\">1</span>, data.length);</span><br><span class=\"line\">\t\tchampion = champions[ranint<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(champion.words);</span><br><span class=\"line\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + champion.title_zh+<span class=\"string\">' '</span>+champion.name_zh);</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"CSS——数据展示\"><a href=\"#CSS——数据展示\" class=\"headerlink\" title=\"CSS——数据展示\"></a>CSS——数据展示</h1><p>模仿<code>block-quote</code>标签的样式，在侧边栏中加入<code>block-loline</code>，如此一来又出现了新问题：svg大小和颜色控制不好，便换回了原来的样子。</p>\n<h2 id=\"blockquote-loline样式\"><a href=\"#blockquote-loline样式\" class=\"headerlink\" title=\"blockquote-loline样式\"></a>blockquote-loline样式</h2><div><div class=\"fold_hider\"><div class=\"close hider_title\">查看代码：</div></div><div class=\"fold\">\n<figure class=\"highlight styl\"><figcaption><span>next\\source\\css\\_common\\components\\tags\\blockquote-center.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blockquote-loline</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;::before, &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">' '</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0.2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: <span class=\"number\">22px</span> <span class=\"number\">22px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::before &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$sidebar</span>-quote-left);</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$sidebar</span>-quote-right);</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: <span class=\"number\">100%</span> <span class=\"number\">8px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">text-align</span>: center; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</div></div>\n\n<h2 id=\"设置base变量\"><a href=\"#设置base变量\" class=\"headerlink\" title=\"设置base变量\"></a>设置base变量</h2><p>自定义了两个SVG，在<code>SVG: path</code>标签中可以加入<code>fill=&quot;#B2B7F2&quot;</code>定义SVG的颜色。</p>\n<p>在<code>next\\source\\css\\_common\\components\\tags\\blockquote-center.styl</code>中发现可用自定义变量，然后在下方文件中更改了以下原来的svg并新建了两个变量。</p>\n<figure class=\"highlight styl\"><figcaption><span>next\\source\\css\\_variables\\base.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// blockquote-loline icon 只是更改了一下颜色</span></span><br><span class=\"line\"><span class=\"variable\">$sidebar</span>-quote-<span class=\"attribute\">left</span> = <span class=\"string\">'../images/sidebar-quote-l.svg'</span></span><br><span class=\"line\"><span class=\"variable\">$sidebar</span>-quote-<span class=\"attribute\">right</span> = <span class=\"string\">'../images/sidebar-quote-r.svg'</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<h1 id=\"使用数据的几种方式\"><a href=\"#使用数据的几种方式\" class=\"headerlink\" title=\"使用数据的几种方式\"></a>使用数据的几种方式</h1><h2 id=\"RESTful-API\"><a href=\"#RESTful-API\" class=\"headerlink\" title=\"RESTful API\"></a>RESTful API</h2><p>这种方式在<a href=\"/2019/03/08/loline/\" title=\"上一篇文章\">上一篇文章</a>中已经使用过。</p>\n<p>在使用Ajax跨域请求json的方式下，遇到了两点麻烦：</p>\n<ol>\n<li>阿里云服务器上运行的python脚本有<em>不知名的问题</em>。</li>\n<li>GitHub Pages的博客上需要使用HTTPS来跨域请求，这就需要一个SSl证书，但是自己的证书不会被浏览器信任，而去阿里云申请证书（有免费的）需要注册域名，太麻烦了，所以就改变一下请求json的方式，改用本地加载数据的方式。</li>\n</ol>","more":"<h2 id=\"加载本地json\"><a href=\"#加载本地json\" class=\"headerlink\" title=\"加载本地json\"></a>加载本地json</h2><div class=\"note warning\">\n            <p>注意<code>&quot;/json/champions.json&quot;</code>不能写成<code>&quot;json/champions.json&quot;</code>的形式，不然会在post页面显示404错误。</p><blockquote><p><a href=\"http://localhost:4000/2019/03/08/loline/json/champions.json\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/2019/03/08/loline/json/champions.json</a> 404 (Not Found)</p></blockquote>\n          </div>\n\n<figure class=\"highlight html\"><figcaption><span>next\\layout\\_scripts\\commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">\t$.<span class=\"keyword\">get</span>(\"/json/champions.json\", function (data) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t<span class=\"keyword\">var</span> ranint = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">min, max</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    \t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min)) + min;</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t&#125;(1, data.length);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\tchampion = data[ranint-1];</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(champion.words);</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + champion.title_zh+<span class=\"string\">' '</span>+champion.name_zh);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下边是相应的属性设置，但实际上和之前一言设置都差不多。</p>\n<div><div class=\"fold_hider\"><div class=\"close hider_title\">点击查看</div></div><div class=\"fold\">\n<figure class=\"highlight html\"><figcaption><span>next\\layout\\_macro\\sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sidebar-inner\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-loline\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:burlywood;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"loline-content\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"text-align: right; font-size: 0.8em; color: black;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"loline-from\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 15px; font-size: 0.8em; color: black;\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://yuwancumian666.github.io/2019/03/08/loline/#more\"</span>&gt;</span>LOLine<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"height: 15px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</div></div>\n\n<h2 id=\"直链访问\"><a href=\"#直链访问\" class=\"headerlink\" title=\"直链访问\"></a>直链访问</h2><p>可以以直链请求json的方式获取数据，数据源可以为博客所在的仓库。</p>\n<p>这种方式返回的data数据类型为<code>string</code>，所以代码也有相应的更改。</p>\n<figure class=\"highlight javascript\"><figcaption><span>next\\layout\\_scripts\\commons.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"keyword\">get</span>(\"https://raw.githubusercontent.com/.../champions.json\", function (data) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'url: '</span>+<span class=\"string\">''</span>);</span><br><span class=\"line\">\t\tchampions = <span class=\"built_in\">JSON</span>.parse(data);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> ranint = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">min, max</span>) </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * (max - min)) + min;</span><br><span class=\"line\">\t\t&#125;(<span class=\"number\">1</span>, data.length);</span><br><span class=\"line\">\t\tchampion = champions[ranint<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t$(<span class=\"string\">'#loline-content'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(champion.words);</span><br><span class=\"line\">\t\t$(<span class=\"string\">'#loline-from'</span>).css(<span class=\"string\">'display'</span>, <span class=\"string\">''</span>).text(<span class=\"string\">'——'</span> + champion.title_zh+<span class=\"string\">' '</span>+champion.name_zh);</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"CSS——数据展示\"><a href=\"#CSS——数据展示\" class=\"headerlink\" title=\"CSS——数据展示\"></a>CSS——数据展示</h1><p>模仿<code>block-quote</code>标签的样式，在侧边栏中加入<code>block-loline</code>，如此一来又出现了新问题：svg大小和颜色控制不好，便换回了原来的样子。</p>\n<h2 id=\"blockquote-loline样式\"><a href=\"#blockquote-loline样式\" class=\"headerlink\" title=\"blockquote-loline样式\"></a>blockquote-loline样式</h2><div><div class=\"fold_hider\"><div class=\"close hider_title\">查看代码：</div></div><div class=\"fold\">\n<figure class=\"highlight styl\"><figcaption><span>next\\source\\css\\_common\\components\\tags\\blockquote-center.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blockquote-loline</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">40px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;::before, &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">' '</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0.2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: <span class=\"number\">22px</span> <span class=\"number\">22px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::before &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$sidebar</span>-quote-left);</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$sidebar</span>-quote-right);</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: <span class=\"number\">100%</span> <span class=\"number\">8px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">text-align</span>: center; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</div></div>\n\n<h2 id=\"设置base变量\"><a href=\"#设置base变量\" class=\"headerlink\" title=\"设置base变量\"></a>设置base变量</h2><p>自定义了两个SVG，在<code>SVG: path</code>标签中可以加入<code>fill=&quot;#B2B7F2&quot;</code>定义SVG的颜色。</p>\n<p>在<code>next\\source\\css\\_common\\components\\tags\\blockquote-center.styl</code>中发现可用自定义变量，然后在下方文件中更改了以下原来的svg并新建了两个变量。</p>\n<figure class=\"highlight styl\"><figcaption><span>next\\source\\css\\_variables\\base.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// blockquote-loline icon 只是更改了一下颜色</span></span><br><span class=\"line\"><span class=\"variable\">$sidebar</span>-quote-<span class=\"attribute\">left</span> = <span class=\"string\">'../images/sidebar-quote-l.svg'</span></span><br><span class=\"line\"><span class=\"variable\">$sidebar</span>-quote-<span class=\"attribute\">right</span> = <span class=\"string\">'../images/sidebar-quote-r.svg'</span></span><br></pre></td></tr></table></figure>"},{"title":"Electron-Vue遇到的诸多问题","date":"2019-03-26T00:42:32.000Z","_content":"\n由于个人水平原因遇到的解决不了或已经解决的问题。\n\n<!--more-->\n\n# Electron & Vue\n\n## ipcRenderer.send()函数不能工作-2019/03/26\nConsole里的错误描述：\n{% note danger %}\n[Vue warn]: Error in v-on handler: \"TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function\"\nfound in\n---> <Gallery> at src/renderer/components/Gallery/Gallery.vue\n       <MainPage> at src/renderer/components/MainPage.vue\n         <ButerApp> at src/renderer/App.vue\n           <Root>\nTypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function\n    at VueComponent.drop (Gallery.vue?f747:125)\n    at drop (Gallery.vue?f24d:127)\n    at invokeWithErrorHandling (vue.esm.js?a026:1863)\n    at HTMLDivElement.invoker (vue.esm.js?a026:2188)\n    at HTMLDivElement.original._wrapper (vue.esm.js?a026:7542)\n{% endnote %}\n\n该问题可能的原因是：在引入ipcRenderer的时候写成了`import ipcRenderer from 'electron'`，改成`const {ipcRenderer} = require('electron')`不再显示错误。\n\n## ipcRenderer和ipcMain\nipcRenderer和ipcMain这两个类之间传递的数据是**object**格式，即使你在ipcRenderer里向ipcMain发送的是数组。只这么单向地说是因为在文件对话框里选择的文件经sender发送到ipcRenderer后，其object格式使用forEach不会报错。具体原因待研究。\n\n## ipcRenderer.on重复执行（dialog）\n问题描述：点击按钮打开对话框，选择文件并输出在屏幕上。第一次打开对话框选择一个图片，会有一个图片添加到视图上；再打开对话框选择一个或多个图片，会进来双倍相同的图片；接着再打开会有三倍，四倍……\n这是个从一开始就令我脑壳痛的问题，来回测试代码就是找不到问题在哪，但是知道是在`ipcRenderer.on()`中反复执行的，之前存储数据的格式简单：数组可以去重，简单对象可以用图片的src做键，直接去掉重复的图片链接。而把数据存储到Vuex的store中之后，加上编辑页面的需要，数据结构变得复杂，变成了对象列表，这就不得不解决这个问题。后来还是在Stack Overflow中找到了[解决办法](https://stackoverflow.com/questions/52111151/node-on-method-firing-too-many-times)：把`ipcRenderer.on()`用`ipcRenderer.once()`替代，这是因为每一次点击按钮打开dialog都会设置一个监听器，多次打开就需要手动删除之前的监听器，这样子很麻烦，用`ipcRenderer.once()`就会在程序块执行结束后自行删除监听器。\n\n## dialog选择文件夹会返回undefined\n这是一个原因不明的问题，还没去StackOverflow上找找。现在的做法是直接过滤掉undefined的数据，目前没有很大的问题。\n\n\n# Vue & Vuex\n\n## Vue数据更新，视图不更新-2019/03/24\n点击文件对话框可以添加图片，但是拖入就添加不了，vue的数据对象也更新了，可能是更新数据的方法有问题。参考[Vue中数组和对象更改后视图不刷新的问题](https://blog.csdn.net/zifeiyu130/article/details/78950244)\n尝试了N种方法，仍然tmd解决不了，考虑添加初始化图片。\n\n添加初始化图片仍然不能解决问题，情况是dom中有添加的卡片元素，就是在页面上没有显示。经过多次查找，在`.card-columns`的外层div上有一个`v-show='showTip'(showTip=false)`，而且在设计页面的时候多包上了一层div（具体记不太清楚了，应该是给功能扩展留出的空间）。最后解决的方式是：去掉了多余的div和`v-show=false`，重新写了一下gallery相关的样式，得以解决。\n\n## 全局变量、函数-2019/03/26\n谷歌了很多种注册全局变量、函数的方法，在我这里都行不通，可能是我个人水平的原因。\n最后解决的方案是，将三代组件合并成父子两代组件，在父组件里声明大部分变量，然后通过`props`和`this.$emit()`方法在父子组件之间通信并同步变量解决了问题。\n\n在使用`this.drag_tip_seen_flag = true;this.$emit('get_drag_tip_seen_flag', drag_tip_seen_flag)`向父组件传递更改过的`dragTipSeenFlag`变量的情况下，当点击`&times;`关闭选项卡的时候，Console会出现Vue的警告:\n{% note danger %}\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"drag_tip_seen_flag\"\n[Vue warn]: Error in v-on handler: \"ReferenceError: drag_tip_seen_flag is not defined\"\nfound in......\n{% endnote %}\n意思是由于更改了变量而警告改变量可能会被覆盖，需要注意。在把该两行代码换成`this.$emit('get_drag_tip_seen_flag', true)`之后，警告消失。这里的解决方式只是个例，如果父子组件之间互相传递的变量比较多而引发该问题时，就需要考虑换一种方法了。（我是tmd再也不想接触vue的全局变量和全局函数了）\n\n## Vuex state数据返回错误\n在将数据移至Vuex后，发现从state中获取的bool数据不符合预期，总是返回错误的数据。只有在一开始初始化的时候才正确，更不用说更新这个state了。\n\n## \\[vuex\\] [do not mutate vuex store state outside mutation handlers.](https://stackoverflow.com/questions/46044276/vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers) 2019/04/07\n意思是说不要在mutation之外更改state中变量的值，例如再actions中对state中某一变量赋值就会出现此错误。\n\n# 界面布局\n\n## card-columns布局-2019/03/23\n图片少于4张的时候会显示两列（同理，少于两张会显示1列），这是因为页面设计的排版是面向列布局的，当图片大于4张的时候自动会占满3列。\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-bug.jpg 似bug又不是bug %}\n\n## 卡片阴影移位-2019/03/24\nBootstrap中.card-columns>card加CSS阴影后，card[1,2]和card[1,3]上方阴影被截取到前一列最下方。猜测时因为`.card-columns`的面向列排版，导致阴影被错位了。**解决方法**：在`.card`的CSS里加一个`margin: 8px;`，给卡片上方阴影留出空间即可。\n{% img \thttps://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-24-card-columns-%E9%98%B4%E5%BD%B1%E7%A7%BB%E4%BD%8D.jpg 阴影移位 %}\n\n\n# Node.js\n\n## 奇怪的字符202A\n\n在读取图片的测试过程中，由于路径字符串的问题，导致读取文件时路径被当成相对路径处理报错。当我把该字符串放到控制台处理时，用其作为路径执行会报“文件不存在”的错误。然后通过[`string.charCodeAt(0)`](https://www.fileformat.info/info/unicode/char/202a/index.htm)发现字符串的第一位出现了一个不常见的字符`8234`，16进制为`202AH`，谷歌了一下看着好像是一个控制字符，可能是我在文件属性的“安全选项卡”复制路径的时候多复制了一个字符，让重新用正确的路径字符串读取文件的时候，错误消失。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-1.jpg)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-2.jpg)\n\n当把该字符复制到js代码里时，编辑器里是看不到的，但是会报代码语法错误。","source":"_posts/2019-03-26-electron-issues.md","raw":"---\ntitle: Electron-Vue遇到的诸多问题\ndate: 2019-03-26 00:42:32\ncategory: \n- [Node.js]\n- [Electron]\ntags: \n- 问题\n- Electron-Vue\n---\n\n由于个人水平原因遇到的解决不了或已经解决的问题。\n\n<!--more-->\n\n# Electron & Vue\n\n## ipcRenderer.send()函数不能工作-2019/03/26\nConsole里的错误描述：\n{% note danger %}\n[Vue warn]: Error in v-on handler: \"TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function\"\nfound in\n---> <Gallery> at src/renderer/components/Gallery/Gallery.vue\n       <MainPage> at src/renderer/components/MainPage.vue\n         <ButerApp> at src/renderer/App.vue\n           <Root>\nTypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function\n    at VueComponent.drop (Gallery.vue?f747:125)\n    at drop (Gallery.vue?f24d:127)\n    at invokeWithErrorHandling (vue.esm.js?a026:1863)\n    at HTMLDivElement.invoker (vue.esm.js?a026:2188)\n    at HTMLDivElement.original._wrapper (vue.esm.js?a026:7542)\n{% endnote %}\n\n该问题可能的原因是：在引入ipcRenderer的时候写成了`import ipcRenderer from 'electron'`，改成`const {ipcRenderer} = require('electron')`不再显示错误。\n\n## ipcRenderer和ipcMain\nipcRenderer和ipcMain这两个类之间传递的数据是**object**格式，即使你在ipcRenderer里向ipcMain发送的是数组。只这么单向地说是因为在文件对话框里选择的文件经sender发送到ipcRenderer后，其object格式使用forEach不会报错。具体原因待研究。\n\n## ipcRenderer.on重复执行（dialog）\n问题描述：点击按钮打开对话框，选择文件并输出在屏幕上。第一次打开对话框选择一个图片，会有一个图片添加到视图上；再打开对话框选择一个或多个图片，会进来双倍相同的图片；接着再打开会有三倍，四倍……\n这是个从一开始就令我脑壳痛的问题，来回测试代码就是找不到问题在哪，但是知道是在`ipcRenderer.on()`中反复执行的，之前存储数据的格式简单：数组可以去重，简单对象可以用图片的src做键，直接去掉重复的图片链接。而把数据存储到Vuex的store中之后，加上编辑页面的需要，数据结构变得复杂，变成了对象列表，这就不得不解决这个问题。后来还是在Stack Overflow中找到了[解决办法](https://stackoverflow.com/questions/52111151/node-on-method-firing-too-many-times)：把`ipcRenderer.on()`用`ipcRenderer.once()`替代，这是因为每一次点击按钮打开dialog都会设置一个监听器，多次打开就需要手动删除之前的监听器，这样子很麻烦，用`ipcRenderer.once()`就会在程序块执行结束后自行删除监听器。\n\n## dialog选择文件夹会返回undefined\n这是一个原因不明的问题，还没去StackOverflow上找找。现在的做法是直接过滤掉undefined的数据，目前没有很大的问题。\n\n\n# Vue & Vuex\n\n## Vue数据更新，视图不更新-2019/03/24\n点击文件对话框可以添加图片，但是拖入就添加不了，vue的数据对象也更新了，可能是更新数据的方法有问题。参考[Vue中数组和对象更改后视图不刷新的问题](https://blog.csdn.net/zifeiyu130/article/details/78950244)\n尝试了N种方法，仍然tmd解决不了，考虑添加初始化图片。\n\n添加初始化图片仍然不能解决问题，情况是dom中有添加的卡片元素，就是在页面上没有显示。经过多次查找，在`.card-columns`的外层div上有一个`v-show='showTip'(showTip=false)`，而且在设计页面的时候多包上了一层div（具体记不太清楚了，应该是给功能扩展留出的空间）。最后解决的方式是：去掉了多余的div和`v-show=false`，重新写了一下gallery相关的样式，得以解决。\n\n## 全局变量、函数-2019/03/26\n谷歌了很多种注册全局变量、函数的方法，在我这里都行不通，可能是我个人水平的原因。\n最后解决的方案是，将三代组件合并成父子两代组件，在父组件里声明大部分变量，然后通过`props`和`this.$emit()`方法在父子组件之间通信并同步变量解决了问题。\n\n在使用`this.drag_tip_seen_flag = true;this.$emit('get_drag_tip_seen_flag', drag_tip_seen_flag)`向父组件传递更改过的`dragTipSeenFlag`变量的情况下，当点击`&times;`关闭选项卡的时候，Console会出现Vue的警告:\n{% note danger %}\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"drag_tip_seen_flag\"\n[Vue warn]: Error in v-on handler: \"ReferenceError: drag_tip_seen_flag is not defined\"\nfound in......\n{% endnote %}\n意思是由于更改了变量而警告改变量可能会被覆盖，需要注意。在把该两行代码换成`this.$emit('get_drag_tip_seen_flag', true)`之后，警告消失。这里的解决方式只是个例，如果父子组件之间互相传递的变量比较多而引发该问题时，就需要考虑换一种方法了。（我是tmd再也不想接触vue的全局变量和全局函数了）\n\n## Vuex state数据返回错误\n在将数据移至Vuex后，发现从state中获取的bool数据不符合预期，总是返回错误的数据。只有在一开始初始化的时候才正确，更不用说更新这个state了。\n\n## \\[vuex\\] [do not mutate vuex store state outside mutation handlers.](https://stackoverflow.com/questions/46044276/vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers) 2019/04/07\n意思是说不要在mutation之外更改state中变量的值，例如再actions中对state中某一变量赋值就会出现此错误。\n\n# 界面布局\n\n## card-columns布局-2019/03/23\n图片少于4张的时候会显示两列（同理，少于两张会显示1列），这是因为页面设计的排版是面向列布局的，当图片大于4张的时候自动会占满3列。\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-bug.jpg 似bug又不是bug %}\n\n## 卡片阴影移位-2019/03/24\nBootstrap中.card-columns>card加CSS阴影后，card[1,2]和card[1,3]上方阴影被截取到前一列最下方。猜测时因为`.card-columns`的面向列排版，导致阴影被错位了。**解决方法**：在`.card`的CSS里加一个`margin: 8px;`，给卡片上方阴影留出空间即可。\n{% img \thttps://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-24-card-columns-%E9%98%B4%E5%BD%B1%E7%A7%BB%E4%BD%8D.jpg 阴影移位 %}\n\n\n# Node.js\n\n## 奇怪的字符202A\n\n在读取图片的测试过程中，由于路径字符串的问题，导致读取文件时路径被当成相对路径处理报错。当我把该字符串放到控制台处理时，用其作为路径执行会报“文件不存在”的错误。然后通过[`string.charCodeAt(0)`](https://www.fileformat.info/info/unicode/char/202a/index.htm)发现字符串的第一位出现了一个不常见的字符`8234`，16进制为`202AH`，谷歌了一下看着好像是一个控制字符，可能是我在文件属性的“安全选项卡”复制路径的时候多复制了一个字符，让重新用正确的路径字符串读取文件的时候，错误消失。\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-1.jpg)\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-2.jpg)\n\n当把该字符复制到js代码里时，编辑器里是看不到的，但是会报代码语法错误。","slug":"electron-issues","published":1,"updated":"2019-04-07T11:38:03.142Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fn0041m8zaza0ov6q9","content":"<p>由于个人水平原因遇到的解决不了或已经解决的问题。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Electron-amp-Vue\"><a href=\"#Electron-amp-Vue\" class=\"headerlink\" title=\"Electron &amp; Vue\"></a>Electron &amp; Vue</h1><h2 id=\"ipcRenderer-send-函数不能工作-2019-03-26\"><a href=\"#ipcRenderer-send-函数不能工作-2019-03-26\" class=\"headerlink\" title=\"ipcRenderer.send()函数不能工作-2019/03/26\"></a>ipcRenderer.send()函数不能工作-2019/03/26</h2><p>Console里的错误描述：</p>\n<div class=\"note danger\">\n            <p>[Vue warn]: Error in v-on handler: “TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function”<br>found in<br>—&gt; <gallery> at src/renderer/components/Gallery/Gallery.vue<br>       <mainpage> at src/renderer/components/MainPage.vue<br>         <buterapp> at src/renderer/App.vue<br>           <root><br>TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function<br>    at VueComponent.drop (Gallery.vue?f747:125)<br>    at drop (Gallery.vue?f24d:127)<br>    at invokeWithErrorHandling (vue.esm.js?a026:1863)<br>    at HTMLDivElement.invoker (vue.esm.js?a026:2188)<br>    at HTMLDivElement.original._wrapper (vue.esm.js?a026:7542)</root></buterapp></mainpage></gallery></p>\n          </div>\n\n<p>该问题可能的原因是：在引入ipcRenderer的时候写成了<code>import ipcRenderer from &#39;electron&#39;</code>，改成<code>const {ipcRenderer} = require(&#39;electron&#39;)</code>不再显示错误。</p>\n<h2 id=\"ipcRenderer和ipcMain\"><a href=\"#ipcRenderer和ipcMain\" class=\"headerlink\" title=\"ipcRenderer和ipcMain\"></a>ipcRenderer和ipcMain</h2><p>ipcRenderer和ipcMain这两个类之间传递的数据是<strong>object</strong>格式，即使你在ipcRenderer里向ipcMain发送的是数组。只这么单向地说是因为在文件对话框里选择的文件经sender发送到ipcRenderer后，其object格式使用forEach不会报错。具体原因待研究。</p>\n<h2 id=\"ipcRenderer-on重复执行（dialog）\"><a href=\"#ipcRenderer-on重复执行（dialog）\" class=\"headerlink\" title=\"ipcRenderer.on重复执行（dialog）\"></a>ipcRenderer.on重复执行（dialog）</h2><p>问题描述：点击按钮打开对话框，选择文件并输出在屏幕上。第一次打开对话框选择一个图片，会有一个图片添加到视图上；再打开对话框选择一个或多个图片，会进来双倍相同的图片；接着再打开会有三倍，四倍……<br>这是个从一开始就令我脑壳痛的问题，来回测试代码就是找不到问题在哪，但是知道是在<code>ipcRenderer.on()</code>中反复执行的，之前存储数据的格式简单：数组可以去重，简单对象可以用图片的src做键，直接去掉重复的图片链接。而把数据存储到Vuex的store中之后，加上编辑页面的需要，数据结构变得复杂，变成了对象列表，这就不得不解决这个问题。后来还是在Stack Overflow中找到了<a href=\"https://stackoverflow.com/questions/52111151/node-on-method-firing-too-many-times\" target=\"_blank\" rel=\"noopener\">解决办法</a>：把<code>ipcRenderer.on()</code>用<code>ipcRenderer.once()</code>替代，这是因为每一次点击按钮打开dialog都会设置一个监听器，多次打开就需要手动删除之前的监听器，这样子很麻烦，用<code>ipcRenderer.once()</code>就会在程序块执行结束后自行删除监听器。</p>\n<h2 id=\"dialog选择文件夹会返回undefined\"><a href=\"#dialog选择文件夹会返回undefined\" class=\"headerlink\" title=\"dialog选择文件夹会返回undefined\"></a>dialog选择文件夹会返回undefined</h2><p>这是一个原因不明的问题，还没去StackOverflow上找找。现在的做法是直接过滤掉undefined的数据，目前没有很大的问题。</p>\n<h1 id=\"Vue-amp-Vuex\"><a href=\"#Vue-amp-Vuex\" class=\"headerlink\" title=\"Vue &amp; Vuex\"></a>Vue &amp; Vuex</h1><h2 id=\"Vue数据更新，视图不更新-2019-03-24\"><a href=\"#Vue数据更新，视图不更新-2019-03-24\" class=\"headerlink\" title=\"Vue数据更新，视图不更新-2019/03/24\"></a>Vue数据更新，视图不更新-2019/03/24</h2><p>点击文件对话框可以添加图片，但是拖入就添加不了，vue的数据对象也更新了，可能是更新数据的方法有问题。参考<a href=\"https://blog.csdn.net/zifeiyu130/article/details/78950244\" target=\"_blank\" rel=\"noopener\">Vue中数组和对象更改后视图不刷新的问题</a><br>尝试了N种方法，仍然tmd解决不了，考虑添加初始化图片。</p>\n<p>添加初始化图片仍然不能解决问题，情况是dom中有添加的卡片元素，就是在页面上没有显示。经过多次查找，在<code>.card-columns</code>的外层div上有一个<code>v-show=&#39;showTip&#39;(showTip=false)</code>，而且在设计页面的时候多包上了一层div（具体记不太清楚了，应该是给功能扩展留出的空间）。最后解决的方式是：去掉了多余的div和<code>v-show=false</code>，重新写了一下gallery相关的样式，得以解决。</p>\n<h2 id=\"全局变量、函数-2019-03-26\"><a href=\"#全局变量、函数-2019-03-26\" class=\"headerlink\" title=\"全局变量、函数-2019/03/26\"></a>全局变量、函数-2019/03/26</h2><p>谷歌了很多种注册全局变量、函数的方法，在我这里都行不通，可能是我个人水平的原因。<br>最后解决的方案是，将三代组件合并成父子两代组件，在父组件里声明大部分变量，然后通过<code>props</code>和<code>this.$emit()</code>方法在父子组件之间通信并同步变量解决了问题。</p>\n<p>在使用<code>this.drag_tip_seen_flag = true;this.$emit(&#39;get_drag_tip_seen_flag&#39;, drag_tip_seen_flag)</code>向父组件传递更改过的<code>dragTipSeenFlag</code>变量的情况下，当点击<code>&amp;times;</code>关闭选项卡的时候，Console会出现Vue的警告:</p>\n<div class=\"note danger\">\n            <p>[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop’s value. Prop being mutated: “drag_tip_seen_flag”<br>[Vue warn]: Error in v-on handler: “ReferenceError: drag_tip_seen_flag is not defined”<br>found in……</p>\n          </div>\n<p>意思是由于更改了变量而警告改变量可能会被覆盖，需要注意。在把该两行代码换成<code>this.$emit(&#39;get_drag_tip_seen_flag&#39;, true)</code>之后，警告消失。这里的解决方式只是个例，如果父子组件之间互相传递的变量比较多而引发该问题时，就需要考虑换一种方法了。（我是tmd再也不想接触vue的全局变量和全局函数了）</p>\n<h2 id=\"Vuex-state数据返回错误\"><a href=\"#Vuex-state数据返回错误\" class=\"headerlink\" title=\"Vuex state数据返回错误\"></a>Vuex state数据返回错误</h2><p>在将数据移至Vuex后，发现从state中获取的bool数据不符合预期，总是返回错误的数据。只有在一开始初始化的时候才正确，更不用说更新这个state了。</p>\n<h2 id=\"vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers-2019-04-07\"><a href=\"#vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers-2019-04-07\" class=\"headerlink\" title=\"[vuex] do not mutate vuex store state outside mutation handlers. 2019/04/07\"></a>[vuex] <a href=\"https://stackoverflow.com/questions/46044276/vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers\" target=\"_blank\" rel=\"noopener\">do not mutate vuex store state outside mutation handlers.</a> 2019/04/07</h2><p>意思是说不要在mutation之外更改state中变量的值，例如再actions中对state中某一变量赋值就会出现此错误。</p>\n<h1 id=\"界面布局\"><a href=\"#界面布局\" class=\"headerlink\" title=\"界面布局\"></a>界面布局</h1><h2 id=\"card-columns布局-2019-03-23\"><a href=\"#card-columns布局-2019-03-23\" class=\"headerlink\" title=\"card-columns布局-2019/03/23\"></a>card-columns布局-2019/03/23</h2><p>图片少于4张的时候会显示两列（同理，少于两张会显示1列），这是因为页面设计的排版是面向列布局的，当图片大于4张的时候自动会占满3列。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-bug.jpg\" title=\"似bug又不是bug\">\n\n<h2 id=\"卡片阴影移位-2019-03-24\"><a href=\"#卡片阴影移位-2019-03-24\" class=\"headerlink\" title=\"卡片阴影移位-2019/03/24\"></a>卡片阴影移位-2019/03/24</h2><p>Bootstrap中.card-columns&gt;card加CSS阴影后，card[1,2]和card[1,3]上方阴影被截取到前一列最下方。猜测时因为<code>.card-columns</code>的面向列排版，导致阴影被错位了。<strong>解决方法</strong>：在<code>.card</code>的CSS里加一个<code>margin: 8px;</code>，给卡片上方阴影留出空间即可。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-24-card-columns-%E9%98%B4%E5%BD%B1%E7%A7%BB%E4%BD%8D.jpg\" title=\"阴影移位\">\n\n\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><h2 id=\"奇怪的字符202A\"><a href=\"#奇怪的字符202A\" class=\"headerlink\" title=\"奇怪的字符202A\"></a>奇怪的字符202A</h2><p>在读取图片的测试过程中，由于路径字符串的问题，导致读取文件时路径被当成相对路径处理报错。当我把该字符串放到控制台处理时，用其作为路径执行会报“文件不存在”的错误。然后通过<a href=\"https://www.fileformat.info/info/unicode/char/202a/index.htm\" target=\"_blank\" rel=\"noopener\"><code>string.charCodeAt(0)</code></a>发现字符串的第一位出现了一个不常见的字符<code>8234</code>，16进制为<code>202AH</code>，谷歌了一下看着好像是一个控制字符，可能是我在文件属性的“安全选项卡”复制路径的时候多复制了一个字符，让重新用正确的路径字符串读取文件的时候，错误消失。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-1.jpg\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-2.jpg\" alt></p>\n<p>当把该字符复制到js代码里时，编辑器里是看不到的，但是会报代码语法错误。</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>由于个人水平原因遇到的解决不了或已经解决的问题。</p>","more":"<h1 id=\"Electron-amp-Vue\"><a href=\"#Electron-amp-Vue\" class=\"headerlink\" title=\"Electron &amp; Vue\"></a>Electron &amp; Vue</h1><h2 id=\"ipcRenderer-send-函数不能工作-2019-03-26\"><a href=\"#ipcRenderer-send-函数不能工作-2019-03-26\" class=\"headerlink\" title=\"ipcRenderer.send()函数不能工作-2019/03/26\"></a>ipcRenderer.send()函数不能工作-2019/03/26</h2><p>Console里的错误描述：</p>\n<div class=\"note danger\">\n            <p>[Vue warn]: Error in v-on handler: “TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function”<br>found in<br>—&gt; <gallery> at src/renderer/components/Gallery/Gallery.vue<br>       <mainpage> at src/renderer/components/MainPage.vue<br>         <buterapp> at src/renderer/App.vue<br>           <root><br>TypeError: electron__WEBPACK_IMPORTED_MODULE_3___default.a.send is not a function<br>    at VueComponent.drop (Gallery.vue?f747:125)<br>    at drop (Gallery.vue?f24d:127)<br>    at invokeWithErrorHandling (vue.esm.js?a026:1863)<br>    at HTMLDivElement.invoker (vue.esm.js?a026:2188)<br>    at HTMLDivElement.original._wrapper (vue.esm.js?a026:7542)</root></buterapp></mainpage></gallery></p>\n          </div>\n\n<p>该问题可能的原因是：在引入ipcRenderer的时候写成了<code>import ipcRenderer from &#39;electron&#39;</code>，改成<code>const {ipcRenderer} = require(&#39;electron&#39;)</code>不再显示错误。</p>\n<h2 id=\"ipcRenderer和ipcMain\"><a href=\"#ipcRenderer和ipcMain\" class=\"headerlink\" title=\"ipcRenderer和ipcMain\"></a>ipcRenderer和ipcMain</h2><p>ipcRenderer和ipcMain这两个类之间传递的数据是<strong>object</strong>格式，即使你在ipcRenderer里向ipcMain发送的是数组。只这么单向地说是因为在文件对话框里选择的文件经sender发送到ipcRenderer后，其object格式使用forEach不会报错。具体原因待研究。</p>\n<h2 id=\"ipcRenderer-on重复执行（dialog）\"><a href=\"#ipcRenderer-on重复执行（dialog）\" class=\"headerlink\" title=\"ipcRenderer.on重复执行（dialog）\"></a>ipcRenderer.on重复执行（dialog）</h2><p>问题描述：点击按钮打开对话框，选择文件并输出在屏幕上。第一次打开对话框选择一个图片，会有一个图片添加到视图上；再打开对话框选择一个或多个图片，会进来双倍相同的图片；接着再打开会有三倍，四倍……<br>这是个从一开始就令我脑壳痛的问题，来回测试代码就是找不到问题在哪，但是知道是在<code>ipcRenderer.on()</code>中反复执行的，之前存储数据的格式简单：数组可以去重，简单对象可以用图片的src做键，直接去掉重复的图片链接。而把数据存储到Vuex的store中之后，加上编辑页面的需要，数据结构变得复杂，变成了对象列表，这就不得不解决这个问题。后来还是在Stack Overflow中找到了<a href=\"https://stackoverflow.com/questions/52111151/node-on-method-firing-too-many-times\" target=\"_blank\" rel=\"noopener\">解决办法</a>：把<code>ipcRenderer.on()</code>用<code>ipcRenderer.once()</code>替代，这是因为每一次点击按钮打开dialog都会设置一个监听器，多次打开就需要手动删除之前的监听器，这样子很麻烦，用<code>ipcRenderer.once()</code>就会在程序块执行结束后自行删除监听器。</p>\n<h2 id=\"dialog选择文件夹会返回undefined\"><a href=\"#dialog选择文件夹会返回undefined\" class=\"headerlink\" title=\"dialog选择文件夹会返回undefined\"></a>dialog选择文件夹会返回undefined</h2><p>这是一个原因不明的问题，还没去StackOverflow上找找。现在的做法是直接过滤掉undefined的数据，目前没有很大的问题。</p>\n<h1 id=\"Vue-amp-Vuex\"><a href=\"#Vue-amp-Vuex\" class=\"headerlink\" title=\"Vue &amp; Vuex\"></a>Vue &amp; Vuex</h1><h2 id=\"Vue数据更新，视图不更新-2019-03-24\"><a href=\"#Vue数据更新，视图不更新-2019-03-24\" class=\"headerlink\" title=\"Vue数据更新，视图不更新-2019/03/24\"></a>Vue数据更新，视图不更新-2019/03/24</h2><p>点击文件对话框可以添加图片，但是拖入就添加不了，vue的数据对象也更新了，可能是更新数据的方法有问题。参考<a href=\"https://blog.csdn.net/zifeiyu130/article/details/78950244\" target=\"_blank\" rel=\"noopener\">Vue中数组和对象更改后视图不刷新的问题</a><br>尝试了N种方法，仍然tmd解决不了，考虑添加初始化图片。</p>\n<p>添加初始化图片仍然不能解决问题，情况是dom中有添加的卡片元素，就是在页面上没有显示。经过多次查找，在<code>.card-columns</code>的外层div上有一个<code>v-show=&#39;showTip&#39;(showTip=false)</code>，而且在设计页面的时候多包上了一层div（具体记不太清楚了，应该是给功能扩展留出的空间）。最后解决的方式是：去掉了多余的div和<code>v-show=false</code>，重新写了一下gallery相关的样式，得以解决。</p>\n<h2 id=\"全局变量、函数-2019-03-26\"><a href=\"#全局变量、函数-2019-03-26\" class=\"headerlink\" title=\"全局变量、函数-2019/03/26\"></a>全局变量、函数-2019/03/26</h2><p>谷歌了很多种注册全局变量、函数的方法，在我这里都行不通，可能是我个人水平的原因。<br>最后解决的方案是，将三代组件合并成父子两代组件，在父组件里声明大部分变量，然后通过<code>props</code>和<code>this.$emit()</code>方法在父子组件之间通信并同步变量解决了问题。</p>\n<p>在使用<code>this.drag_tip_seen_flag = true;this.$emit(&#39;get_drag_tip_seen_flag&#39;, drag_tip_seen_flag)</code>向父组件传递更改过的<code>dragTipSeenFlag</code>变量的情况下，当点击<code>&amp;times;</code>关闭选项卡的时候，Console会出现Vue的警告:</p>\n<div class=\"note danger\">\n            <p>[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop’s value. Prop being mutated: “drag_tip_seen_flag”<br>[Vue warn]: Error in v-on handler: “ReferenceError: drag_tip_seen_flag is not defined”<br>found in……</p>\n          </div>\n<p>意思是由于更改了变量而警告改变量可能会被覆盖，需要注意。在把该两行代码换成<code>this.$emit(&#39;get_drag_tip_seen_flag&#39;, true)</code>之后，警告消失。这里的解决方式只是个例，如果父子组件之间互相传递的变量比较多而引发该问题时，就需要考虑换一种方法了。（我是tmd再也不想接触vue的全局变量和全局函数了）</p>\n<h2 id=\"Vuex-state数据返回错误\"><a href=\"#Vuex-state数据返回错误\" class=\"headerlink\" title=\"Vuex state数据返回错误\"></a>Vuex state数据返回错误</h2><p>在将数据移至Vuex后，发现从state中获取的bool数据不符合预期，总是返回错误的数据。只有在一开始初始化的时候才正确，更不用说更新这个state了。</p>\n<h2 id=\"vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers-2019-04-07\"><a href=\"#vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers-2019-04-07\" class=\"headerlink\" title=\"[vuex] do not mutate vuex store state outside mutation handlers. 2019/04/07\"></a>[vuex] <a href=\"https://stackoverflow.com/questions/46044276/vuex-do-not-mutate-vuex-store-state-outside-mutation-handlers\" target=\"_blank\" rel=\"noopener\">do not mutate vuex store state outside mutation handlers.</a> 2019/04/07</h2><p>意思是说不要在mutation之外更改state中变量的值，例如再actions中对state中某一变量赋值就会出现此错误。</p>\n<h1 id=\"界面布局\"><a href=\"#界面布局\" class=\"headerlink\" title=\"界面布局\"></a>界面布局</h1><h2 id=\"card-columns布局-2019-03-23\"><a href=\"#card-columns布局-2019-03-23\" class=\"headerlink\" title=\"card-columns布局-2019/03/23\"></a>card-columns布局-2019/03/23</h2><p>图片少于4张的时候会显示两列（同理，少于两张会显示1列），这是因为页面设计的排版是面向列布局的，当图片大于4张的时候自动会占满3列。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-23-card-columns-bug.jpg\" title=\"似bug又不是bug\">\n\n<h2 id=\"卡片阴影移位-2019-03-24\"><a href=\"#卡片阴影移位-2019-03-24\" class=\"headerlink\" title=\"卡片阴影移位-2019/03/24\"></a>卡片阴影移位-2019/03/24</h2><p>Bootstrap中.card-columns&gt;card加CSS阴影后，card[1,2]和card[1,3]上方阴影被截取到前一列最下方。猜测时因为<code>.card-columns</code>的面向列排版，导致阴影被错位了。<strong>解决方法</strong>：在<code>.card</code>的CSS里加一个<code>margin: 8px;</code>，给卡片上方阴影留出空间即可。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-24-card-columns-%E9%98%B4%E5%BD%B1%E7%A7%BB%E4%BD%8D.jpg\" title=\"阴影移位\">\n\n\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><h2 id=\"奇怪的字符202A\"><a href=\"#奇怪的字符202A\" class=\"headerlink\" title=\"奇怪的字符202A\"></a>奇怪的字符202A</h2><p>在读取图片的测试过程中，由于路径字符串的问题，导致读取文件时路径被当成相对路径处理报错。当我把该字符串放到控制台处理时，用其作为路径执行会报“文件不存在”的错误。然后通过<a href=\"https://www.fileformat.info/info/unicode/char/202a/index.htm\" target=\"_blank\" rel=\"noopener\"><code>string.charCodeAt(0)</code></a>发现字符串的第一位出现了一个不常见的字符<code>8234</code>，16进制为<code>202AH</code>，谷歌了一下看着好像是一个控制字符，可能是我在文件属性的“安全选项卡”复制路径的时候多复制了一个字符，让重新用正确的路径字符串读取文件的时候，错误消失。</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-1.jpg\" alt><br><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-27-fucking-char-2.jpg\" alt></p>\n<p>当把该字符复制到js代码里时，编辑器里是看不到的，但是会报代码语法错误。</p>"},{"title":"图片切割脚本使用","date":"2019-03-26T21:46:06.000Z","_content":"\n环境要求：python3、PS（或其他能准确获取指定像素点的软件）\n<!--more-->\n\n1. 在待处理图片文件夹里新建一个`cut`的文件夹，里边放入一批拍摄角度、对象在图片的位置均相似的图片。Windows的多选是`Ctrl+Shoft+左键`，MacOS不明:simple_smile:\n   {% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-1.png 新建cut文件夹 %}\n   {% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-2.png 选中相似的图片 %}\n2. 在脚本的最上方填入“待处理图片的路径”和“输出图片的路径”，如：\n{% code lang:python %}\n# csv保存路径\ncsv_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\\\'\n# 待处理图片路径\nimg_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\right\\cut\\\\'\n# 新文件写入路径\nnew_img_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\02\\right\\\\'\n{% endcode %}\n其中，csv是图片处理记录的数据，没什么重要性，选填，但是执行脚本的时候需要输入“n”或直接把这段功能的代码注释掉掉。\n\n3. 在PS里获取信息。\n\n打开图片后，用矩形选框工具选好位置，其长宽比可固定为3:2；右键单击选框，选择“变换选区”，然后在“信息面板”查看该矩形选框的信息（左上角坐标：X、Y；选框长宽：W、H），将这四个数填入脚本下方对应位置。\n{% code lang:python %}\n# 起始点坐标，PhotoShop获得\nstart_x = 459\nstart_y = 231\n# 切割尺寸，PhotoShop获得\ncrop_length = 2649\ncrop_height = 1766\n{% endcode %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-3.jpg 变换选区 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-4.png 查看选框信息 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-5.jpg 信息面板 %}\n\n4. 执行代码。\n首先，脚本会对cut文件夹下中间的那张图片做测试，因为预览图中图片的方向并不一定是其真实方向，可能预览图中老虎头朝上，而文件信息中的老虎是头朝下的，就会出现错误。一般而言，将图片横向放置不会有错。如果测试图片和预期不一致，输入“n”退出程序，然后选一张图片调整为正确的方向重新获取XYWH执行脚本\n\n确认无误后，回车继续，新文件将会保存到`new_img_path`指定位置（该文件夹必须存在）。\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-6.png 输出测试图 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-7.png 结果示例 %}\n","source":"_posts/2019-03-26-how-to-cut-tiger.md","raw":"---\ntitle: 图片切割脚本使用\ndate: 2019-03-26 21:46:06\ntags: \n- 教程\n---\n\n环境要求：python3、PS（或其他能准确获取指定像素点的软件）\n<!--more-->\n\n1. 在待处理图片文件夹里新建一个`cut`的文件夹，里边放入一批拍摄角度、对象在图片的位置均相似的图片。Windows的多选是`Ctrl+Shoft+左键`，MacOS不明:simple_smile:\n   {% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-1.png 新建cut文件夹 %}\n   {% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-2.png 选中相似的图片 %}\n2. 在脚本的最上方填入“待处理图片的路径”和“输出图片的路径”，如：\n{% code lang:python %}\n# csv保存路径\ncsv_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\\\'\n# 待处理图片路径\nimg_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\right\\cut\\\\'\n# 新文件写入路径\nnew_img_path = r'D:\\Users\\Teemo Nicolas\\Downloads\\02\\right\\\\'\n{% endcode %}\n其中，csv是图片处理记录的数据，没什么重要性，选填，但是执行脚本的时候需要输入“n”或直接把这段功能的代码注释掉掉。\n\n3. 在PS里获取信息。\n\n打开图片后，用矩形选框工具选好位置，其长宽比可固定为3:2；右键单击选框，选择“变换选区”，然后在“信息面板”查看该矩形选框的信息（左上角坐标：X、Y；选框长宽：W、H），将这四个数填入脚本下方对应位置。\n{% code lang:python %}\n# 起始点坐标，PhotoShop获得\nstart_x = 459\nstart_y = 231\n# 切割尺寸，PhotoShop获得\ncrop_length = 2649\ncrop_height = 1766\n{% endcode %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-3.jpg 变换选区 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-4.png 查看选框信息 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-5.jpg 信息面板 %}\n\n4. 执行代码。\n首先，脚本会对cut文件夹下中间的那张图片做测试，因为预览图中图片的方向并不一定是其真实方向，可能预览图中老虎头朝上，而文件信息中的老虎是头朝下的，就会出现错误。一般而言，将图片横向放置不会有错。如果测试图片和预期不一致，输入“n”退出程序，然后选一张图片调整为正确的方向重新获取XYWH执行脚本\n\n确认无误后，回车继续，新文件将会保存到`new_img_path`指定位置（该文件夹必须存在）。\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-6.png 输出测试图 %}\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-7.png 结果示例 %}\n","slug":"how-to-cut-tiger","published":1,"updated":"2019-03-26T14:31:24.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fp0044m8zabj3xy1b0","content":"<p>环境要求：python3、PS（或其他能准确获取指定像素点的软件）</p>\n<a id=\"more\"></a>\n\n<ol>\n<li><p>在待处理图片文件夹里新建一个<code>cut</code>的文件夹，里边放入一批拍摄角度、对象在图片的位置均相似的图片。Windows的多选是<code>Ctrl+Shoft+左键</code>，MacOS不明:simple_smile:</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-1.png\" title=\"新建cut文件夹\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-2.png\" title=\"选中相似的图片\"></li>\n<li><p>在脚本的最上方填入“待处理图片的路径”和“输出图片的路径”，如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># csv保存路径</span></span><br><span class=\"line\">csv_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\\\'</span></span><br><span class=\"line\"><span class=\"comment\"># 待处理图片路径</span></span><br><span class=\"line\">img_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\right\\cut\\\\'</span></span><br><span class=\"line\"><span class=\"comment\"># 新文件写入路径</span></span><br><span class=\"line\">new_img_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\02\\right\\\\'</span></span><br></pre></td></tr></table></figure>\n<p>其中，csv是图片处理记录的数据，没什么重要性，选填，但是执行脚本的时候需要输入“n”或直接把这段功能的代码注释掉掉。</p>\n</li>\n<li><p>在PS里获取信息。</p>\n</li>\n</ol>\n<p>打开图片后，用矩形选框工具选好位置，其长宽比可固定为3:2；右键单击选框，选择“变换选区”，然后在“信息面板”查看该矩形选框的信息（左上角坐标：X、Y；选框长宽：W、H），将这四个数填入脚本下方对应位置。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 起始点坐标，PhotoShop获得</span></span><br><span class=\"line\">start_x = <span class=\"number\">459</span></span><br><span class=\"line\">start_y = <span class=\"number\">231</span></span><br><span class=\"line\"><span class=\"comment\"># 切割尺寸，PhotoShop获得</span></span><br><span class=\"line\">crop_length = <span class=\"number\">2649</span></span><br><span class=\"line\">crop_height = <span class=\"number\">1766</span></span><br></pre></td></tr></table></figure>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-3.jpg\" title=\"变换选区\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-4.png\" title=\"查看选框信息\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-5.jpg\" title=\"信息面板\">\n\n<ol start=\"4\">\n<li>执行代码。<br>首先，脚本会对cut文件夹下中间的那张图片做测试，因为预览图中图片的方向并不一定是其真实方向，可能预览图中老虎头朝上，而文件信息中的老虎是头朝下的，就会出现错误。一般而言，将图片横向放置不会有错。如果测试图片和预期不一致，输入“n”退出程序，然后选一张图片调整为正确的方向重新获取XYWH执行脚本</li>\n</ol>\n<p>确认无误后，回车继续，新文件将会保存到<code>new_img_path</code>指定位置（该文件夹必须存在）。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-6.png\" title=\"输出测试图\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-7.png\" title=\"结果示例\">\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>环境要求：python3、PS（或其他能准确获取指定像素点的软件）</p>","more":"<ol>\n<li><p>在待处理图片文件夹里新建一个<code>cut</code>的文件夹，里边放入一批拍摄角度、对象在图片的位置均相似的图片。Windows的多选是<code>Ctrl+Shoft+左键</code>，MacOS不明:simple_smile:</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-1.png\" title=\"新建cut文件夹\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-2.png\" title=\"选中相似的图片\"></li>\n<li><p>在脚本的最上方填入“待处理图片的路径”和“输出图片的路径”，如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># csv保存路径</span></span><br><span class=\"line\">csv_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\\\'</span></span><br><span class=\"line\"><span class=\"comment\"># 待处理图片路径</span></span><br><span class=\"line\">img_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\002\\right\\cut\\\\'</span></span><br><span class=\"line\"><span class=\"comment\"># 新文件写入路径</span></span><br><span class=\"line\">new_img_path = <span class=\"string\">r'D:\\Users\\Teemo Nicolas\\Downloads\\02\\right\\\\'</span></span><br></pre></td></tr></table></figure>\n<p>其中，csv是图片处理记录的数据，没什么重要性，选填，但是执行脚本的时候需要输入“n”或直接把这段功能的代码注释掉掉。</p>\n</li>\n<li><p>在PS里获取信息。</p>\n</li>\n</ol>\n<p>打开图片后，用矩形选框工具选好位置，其长宽比可固定为3:2；右键单击选框，选择“变换选区”，然后在“信息面板”查看该矩形选框的信息（左上角坐标：X、Y；选框长宽：W、H），将这四个数填入脚本下方对应位置。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 起始点坐标，PhotoShop获得</span></span><br><span class=\"line\">start_x = <span class=\"number\">459</span></span><br><span class=\"line\">start_y = <span class=\"number\">231</span></span><br><span class=\"line\"><span class=\"comment\"># 切割尺寸，PhotoShop获得</span></span><br><span class=\"line\">crop_length = <span class=\"number\">2649</span></span><br><span class=\"line\">crop_height = <span class=\"number\">1766</span></span><br></pre></td></tr></table></figure>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-3.jpg\" title=\"变换选区\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-4.png\" title=\"查看选框信息\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-5.jpg\" title=\"信息面板\">\n\n<ol start=\"4\">\n<li>执行代码。<br>首先，脚本会对cut文件夹下中间的那张图片做测试，因为预览图中图片的方向并不一定是其真实方向，可能预览图中老虎头朝上，而文件信息中的老虎是头朝下的，就会出现错误。一般而言，将图片横向放置不会有错。如果测试图片和预期不一致，输入“n”退出程序，然后选一张图片调整为正确的方向重新获取XYWH执行脚本</li>\n</ol>\n<p>确认无误后，回车继续，新文件将会保存到<code>new_img_path</code>指定位置（该文件夹必须存在）。</p>\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-6.png\" title=\"输出测试图\">\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-03-26-cut-tiger-7.png\" title=\"结果示例\">"},{"title":"Electron-Vue开发笔记——1","date":"2019-04-08T14:54:37.000Z","_content":"\n在基本功能完成以后，开启debug模式。\n\n<!-- more -->\n\n# 图表\n\n## Echarts\nBuper中的图表是借助[Echarts](https://echarts.baidu.com/index.html)构建的。\n### 主题\n在[Echarts 主题在线构建工具](https://echarts.baidu.com/theme-builder/)可以下载默认主题。当然，你也可以借助此工具自定义更加炫酷的主题。\n\n在此项目中直接按照说明加载主题是不成功的，解决方式有两个：\n1. 把主题的json另存为`*.js`文件，然后\n``` js\n// theme.js\nconst theme = {/*json*/}\nexport default theme;\n\n// *.vue\nimport theme from './themes/theme'\necharts.registerTheme('themename', theme);\necharts.init(document.getElementById('chart'), 'themename');\n```\n2. 把下载的js（不是json）文件中`root.echarts`改为`echarts`，然后在该文件里 `import echarts from 'echarts'`。然后在vue组件中可以直接使用`*.js`中注册的主题名字。","source":"_posts/2019-04-08-electron-note-2.md","raw":"---\ntitle: Electron-Vue开发笔记——1\ndate: 2019-04-08 14:54:37\ncategory: \n- [Node.js]\n- [Electron]\ntags: \n- 前端\n- echarts\n- Electron-Vue\n---\n\n在基本功能完成以后，开启debug模式。\n\n<!-- more -->\n\n# 图表\n\n## Echarts\nBuper中的图表是借助[Echarts](https://echarts.baidu.com/index.html)构建的。\n### 主题\n在[Echarts 主题在线构建工具](https://echarts.baidu.com/theme-builder/)可以下载默认主题。当然，你也可以借助此工具自定义更加炫酷的主题。\n\n在此项目中直接按照说明加载主题是不成功的，解决方式有两个：\n1. 把主题的json另存为`*.js`文件，然后\n``` js\n// theme.js\nconst theme = {/*json*/}\nexport default theme;\n\n// *.vue\nimport theme from './themes/theme'\necharts.registerTheme('themename', theme);\necharts.init(document.getElementById('chart'), 'themename');\n```\n2. 把下载的js（不是json）文件中`root.echarts`改为`echarts`，然后在该文件里 `import echarts from 'echarts'`。然后在vue组件中可以直接使用`*.js`中注册的主题名字。","slug":"electron-note-2","published":1,"updated":"2019-04-08T07:09:26.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fr0047m8zada9kqyrv","content":"<p>在基本功能完成以后，开启debug模式。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h1><h2 id=\"Echarts\"><a href=\"#Echarts\" class=\"headerlink\" title=\"Echarts\"></a>Echarts</h2><p>Buper中的图表是借助<a href=\"https://echarts.baidu.com/index.html\" target=\"_blank\" rel=\"noopener\">Echarts</a>构建的。</p>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><p>在<a href=\"https://echarts.baidu.com/theme-builder/\" target=\"_blank\" rel=\"noopener\">Echarts 主题在线构建工具</a>可以下载默认主题。当然，你也可以借助此工具自定义更加炫酷的主题。</p>\n<p>在此项目中直接按照说明加载主题是不成功的，解决方式有两个：</p>\n<ol>\n<li><p>把主题的json另存为<code>*.js</code>文件，然后</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// theme.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> theme = &#123;<span class=\"comment\">/*json*/</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> theme;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// *.vue</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> theme <span class=\"keyword\">from</span> <span class=\"string\">'./themes/theme'</span></span><br><span class=\"line\">echarts.registerTheme(<span class=\"string\">'themename'</span>, theme);</span><br><span class=\"line\">echarts.init(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'chart'</span>), <span class=\"string\">'themename'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把下载的js（不是json）文件中<code>root.echarts</code>改为<code>echarts</code>，然后在该文件里 <code>import echarts from &#39;echarts&#39;</code>。然后在vue组件中可以直接使用<code>*.js</code>中注册的主题名字。</p>\n</li>\n</ol>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>在基本功能完成以后，开启debug模式。</p>","more":"<h1 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h1><h2 id=\"Echarts\"><a href=\"#Echarts\" class=\"headerlink\" title=\"Echarts\"></a>Echarts</h2><p>Buper中的图表是借助<a href=\"https://echarts.baidu.com/index.html\" target=\"_blank\" rel=\"noopener\">Echarts</a>构建的。</p>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><p>在<a href=\"https://echarts.baidu.com/theme-builder/\" target=\"_blank\" rel=\"noopener\">Echarts 主题在线构建工具</a>可以下载默认主题。当然，你也可以借助此工具自定义更加炫酷的主题。</p>\n<p>在此项目中直接按照说明加载主题是不成功的，解决方式有两个：</p>\n<ol>\n<li><p>把主题的json另存为<code>*.js</code>文件，然后</p>\n<!--�58-->\n</li>\n<li><p>把下载的js（不是json）文件中<code>root.echarts</code>改为<code>echarts</code>，然后在该文件里 <code>import echarts from &#39;echarts&#39;</code>。然后在vue组件中可以直接使用<code>*.js</code>中注册的主题名字。</p>\n</li>\n</ol>"},{"title":"Latex自定义设置","date":"2019-05-14T10:39:29.000Z","mathjax":true,"_content":"\n$\\LaTex$论文写作Tip全记录\n\n<!-- more -->\n\n# Latex格式\n\n## 页面尺寸\n``` latex\n\\usepackage{geometry}\n\\geometry{a4paper, left=2.4cm, top=2.4cm, right=2.4cm, bottom=2.4cm}  % 页边距\n```\n\n## 页眉页脚\nL、C、R分别表示左、中、右；E、O表示奇偶页，页眉页脚的设置中可以使用它们的组合，多选项的情况用中括号分开。\n现在有几个问题：\n1. 页眉需要的样式是：奇数页居中显示章节号，偶数页显示“东北林业大学本科毕业论文”，但是通过[CE]、[CO]设置就不行，而且只设置`\\fancyhead[CE]{\\song\\xiaowu{东北林业大学本科毕业论文}}`也会失败，什么都不显示。\n2. 双线页眉的长度一开始是`\\headwidth`，右侧没有达到文档宽度的位置。改为`\\columnwidth`或`\\textwidth`之后，长度虽然改变了，但是文字的位置没有随之向右移动（没有居中）\n3. 问题1中的章节号不知道怎么获取……\n``` latex\n\\usepackage{fancyhdr}\n\n%------- 页眉页脚样式 -------%\n\\pagestyle{fancy}\n\\fancyhf{}  % 清空设置\n\\fancyhead[C]{\\song\\xiaowu{东北林业大学本科毕业论文}}\n% \\fancyhead[CO]{\\thechapter}\n\\fancyfoot[C]{\\xiaowu{-\\thepage-}}\n\\renewcommand{\\headrulewidth}{0.4pt}\n\n%------- 双线页眉的设置 -------%\n\\makeatletter %双线页眉\n\\def\\headrule{{\\if@fancyplain\\let\\headrulewidth\\plainheadrulewidth\\fi%\n\\hrule\\@height 1.0pt \\@width\\columnwidth\\vskip1pt%上面线为1pt粗\n\\hrule\\@height 0.5pt\\@width\\columnwidth  %下面0.5pt粗\n\\vskip-2\\headrulewidth\\vskip-1pt}      %两条线的距离1pt\n  \\vspace{6mm}}     %双线与下面正文之间的垂直间距\n\\makeatother\n```\n\n## 并排图片\n\n``` latex\n\\begin{figure}[htbp]\n    \\centering %图片全局居中\n    \\subfigure[原图]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-原图.jpg}\n    }\n    \\subfigure[互相关]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-互相关.jpg}\n    }\n    \\subfigure[卷积]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-卷积.jpg}\n    }\n    \\caption{卷积核的翻转对特征提取的影响}\n    \\label{Figure.Second.1}\n  \\end{figure}\n```\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%A4%9A%E5%9B%BE.jpg 图片并排显示 %}\n\n# Latex样式\n\n## 图片标题的样式\n把图片标题默认的“图1:示例”更改为“图2-1 示例”。\n其中：\n- thesection{} 表示章节号\n- 两个命令分别设置表格和插图的格式\n- 命令中的“-”可以用“.”等符号代替，以适应不同的要求\n``` latex\n\\renewcommand {\\thetable} {\\thesection{}-\\arabic{table}} \n\\renewcommand {\\thefigure} {\\thesection{}-\\arabic{figure}}\n\\captionsetup{labelformat=default,labelsep=space} %去除冒号\n```\n\n## 公式引用输出样式\n\n``` latex\n\\renewcommand\\theequation{\\arabic{section}-\\arabic{equation}} % 公式引用输出样式\n\n\\begin{equation}\n    (\\ref{Formula.Second.1}) \\Leftrightarrow S(i,j)=(K*I)(i,j)=\\sum_m \\sum_n I(i-m,j-n)K(m,n)\\label{Formula.Second.3}\n\\end{equation}\n(\\ref{Formula.Second.3})式也被称为I和K的互相关\n```\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%85%AC%E5%BC%8F%E7%BC%96%E5%8F%B7.jpg 公式的编号与引用 %}\n","source":"_posts/2019-05-14-latex-notes.md","raw":"---\ntitle: Latex自定义设置\ndate: 2019-05-14 10:39:29\ncategories:\n- LaTex\ntags:\n- Latex\nmathjax: true\n---\n\n$\\LaTex$论文写作Tip全记录\n\n<!-- more -->\n\n# Latex格式\n\n## 页面尺寸\n``` latex\n\\usepackage{geometry}\n\\geometry{a4paper, left=2.4cm, top=2.4cm, right=2.4cm, bottom=2.4cm}  % 页边距\n```\n\n## 页眉页脚\nL、C、R分别表示左、中、右；E、O表示奇偶页，页眉页脚的设置中可以使用它们的组合，多选项的情况用中括号分开。\n现在有几个问题：\n1. 页眉需要的样式是：奇数页居中显示章节号，偶数页显示“东北林业大学本科毕业论文”，但是通过[CE]、[CO]设置就不行，而且只设置`\\fancyhead[CE]{\\song\\xiaowu{东北林业大学本科毕业论文}}`也会失败，什么都不显示。\n2. 双线页眉的长度一开始是`\\headwidth`，右侧没有达到文档宽度的位置。改为`\\columnwidth`或`\\textwidth`之后，长度虽然改变了，但是文字的位置没有随之向右移动（没有居中）\n3. 问题1中的章节号不知道怎么获取……\n``` latex\n\\usepackage{fancyhdr}\n\n%------- 页眉页脚样式 -------%\n\\pagestyle{fancy}\n\\fancyhf{}  % 清空设置\n\\fancyhead[C]{\\song\\xiaowu{东北林业大学本科毕业论文}}\n% \\fancyhead[CO]{\\thechapter}\n\\fancyfoot[C]{\\xiaowu{-\\thepage-}}\n\\renewcommand{\\headrulewidth}{0.4pt}\n\n%------- 双线页眉的设置 -------%\n\\makeatletter %双线页眉\n\\def\\headrule{{\\if@fancyplain\\let\\headrulewidth\\plainheadrulewidth\\fi%\n\\hrule\\@height 1.0pt \\@width\\columnwidth\\vskip1pt%上面线为1pt粗\n\\hrule\\@height 0.5pt\\@width\\columnwidth  %下面0.5pt粗\n\\vskip-2\\headrulewidth\\vskip-1pt}      %两条线的距离1pt\n  \\vspace{6mm}}     %双线与下面正文之间的垂直间距\n\\makeatother\n```\n\n## 并排图片\n\n``` latex\n\\begin{figure}[htbp]\n    \\centering %图片全局居中\n    \\subfigure[原图]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-原图.jpg}\n    }\n    \\subfigure[互相关]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-互相关.jpg}\n    }\n    \\subfigure[卷积]{\n      \\includegraphics[width=0.2\\textwidth]{resource/2-卷积.jpg}\n    }\n    \\caption{卷积核的翻转对特征提取的影响}\n    \\label{Figure.Second.1}\n  \\end{figure}\n```\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%A4%9A%E5%9B%BE.jpg 图片并排显示 %}\n\n# Latex样式\n\n## 图片标题的样式\n把图片标题默认的“图1:示例”更改为“图2-1 示例”。\n其中：\n- thesection{} 表示章节号\n- 两个命令分别设置表格和插图的格式\n- 命令中的“-”可以用“.”等符号代替，以适应不同的要求\n``` latex\n\\renewcommand {\\thetable} {\\thesection{}-\\arabic{table}} \n\\renewcommand {\\thefigure} {\\thesection{}-\\arabic{figure}}\n\\captionsetup{labelformat=default,labelsep=space} %去除冒号\n```\n\n## 公式引用输出样式\n\n``` latex\n\\renewcommand\\theequation{\\arabic{section}-\\arabic{equation}} % 公式引用输出样式\n\n\\begin{equation}\n    (\\ref{Formula.Second.1}) \\Leftrightarrow S(i,j)=(K*I)(i,j)=\\sum_m \\sum_n I(i-m,j-n)K(m,n)\\label{Formula.Second.3}\n\\end{equation}\n(\\ref{Formula.Second.3})式也被称为I和K的互相关\n```\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%85%AC%E5%BC%8F%E7%BC%96%E5%8F%B7.jpg 公式的编号与引用 %}\n","slug":"latex-notes","published":1,"updated":"2019-05-14T04:42:35.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fs004am8zam9ppoax0","content":"<p>$\\LaTex$论文写作Tip全记录</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Latex格式\"><a href=\"#Latex格式\" class=\"headerlink\" title=\"Latex格式\"></a>Latex格式</h1><h2 id=\"页面尺寸\"><a href=\"#页面尺寸\" class=\"headerlink\" title=\"页面尺寸\"></a>页面尺寸</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\usepackage&#123;geometry&#125;</span><br><span class=\"line\">\\geometry&#123;a4paper, left=2.4cm, top=2.4cm, right=2.4cm, bottom=2.4cm&#125;  % 页边距</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"页眉页脚\"><a href=\"#页眉页脚\" class=\"headerlink\" title=\"页眉页脚\"></a>页眉页脚</h2><p>L、C、R分别表示左、中、右；E、O表示奇偶页，页眉页脚的设置中可以使用它们的组合，多选项的情况用中括号分开。<br>现在有几个问题：</p>\n<ol>\n<li>页眉需要的样式是：奇数页居中显示章节号，偶数页显示“东北林业大学本科毕业论文”，但是通过[CE]、[CO]设置就不行，而且只设置<code>\\fancyhead[CE]{\\song\\xiaowu{东北林业大学本科毕业论文}}</code>也会失败，什么都不显示。</li>\n<li>双线页眉的长度一开始是<code>\\headwidth</code>，右侧没有达到文档宽度的位置。改为<code>\\columnwidth</code>或<code>\\textwidth</code>之后，长度虽然改变了，但是文字的位置没有随之向右移动（没有居中）</li>\n<li>问题1中的章节号不知道怎么获取……<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\usepackage&#123;fancyhdr&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%------- 页眉页脚样式 -------%</span><br><span class=\"line\">\\pagestyle&#123;fancy&#125;</span><br><span class=\"line\">\\fancyhf&#123;&#125;  % 清空设置</span><br><span class=\"line\">\\fancyhead[C]&#123;\\song\\xiaowu&#123;东北林业大学本科毕业论文&#125;&#125;</span><br><span class=\"line\">% \\fancyhead[CO]&#123;\\thechapter&#125;</span><br><span class=\"line\">\\fancyfoot[C]&#123;\\xiaowu&#123;-\\thepage-&#125;&#125;</span><br><span class=\"line\">\\renewcommand&#123;\\headrulewidth&#125;&#123;0.4pt&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%------- 双线页眉的设置 -------%</span><br><span class=\"line\">\\makeatletter %双线页眉</span><br><span class=\"line\">\\def\\headrule&#123;&#123;\\if@fancyplain\\let\\headrulewidth\\plainheadrulewidth\\fi%</span><br><span class=\"line\">\\hrule\\@height 1.0pt \\@width\\columnwidth\\vskip1pt%上面线为1pt粗</span><br><span class=\"line\">\\hrule\\@height 0.5pt\\@width\\columnwidth  %下面0.5pt粗</span><br><span class=\"line\">\\vskip-2\\headrulewidth\\vskip-1pt&#125;      %两条线的距离1pt</span><br><span class=\"line\">  \\vspace&#123;6mm&#125;&#125;     %双线与下面正文之间的垂直间距</span><br><span class=\"line\">\\makeatother</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"并排图片\"><a href=\"#并排图片\" class=\"headerlink\" title=\"并排图片\"></a>并排图片</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\begin&#123;figure&#125;[htbp]</span><br><span class=\"line\">    \\centering %图片全局居中</span><br><span class=\"line\">    \\subfigure[原图]&#123;</span><br><span class=\"line\">      \\includegraphics[width=0.2\\textwidth]&#123;resource/2-原图.jpg&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    \\subfigure[互相关]&#123;</span><br><span class=\"line\">      \\includegraphics[width=0.2\\textwidth]&#123;resource/2-互相关.jpg&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    \\subfigure[卷积]&#123;</span><br><span class=\"line\">      \\includegraphics[width=0.2\\textwidth]&#123;resource/2-卷积.jpg&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    \\caption&#123;卷积核的翻转对特征提取的影响&#125;</span><br><span class=\"line\">    \\label&#123;Figure.Second.1&#125;</span><br><span class=\"line\">  \\end&#123;figure&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%A4%9A%E5%9B%BE.jpg\" title=\"图片并排显示\">\n\n<h1 id=\"Latex样式\"><a href=\"#Latex样式\" class=\"headerlink\" title=\"Latex样式\"></a>Latex样式</h1><h2 id=\"图片标题的样式\"><a href=\"#图片标题的样式\" class=\"headerlink\" title=\"图片标题的样式\"></a>图片标题的样式</h2><p>把图片标题默认的“图1:示例”更改为“图2-1 示例”。<br>其中：</p>\n<ul>\n<li>thesection{} 表示章节号</li>\n<li>两个命令分别设置表格和插图的格式</li>\n<li>命令中的“-”可以用“.”等符号代替，以适应不同的要求<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\renewcommand &#123;\\thetable&#125; &#123;\\thesection&#123;&#125;-\\arabic&#123;table&#125;&#125; </span><br><span class=\"line\">\\renewcommand &#123;\\thefigure&#125; &#123;\\thesection&#123;&#125;-\\arabic&#123;figure&#125;&#125;</span><br><span class=\"line\">\\captionsetup&#123;labelformat=default,labelsep=space&#125; %去除冒号</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"公式引用输出样式\"><a href=\"#公式引用输出样式\" class=\"headerlink\" title=\"公式引用输出样式\"></a>公式引用输出样式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\renewcommand\\theequation&#123;\\arabic&#123;section&#125;-\\arabic&#123;equation&#125;&#125; % 公式引用输出样式</span><br><span class=\"line\"></span><br><span class=\"line\">\\begin&#123;equation&#125;</span><br><span class=\"line\">    (\\ref&#123;Formula.Second.1&#125;) \\Leftrightarrow S(i,j)=(K*I)(i,j)=\\sum_m \\sum_n I(i-m,j-n)K(m,n)\\label&#123;Formula.Second.3&#125;</span><br><span class=\"line\">\\end&#123;equation&#125;</span><br><span class=\"line\">(\\ref&#123;Formula.Second.3&#125;)式也被称为I和K的互相关</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%85%AC%E5%BC%8F%E7%BC%96%E5%8F%B7.jpg\" title=\"公式的编号与引用\">\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<p>$\\LaTex$论文写作Tip全记录</p>","more":"<h1 id=\"Latex格式\"><a href=\"#Latex格式\" class=\"headerlink\" title=\"Latex格式\"></a>Latex格式</h1><h2 id=\"页面尺寸\"><a href=\"#页面尺寸\" class=\"headerlink\" title=\"页面尺寸\"></a>页面尺寸</h2><!--�59-->\n\n<h2 id=\"页眉页脚\"><a href=\"#页眉页脚\" class=\"headerlink\" title=\"页眉页脚\"></a>页眉页脚</h2><p>L、C、R分别表示左、中、右；E、O表示奇偶页，页眉页脚的设置中可以使用它们的组合，多选项的情况用中括号分开。<br>现在有几个问题：</p>\n<ol>\n<li>页眉需要的样式是：奇数页居中显示章节号，偶数页显示“东北林业大学本科毕业论文”，但是通过[CE]、[CO]设置就不行，而且只设置<code>\\fancyhead[CE]{\\song\\xiaowu{东北林业大学本科毕业论文}}</code>也会失败，什么都不显示。</li>\n<li>双线页眉的长度一开始是<code>\\headwidth</code>，右侧没有达到文档宽度的位置。改为<code>\\columnwidth</code>或<code>\\textwidth</code>之后，长度虽然改变了，但是文字的位置没有随之向右移动（没有居中）</li>\n<li>问题1中的章节号不知道怎么获取……<!--�60-->\n\n</li>\n</ol>\n<h2 id=\"并排图片\"><a href=\"#并排图片\" class=\"headerlink\" title=\"并排图片\"></a>并排图片</h2><!--�61-->\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%A4%9A%E5%9B%BE.jpg\" title=\"图片并排显示\">\n\n<h1 id=\"Latex样式\"><a href=\"#Latex样式\" class=\"headerlink\" title=\"Latex样式\"></a>Latex样式</h1><h2 id=\"图片标题的样式\"><a href=\"#图片标题的样式\" class=\"headerlink\" title=\"图片标题的样式\"></a>图片标题的样式</h2><p>把图片标题默认的“图1:示例”更改为“图2-1 示例”。<br>其中：</p>\n<ul>\n<li>thesection{} 表示章节号</li>\n<li>两个命令分别设置表格和插图的格式</li>\n<li>命令中的“-”可以用“.”等符号代替，以适应不同的要求<!--�62-->\n\n</li>\n</ul>\n<h2 id=\"公式引用输出样式\"><a href=\"#公式引用输出样式\" class=\"headerlink\" title=\"公式引用输出样式\"></a>公式引用输出样式</h2><!--�63-->\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-14-%E5%85%AC%E5%BC%8F%E7%BC%96%E5%8F%B7.jpg\" title=\"公式的编号与引用\">"},{"title":"深度学习笔记——1","date":"2019-05-29T00:36:26.000Z","_content":"\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endblockquote %}\n\n<!-- more -->\n\n# 调整参数\n\n{% note info %}\n    准确率或损失率一直不变的话，可以尝试调整学习率，效果很不错\n    我常用的学习率有：0.001、0.0005、0.0001\n    `sgd = SGD(lr=0.0001, decay=1e-6, momentum=0.01, nesterov=True)`\n{% endnote %}\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-29-same-lr.png %}\n","source":"_posts/2019-05-29-deep-learning-notes-1.md","raw":"---\ntitle: 深度学习笔记——1\ndate: 2019-05-29 00:36:26\ncategories:\n- 深度学习\ntags:\n- TensorFlow\n- Keras\n- 深度学习\n---\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endblockquote %}\n\n<!-- more -->\n\n# 调整参数\n\n{% note info %}\n    准确率或损失率一直不变的话，可以尝试调整学习率，效果很不错\n    我常用的学习率有：0.001、0.0005、0.0001\n    `sgd = SGD(lr=0.0001, decay=1e-6, momentum=0.01, nesterov=True)`\n{% endnote %}\n\n{% img https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-29-same-lr.png %}\n","slug":"deep-learning-notes-1","published":1,"updated":"2019-05-28T16:49:15.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwj070fu004cm8zay467atat","content":"<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h1 id=\"调整参数\"><a href=\"#调整参数\" class=\"headerlink\" title=\"调整参数\"></a>调整参数</h1><div class=\"note info\">\n            <p>准确率或损失率一直不变的话，可以尝试调整学习率，效果很不错<br>我常用的学习率有：0.001、0.0005、0.0001<br><code>sgd = SGD(lr=0.0001, decay=1e-6, momentum=0.01, nesterov=True)</code></p>\n          </div>\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-29-same-lr.png\">\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>","more":"<h1 id=\"调整参数\"><a href=\"#调整参数\" class=\"headerlink\" title=\"调整参数\"></a>调整参数</h1><div class=\"note info\">\n            <p>准确率或损失率一直不变的话，可以尝试调整学习率，效果很不错<br>我常用的学习率有：0.001、0.0005、0.0001<br><code>sgd = SGD(lr=0.0001, decay=1e-6, momentum=0.01, nesterov=True)</code></p>\n          </div>\n\n<img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-05-29-same-lr.png\">"},{"layout":"post","title":"在LaTex中使用自定义字体","date":"2019-02-22T00:00:00.000Z","description":null,"_content":"\n{% cq %} 挖坑 {% endcq %}\n\n<!-- more -->\n\n刚接触LaTex，不太了解编译运行方式，网上搜了好多种方法都一直报错。这个例子刚测试的时候还编译不了，据猜测原因应该是编译缓存未清理或导入宏包的问题。\n\n## 定义代码段字体\n\n下边是一种自定义字体的方法，来自[LaTeX技巧006：使用不同的英文字体](https://blog.csdn.net/ProgramChangesWorld/article/details/51502730)\n\n``` latex\n\\documentclass[UTF8]{article}\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}%fontspec下这个命令设置全局默认字体\n\\begin{document}\nHello World!\\\\\n%这也是一种调用方式，无须fontspec宏包\n\\font\\rm=\"Calibri\" at 14pt \\rm This is Calibri\\\\\n\\font\\rm=\"Candara\" at 14pt \\rm This is Candara\\\\\n\\font\\rm=\"Mistral\" at 14pt \\rm This is Mistral\\\\\n\\font\\rm=\"Bahnschrift\" at 14pt \\rm This is Bahnschrift\\\\\n\\font\\rm=\"Pristina\" at 14pt \\rm This is Pristina\\\\\n\\font\\rm=\"Microsoft Uighur\" at 14pt \\rm This is Microsoft Uighur\\\\\n\\font\\rm=\"Bradley Hand ITC\" at 14pt \\rm This is Bradley Hand ITC\\\\\n\\font\\rm=\"Nirmala UI\" at 14pt \\rm This is Nirmala UI\\\\\n\\font\\rm=\"CCBackBeat\" at 14pt \\rm This is CCBackBeat\\\\\n\\font\\rm=\"Supercell-Magic\" \\rm This is Supercell-Magic\\\\\n\\font\\rm=\"Supercell-Magic\" at 14pt \\rm This is Supercell-Magic\\\\\n\\font\\rm=\"Supercell-Magic\" at 18pt \\rm This is Supercell-Magic\\\\\n\\end{document}\n``` \n\n显示结果\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg) \n\n## 设置全局（自定义）字体\n\n第二天在测试中发现，用如下代码也能实现同样的效果，现在猜测是刚安装的字体VSCode或XeLaTex识别不了的问题。\n\n``` latex\n\\documentclass[UTF8]{article}\n\\usepackage{ctex}\n\\usepackage{fontspec}\n\\usepackage{metalogo}\n\\usepackage{amsmath}\n\\usepackage{newtxtt, newtxmath}\n\n\\setmainfont{CCBackBeat} %英文字体\n\\setCJKmainfont{DengXian} % 中文字体\n\n\\title{论文测试}\n\\author{Teemo}\n\\date{2019年2月22日}\n\\begin{document}\n\\maketitle\n\\tableofcontents\n\\section{输出测试}\n Hello \\XeLaTeX.\n Body of the article.\n second not sure \\\\\n fuck LaTex \\\\\n 换行试试？\\LaTeX，WithTab Icon,How to add a command \\\\\n\n 换行\n``` \n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg)\n","source":"_posts/2019-2-22-customize-font-in-latex.md","raw":"---\nlayout: post\ntitle: 在LaTex中使用自定义字体\ndate: 2019-02-22 00:00:00 +0800\ndescription: \ncategories:\n- LaTex\ntags: \n- LaTex\n- 字体 \n---\n\n{% cq %} 挖坑 {% endcq %}\n\n<!-- more -->\n\n刚接触LaTex，不太了解编译运行方式，网上搜了好多种方法都一直报错。这个例子刚测试的时候还编译不了，据猜测原因应该是编译缓存未清理或导入宏包的问题。\n\n## 定义代码段字体\n\n下边是一种自定义字体的方法，来自[LaTeX技巧006：使用不同的英文字体](https://blog.csdn.net/ProgramChangesWorld/article/details/51502730)\n\n``` latex\n\\documentclass[UTF8]{article}\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}%fontspec下这个命令设置全局默认字体\n\\begin{document}\nHello World!\\\\\n%这也是一种调用方式，无须fontspec宏包\n\\font\\rm=\"Calibri\" at 14pt \\rm This is Calibri\\\\\n\\font\\rm=\"Candara\" at 14pt \\rm This is Candara\\\\\n\\font\\rm=\"Mistral\" at 14pt \\rm This is Mistral\\\\\n\\font\\rm=\"Bahnschrift\" at 14pt \\rm This is Bahnschrift\\\\\n\\font\\rm=\"Pristina\" at 14pt \\rm This is Pristina\\\\\n\\font\\rm=\"Microsoft Uighur\" at 14pt \\rm This is Microsoft Uighur\\\\\n\\font\\rm=\"Bradley Hand ITC\" at 14pt \\rm This is Bradley Hand ITC\\\\\n\\font\\rm=\"Nirmala UI\" at 14pt \\rm This is Nirmala UI\\\\\n\\font\\rm=\"CCBackBeat\" at 14pt \\rm This is CCBackBeat\\\\\n\\font\\rm=\"Supercell-Magic\" \\rm This is Supercell-Magic\\\\\n\\font\\rm=\"Supercell-Magic\" at 14pt \\rm This is Supercell-Magic\\\\\n\\font\\rm=\"Supercell-Magic\" at 18pt \\rm This is Supercell-Magic\\\\\n\\end{document}\n``` \n\n显示结果\n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg) \n\n## 设置全局（自定义）字体\n\n第二天在测试中发现，用如下代码也能实现同样的效果，现在猜测是刚安装的字体VSCode或XeLaTex识别不了的问题。\n\n``` latex\n\\documentclass[UTF8]{article}\n\\usepackage{ctex}\n\\usepackage{fontspec}\n\\usepackage{metalogo}\n\\usepackage{amsmath}\n\\usepackage{newtxtt, newtxmath}\n\n\\setmainfont{CCBackBeat} %英文字体\n\\setCJKmainfont{DengXian} % 中文字体\n\n\\title{论文测试}\n\\author{Teemo}\n\\date{2019年2月22日}\n\\begin{document}\n\\maketitle\n\\tableofcontents\n\\section{输出测试}\n Hello \\XeLaTeX.\n Body of the article.\n second not sure \\\\\n fuck LaTex \\\\\n 换行试试？\\LaTeX，WithTab Icon,How to add a command \\\\\n\n 换行\n``` \n\n![](https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg)\n","slug":"2019-2-22-customize-font-in-latex","published":1,"updated":"2019-03-04T13:04:41.829Z","comments":1,"photos":[],"link":"","_id":"cjwj070fv004hm8za3ae6sj5a","content":"<blockquote class=\"blockquote-center\"><p>挖坑 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<p>刚接触LaTex，不太了解编译运行方式，网上搜了好多种方法都一直报错。这个例子刚测试的时候还编译不了，据猜测原因应该是编译缓存未清理或导入宏包的问题。</p>\n<h2 id=\"定义代码段字体\"><a href=\"#定义代码段字体\" class=\"headerlink\" title=\"定义代码段字体\"></a>定义代码段字体</h2><p>下边是一种自定义字体的方法，来自<a href=\"https://blog.csdn.net/ProgramChangesWorld/article/details/51502730\" target=\"_blank\" rel=\"noopener\">LaTeX技巧006：使用不同的英文字体</a></p>\n<pre><code class=\"latex\">\\documentclass[UTF8]{article}\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}%fontspec下这个命令设置全局默认字体\n\\begin{document}\nHello World!\\\\\n%这也是一种调用方式，无须fontspec宏包\n\\font\\rm=&quot;Calibri&quot; at 14pt \\rm This is Calibri\\\\\n\\font\\rm=&quot;Candara&quot; at 14pt \\rm This is Candara\\\\\n\\font\\rm=&quot;Mistral&quot; at 14pt \\rm This is Mistral\\\\\n\\font\\rm=&quot;Bahnschrift&quot; at 14pt \\rm This is Bahnschrift\\\\\n\\font\\rm=&quot;Pristina&quot; at 14pt \\rm This is Pristina\\\\\n\\font\\rm=&quot;Microsoft Uighur&quot; at 14pt \\rm This is Microsoft Uighur\\\\\n\\font\\rm=&quot;Bradley Hand ITC&quot; at 14pt \\rm This is Bradley Hand ITC\\\\\n\\font\\rm=&quot;Nirmala UI&quot; at 14pt \\rm This is Nirmala UI\\\\\n\\font\\rm=&quot;CCBackBeat&quot; at 14pt \\rm This is CCBackBeat\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; \\rm This is Supercell-Magic\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; at 14pt \\rm This is Supercell-Magic\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; at 18pt \\rm This is Supercell-Magic\\\\\n\\end{document}</code></pre>\n<p>显示结果</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg\" alt> </p>\n<h2 id=\"设置全局（自定义）字体\"><a href=\"#设置全局（自定义）字体\" class=\"headerlink\" title=\"设置全局（自定义）字体\"></a>设置全局（自定义）字体</h2><p>第二天在测试中发现，用如下代码也能实现同样的效果，现在猜测是刚安装的字体VSCode或XeLaTex识别不了的问题。</p>\n<pre><code class=\"latex\">\\documentclass[UTF8]{article}\n\\usepackage{ctex}\n\\usepackage{fontspec}\n\\usepackage{metalogo}\n\\usepackage{amsmath}\n\\usepackage{newtxtt, newtxmath}\n\n\\setmainfont{CCBackBeat} %英文字体\n\\setCJKmainfont{DengXian} % 中文字体\n\n\\title{论文测试}\n\\author{Teemo}\n\\date{2019年2月22日}\n\\begin{document}\n\\maketitle\n\\tableofcontents\n\\section{输出测试}\n Hello \\XeLaTeX.\n Body of the article.\n second not sure \\\\\n fuck LaTex \\\\\n 换行试试？\\LaTeX，WithTab Icon,How to add a command \\\\\n\n 换行</code></pre>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg\" alt></p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>挖坑 </p>\n</blockquote>","more":"<p>刚接触LaTex，不太了解编译运行方式，网上搜了好多种方法都一直报错。这个例子刚测试的时候还编译不了，据猜测原因应该是编译缓存未清理或导入宏包的问题。</p>\n<h2 id=\"定义代码段字体\"><a href=\"#定义代码段字体\" class=\"headerlink\" title=\"定义代码段字体\"></a>定义代码段字体</h2><p>下边是一种自定义字体的方法，来自<a href=\"https://blog.csdn.net/ProgramChangesWorld/article/details/51502730\" target=\"_blank\" rel=\"noopener\">LaTeX技巧006：使用不同的英文字体</a></p>\n<pre><code class=\"latex\">\\documentclass[UTF8]{article}\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}%fontspec下这个命令设置全局默认字体\n\\begin{document}\nHello World!\\\\\n%这也是一种调用方式，无须fontspec宏包\n\\font\\rm=&quot;Calibri&quot; at 14pt \\rm This is Calibri\\\\\n\\font\\rm=&quot;Candara&quot; at 14pt \\rm This is Candara\\\\\n\\font\\rm=&quot;Mistral&quot; at 14pt \\rm This is Mistral\\\\\n\\font\\rm=&quot;Bahnschrift&quot; at 14pt \\rm This is Bahnschrift\\\\\n\\font\\rm=&quot;Pristina&quot; at 14pt \\rm This is Pristina\\\\\n\\font\\rm=&quot;Microsoft Uighur&quot; at 14pt \\rm This is Microsoft Uighur\\\\\n\\font\\rm=&quot;Bradley Hand ITC&quot; at 14pt \\rm This is Bradley Hand ITC\\\\\n\\font\\rm=&quot;Nirmala UI&quot; at 14pt \\rm This is Nirmala UI\\\\\n\\font\\rm=&quot;CCBackBeat&quot; at 14pt \\rm This is CCBackBeat\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; \\rm This is Supercell-Magic\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; at 14pt \\rm This is Supercell-Magic\\\\\n\\font\\rm=&quot;Supercell-Magic&quot; at 18pt \\rm This is Supercell-Magic\\\\\n\\end{document}</code></pre>\n<p>显示结果</p>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg\" alt> </p>\n<h2 id=\"设置全局（自定义）字体\"><a href=\"#设置全局（自定义）字体\" class=\"headerlink\" title=\"设置全局（自定义）字体\"></a>设置全局（自定义）字体</h2><p>第二天在测试中发现，用如下代码也能实现同样的效果，现在猜测是刚安装的字体VSCode或XeLaTex识别不了的问题。</p>\n<pre><code class=\"latex\">\\documentclass[UTF8]{article}\n\\usepackage{ctex}\n\\usepackage{fontspec}\n\\usepackage{metalogo}\n\\usepackage{amsmath}\n\\usepackage{newtxtt, newtxmath}\n\n\\setmainfont{CCBackBeat} %英文字体\n\\setCJKmainfont{DengXian} % 中文字体\n\n\\title{论文测试}\n\\author{Teemo}\n\\date{2019年2月22日}\n\\begin{document}\n\\maketitle\n\\tableofcontents\n\\section{输出测试}\n Hello \\XeLaTeX.\n Body of the article.\n second not sure \\\\\n fuck LaTex \\\\\n 换行试试？\\LaTeX，WithTab Icon,How to add a command \\\\\n\n 换行</code></pre>\n<p><img src=\"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg\" alt></p>"},{"layout":"post","title":"软件及开发包安装中的那些坑","date":"2019-02-22T00:00:00.000Z","description":null,"_content":"\n{% cq %} 先把坑都踩一遍是为了以后踩更多的坑。 {% endcq %}\n\n<!-- more -->\n\n## latexindent\n\n+ 来自：安装LaTex-formatter需要安装的工具\n+ 方式：解压缩，（可数的）文件直接拖入目录\n+ 目录：`C:\\Program\\texlive\\2018\\texmf-dist\\scripts\\latexindent`\n+ 文件：latexindent.exe\n+ 使用方式：选中代码->右键`格式化选定内容`\n\n注：更改了该目录下的`defaultSettings.yaml`的某些设置\n\n``` yaml\n# line222~line246\nindentAfterHeadings:\n    part:\n       indentAfterThisHeading: 1\n       level: 1\n    chapter: \n       indentAfterThisHeading: 1\n       level: 2\n    section:\n       indentAfterThisHeading: 1\n       level: 3\n    subsection:\n       indentAfterThisHeading: 1\n       level: 4\n    subsection*:\n       indentAfterThisHeading: 1\n       level: 4\n    subsubsection:\n       indentAfterThisHeading: 1\n       level: 5\n    paragraph:\n       indentAfterThisHeading: 1\n       level: 6\n    subparagraph:\n       indentAfterThisHeading: 1\n       level: 7\n```\n\n## ruby-jekyll\n\n大佬[Pchou的博客](http://www.pchou.info/ssgithubPage/2014-07-04-build-github-blog-page-08.html)\n\n1. 安装[Ruby with Devkit](https://rubyinstaller.org/downloads/)，所有组件都在这里了，注意安装路径不要出现空格\n2. ruby安装完，会提示安装MSYS2，跟着提示走就好。现在新版本的Ruby已经集成了[RubyGems]([RubyGems](https://rubygems.org/pages/download))\n3. 环境安装好就可以安装Bundle和Jekyll了（`gem install jekyll`），但是在今天（2019-2-22）安装的过程中发现bundle是安装环境是已经安装好了的。\n4. 到博客目录下依次执行以下命令：\n``` bash\nbundle install\nbundle update\nbundle exec jekyll serve\n```\n\n### 关于ryby及Jekyll的某些错误\n\n1. `jekyll 3.7.4 | Error:  incompatible character encodings: UTF-8 and GBK`\n不知道如何解决，尝试设置命令行字符编码`chcp 65001`（不行）\n已知的可能解决方法：设置 -> 时间和语言 -> 区域 -> 更改日期、时间或数字格式 -> 管理 -> 更改系统区域设置：选中“使用Unicode UTF-8 提供全球语言支持”，然后重启电脑，应该就解决了。\n2. 执行`bundle`命令时出现`C:/Program/Ruby25-x64/lib/ruby/2.5.0/rubygems.rb:289:in 'find_spec_for_exe': can't find gem bundler (>= 0.a) with executable bundle (Gem::GemNotFoundException)`，在[StackOverflow](https://stackoverflow.com/questions/47026174/find-spec-for-exe-cant-find-gem-bundler-0-a-gemgemnotfoundexception)上找到答案：`Gemfile.lock`文件最后的`BUNDLED WITH`版本改为已安装的bundler版本。或者删除Gemfile.lock文件，重新`bundle exec jekyll serve`\n\n## VSCode中C/C++找不到头文件\n\n可能需要设置这些环境变量：\n\n```bash\nLIBRARY_PATH\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\n\nC_INCLUDE_PATH\nC:\\Program\\mingw64\\include;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include;\n\nCPLUS_INCLUDE_PATH\nC:\\Program\\mingw64\\include;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\backward;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\x86_64-w64-mingw32;\n```\n\n## CUDA cuDNN\n\n复制cuDNN到CUDA目录\n\n``` cmd\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\include\\cudnn.h\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\lib\\x64\\cudnn.lib\n```\n\n","source":"_posts/2019-2-22-software-installation-description.markdown","raw":"---\nlayout: post\ntitle: 软件及开发包安装中的那些坑\ndate: 2019-02-22 00:00:00 +0800\ndescription: \ncategories:\n- Software\ntags: \n- C/C++\n- CUDA\n- LaTex\n- GitHub Pages\n- 软件\n---\n\n{% cq %} 先把坑都踩一遍是为了以后踩更多的坑。 {% endcq %}\n\n<!-- more -->\n\n## latexindent\n\n+ 来自：安装LaTex-formatter需要安装的工具\n+ 方式：解压缩，（可数的）文件直接拖入目录\n+ 目录：`C:\\Program\\texlive\\2018\\texmf-dist\\scripts\\latexindent`\n+ 文件：latexindent.exe\n+ 使用方式：选中代码->右键`格式化选定内容`\n\n注：更改了该目录下的`defaultSettings.yaml`的某些设置\n\n``` yaml\n# line222~line246\nindentAfterHeadings:\n    part:\n       indentAfterThisHeading: 1\n       level: 1\n    chapter: \n       indentAfterThisHeading: 1\n       level: 2\n    section:\n       indentAfterThisHeading: 1\n       level: 3\n    subsection:\n       indentAfterThisHeading: 1\n       level: 4\n    subsection*:\n       indentAfterThisHeading: 1\n       level: 4\n    subsubsection:\n       indentAfterThisHeading: 1\n       level: 5\n    paragraph:\n       indentAfterThisHeading: 1\n       level: 6\n    subparagraph:\n       indentAfterThisHeading: 1\n       level: 7\n```\n\n## ruby-jekyll\n\n大佬[Pchou的博客](http://www.pchou.info/ssgithubPage/2014-07-04-build-github-blog-page-08.html)\n\n1. 安装[Ruby with Devkit](https://rubyinstaller.org/downloads/)，所有组件都在这里了，注意安装路径不要出现空格\n2. ruby安装完，会提示安装MSYS2，跟着提示走就好。现在新版本的Ruby已经集成了[RubyGems]([RubyGems](https://rubygems.org/pages/download))\n3. 环境安装好就可以安装Bundle和Jekyll了（`gem install jekyll`），但是在今天（2019-2-22）安装的过程中发现bundle是安装环境是已经安装好了的。\n4. 到博客目录下依次执行以下命令：\n``` bash\nbundle install\nbundle update\nbundle exec jekyll serve\n```\n\n### 关于ryby及Jekyll的某些错误\n\n1. `jekyll 3.7.4 | Error:  incompatible character encodings: UTF-8 and GBK`\n不知道如何解决，尝试设置命令行字符编码`chcp 65001`（不行）\n已知的可能解决方法：设置 -> 时间和语言 -> 区域 -> 更改日期、时间或数字格式 -> 管理 -> 更改系统区域设置：选中“使用Unicode UTF-8 提供全球语言支持”，然后重启电脑，应该就解决了。\n2. 执行`bundle`命令时出现`C:/Program/Ruby25-x64/lib/ruby/2.5.0/rubygems.rb:289:in 'find_spec_for_exe': can't find gem bundler (>= 0.a) with executable bundle (Gem::GemNotFoundException)`，在[StackOverflow](https://stackoverflow.com/questions/47026174/find-spec-for-exe-cant-find-gem-bundler-0-a-gemgemnotfoundexception)上找到答案：`Gemfile.lock`文件最后的`BUNDLED WITH`版本改为已安装的bundler版本。或者删除Gemfile.lock文件，重新`bundle exec jekyll serve`\n\n## VSCode中C/C++找不到头文件\n\n可能需要设置这些环境变量：\n\n```bash\nLIBRARY_PATH\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\n\nC_INCLUDE_PATH\nC:\\Program\\mingw64\\include;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include;\n\nCPLUS_INCLUDE_PATH\nC:\\Program\\mingw64\\include;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\backward;\nC:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\x86_64-w64-mingw32;\n```\n\n## CUDA cuDNN\n\n复制cuDNN到CUDA目录\n\n``` cmd\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\include\\cudnn.h\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\lib\\x64\\cudnn.lib\n```\n\n","slug":"2019-2-22-software-installation-description","published":1,"updated":"2019-03-04T13:03:53.014Z","comments":1,"photos":[],"link":"","_id":"cjwj070fx004km8zatt3d9xnl","content":"<blockquote class=\"blockquote-center\"><p>先把坑都踩一遍是为了以后踩更多的坑。 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"latexindent\"><a href=\"#latexindent\" class=\"headerlink\" title=\"latexindent\"></a>latexindent</h2><ul>\n<li>来自：安装LaTex-formatter需要安装的工具</li>\n<li>方式：解压缩，（可数的）文件直接拖入目录</li>\n<li>目录：<code>C:\\Program\\texlive\\2018\\texmf-dist\\scripts\\latexindent</code></li>\n<li>文件：latexindent.exe</li>\n<li>使用方式：选中代码-&gt;右键<code>格式化选定内容</code></li>\n</ul>\n<p>注：更改了该目录下的<code>defaultSettings.yaml</code>的某些设置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># line222~line246</span></span><br><span class=\"line\"><span class=\"attr\">indentAfterHeadings:</span></span><br><span class=\"line\"><span class=\"attr\">    part:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">    chapter:</span> </span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">    section:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">    subsection:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">4</span></span><br><span class=\"line\">    <span class=\"string\">subsection*:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attr\">    subsubsection:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">    paragraph:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attr\">    subparagraph:</span></span><br><span class=\"line\"><span class=\"attr\">       indentAfterThisHeading:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">       level:</span> <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ruby-jekyll\"><a href=\"#ruby-jekyll\" class=\"headerlink\" title=\"ruby-jekyll\"></a>ruby-jekyll</h2><p>大佬<a href=\"http://www.pchou.info/ssgithubPage/2014-07-04-build-github-blog-page-08.html\" target=\"_blank\" rel=\"noopener\">Pchou的博客</a></p>\n<ol>\n<li>安装<a href=\"https://rubyinstaller.org/downloads/\" target=\"_blank\" rel=\"noopener\">Ruby with Devkit</a>，所有组件都在这里了，注意安装路径不要出现空格</li>\n<li>ruby安装完，会提示安装MSYS2，跟着提示走就好。现在新版本的Ruby已经集成了<a href=\"[RubyGems](https://rubygems.org/pages/download)\">RubyGems</a></li>\n<li>环境安装好就可以安装Bundle和Jekyll了（<code>gem install jekyll</code>），但是在今天（2019-2-22）安装的过程中发现bundle是安装环境是已经安装好了的。</li>\n<li>到博客目录下依次执行以下命令：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundle install</span><br><span class=\"line\">bundle update</span><br><span class=\"line\">bundle <span class=\"built_in\">exec</span> jekyll serve</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h3 id=\"关于ryby及Jekyll的某些错误\"><a href=\"#关于ryby及Jekyll的某些错误\" class=\"headerlink\" title=\"关于ryby及Jekyll的某些错误\"></a>关于ryby及Jekyll的某些错误</h3><ol>\n<li><code>jekyll 3.7.4 | Error:  incompatible character encodings: UTF-8 and GBK</code><br>不知道如何解决，尝试设置命令行字符编码<code>chcp 65001</code>（不行）<br>已知的可能解决方法：设置 -&gt; 时间和语言 -&gt; 区域 -&gt; 更改日期、时间或数字格式 -&gt; 管理 -&gt; 更改系统区域设置：选中“使用Unicode UTF-8 提供全球语言支持”，然后重启电脑，应该就解决了。</li>\n<li>执行<code>bundle</code>命令时出现<code>C:/Program/Ruby25-x64/lib/ruby/2.5.0/rubygems.rb:289:in &#39;find_spec_for_exe&#39;: can&#39;t find gem bundler (&gt;= 0.a) with executable bundle (Gem::GemNotFoundException)</code>，在<a href=\"https://stackoverflow.com/questions/47026174/find-spec-for-exe-cant-find-gem-bundler-0-a-gemgemnotfoundexception\" target=\"_blank\" rel=\"noopener\">StackOverflow</a>上找到答案：<code>Gemfile.lock</code>文件最后的<code>BUNDLED WITH</code>版本改为已安装的bundler版本。或者删除Gemfile.lock文件，重新<code>bundle exec jekyll serve</code></li>\n</ol>\n<h2 id=\"VSCode中C-C-找不到头文件\"><a href=\"#VSCode中C-C-找不到头文件\" class=\"headerlink\" title=\"VSCode中C/C++找不到头文件\"></a>VSCode中C/C++找不到头文件</h2><p>可能需要设置这些环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LIBRARY_PATH</span><br><span class=\"line\">C:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0</span><br><span class=\"line\"></span><br><span class=\"line\">C_INCLUDE_PATH</span><br><span class=\"line\">C:\\Program\\mingw64\\include;</span><br><span class=\"line\">C:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include;</span><br><span class=\"line\"></span><br><span class=\"line\">CPLUS_INCLUDE_PATH</span><br><span class=\"line\">C:\\Program\\mingw64\\include;</span><br><span class=\"line\">C:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++;</span><br><span class=\"line\">C:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\backward;</span><br><span class=\"line\">C:\\Program\\mingw64\\lib\\gcc\\x86_64-w64-mingw32\\7.3.0\\include\\c++\\x86_64-w64-mingw32;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CUDA-cuDNN\"><a href=\"#CUDA-cuDNN\" class=\"headerlink\" title=\"CUDA cuDNN\"></a>CUDA cuDNN</h2><p>复制cuDNN到CUDA目录</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Program</span> <span class=\"title\">Files</span>\\<span class=\"title\">NVIDIA</span> <span class=\"title\">GPU</span> <span class=\"title\">Computing</span> <span class=\"title\">Toolkit</span>\\<span class=\"title\">CUDA</span>\\<span class=\"title\">v9</span>.0\\<span class=\"title\">bin</span>\\<span class=\"title\">cudnn64_7.dll</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Program</span> <span class=\"title\">Files</span>\\<span class=\"title\">NVIDIA</span> <span class=\"title\">GPU</span> <span class=\"title\">Computing</span> <span class=\"title\">Toolkit</span>\\<span class=\"title\">CUDA</span>\\<span class=\"title\">v9</span>.0\\<span class=\"title\">include</span>\\<span class=\"title\">cudnn.h</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">C</span>:\\<span class=\"title\">Program</span> <span class=\"title\">Files</span>\\<span class=\"title\">NVIDIA</span> <span class=\"title\">GPU</span> <span class=\"title\">Computing</span> <span class=\"title\">Toolkit</span>\\<span class=\"title\">CUDA</span>\\<span class=\"title\">v9</span>.0\\<span class=\"title\">lib</span>\\<span class=\"title\">x64</span>\\<span class=\"title\">cudnn.lib</span></span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>先把坑都踩一遍是为了以后踩更多的坑。 </p>\n</blockquote>","more":"<h2 id=\"latexindent\"><a href=\"#latexindent\" class=\"headerlink\" title=\"latexindent\"></a>latexindent</h2><ul>\n<li>来自：安装LaTex-formatter需要安装的工具</li>\n<li>方式：解压缩，（可数的）文件直接拖入目录</li>\n<li>目录：<code>C:\\Program\\texlive\\2018\\texmf-dist\\scripts\\latexindent</code></li>\n<li>文件：latexindent.exe</li>\n<li>使用方式：选中代码-&gt;右键<code>格式化选定内容</code></li>\n</ul>\n<p>注：更改了该目录下的<code>defaultSettings.yaml</code>的某些设置</p>\n<!--�64-->\n\n<h2 id=\"ruby-jekyll\"><a href=\"#ruby-jekyll\" class=\"headerlink\" title=\"ruby-jekyll\"></a>ruby-jekyll</h2><p>大佬<a href=\"http://www.pchou.info/ssgithubPage/2014-07-04-build-github-blog-page-08.html\" target=\"_blank\" rel=\"noopener\">Pchou的博客</a></p>\n<ol>\n<li>安装<a href=\"https://rubyinstaller.org/downloads/\" target=\"_blank\" rel=\"noopener\">Ruby with Devkit</a>，所有组件都在这里了，注意安装路径不要出现空格</li>\n<li>ruby安装完，会提示安装MSYS2，跟着提示走就好。现在新版本的Ruby已经集成了<a href=\"[RubyGems](https://rubygems.org/pages/download)\">RubyGems</a></li>\n<li>环境安装好就可以安装Bundle和Jekyll了（<code>gem install jekyll</code>），但是在今天（2019-2-22）安装的过程中发现bundle是安装环境是已经安装好了的。</li>\n<li>到博客目录下依次执行以下命令：<!--�65-->\n\n</li>\n</ol>\n<h3 id=\"关于ryby及Jekyll的某些错误\"><a href=\"#关于ryby及Jekyll的某些错误\" class=\"headerlink\" title=\"关于ryby及Jekyll的某些错误\"></a>关于ryby及Jekyll的某些错误</h3><ol>\n<li><code>jekyll 3.7.4 | Error:  incompatible character encodings: UTF-8 and GBK</code><br>不知道如何解决，尝试设置命令行字符编码<code>chcp 65001</code>（不行）<br>已知的可能解决方法：设置 -&gt; 时间和语言 -&gt; 区域 -&gt; 更改日期、时间或数字格式 -&gt; 管理 -&gt; 更改系统区域设置：选中“使用Unicode UTF-8 提供全球语言支持”，然后重启电脑，应该就解决了。</li>\n<li>执行<code>bundle</code>命令时出现<code>C:/Program/Ruby25-x64/lib/ruby/2.5.0/rubygems.rb:289:in &#39;find_spec_for_exe&#39;: can&#39;t find gem bundler (&gt;= 0.a) with executable bundle (Gem::GemNotFoundException)</code>，在<a href=\"https://stackoverflow.com/questions/47026174/find-spec-for-exe-cant-find-gem-bundler-0-a-gemgemnotfoundexception\" target=\"_blank\" rel=\"noopener\">StackOverflow</a>上找到答案：<code>Gemfile.lock</code>文件最后的<code>BUNDLED WITH</code>版本改为已安装的bundler版本。或者删除Gemfile.lock文件，重新<code>bundle exec jekyll serve</code></li>\n</ol>\n<h2 id=\"VSCode中C-C-找不到头文件\"><a href=\"#VSCode中C-C-找不到头文件\" class=\"headerlink\" title=\"VSCode中C/C++找不到头文件\"></a>VSCode中C/C++找不到头文件</h2><p>可能需要设置这些环境变量：</p>\n<!--�66-->\n\n<h2 id=\"CUDA-cuDNN\"><a href=\"#CUDA-cuDNN\" class=\"headerlink\" title=\"CUDA cuDNN\"></a>CUDA cuDNN</h2><p>复制cuDNN到CUDA目录</p>\n<!--�67-->"},{"layout":"post","title":"睡前小故事——Day 1","date":"2019-01-19T03:52:00.000Z","_content":"\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-芒果\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/72024360)\n\n“爷爷，学校里同学说世界上没有龙没有妖怪什么都没有，都是别人编的。”少女坐在爷爷身边，嘟着嘴抱怨到。\n\n“别听他们的，丫头，这个世界上明明就有啊，不仅有龙，还有勇敢的骑士，能驯服龙的骑士。”爷爷布满皱纹的手轻抚着少女的头发，眼里满满都是慈爱，“但是龙骑士是很骄傲的，他只会出现在相信他的人的世界里。”\n\n“可是，我怎么跟他们解释，他们都不信，说我骗人，笑我幼稚长不大。”女孩几乎快哭出来了\n\n“去睡吧，丫头，明天起来，大家就会相信你了。”爷爷看着少女落寞回房的背影，好像下定了什么决心。\n\n“去哪儿老头子？”奶奶听到大门打开的声音，从房间里走了出来。\n\n“去见一个老朋友，好多年没见了，想跟它好好叙叙旧。”爷爷说着别了别腰间锈迹斑斑的铁剑。\n\n“你啊，从以前就是暴脾气！待会儿可别吓着那些小家伙了，他们毕竟还是孩子。”奶奶转身回房，出来的时候手上拿着一条破旧的有点褪色的披风，一边嗔怪着，一边给爷爷系上。\n\n“我心里有数，这些小鬼竟敢嘲笑囡囡，看我今天不好好收拾他们！”爷爷忿忿不平的唠叨着，头也不回的出门了。\n\n那天晚上，几乎全城的人都看到一头巨大的飞龙在雪白的月光下呼啸而过，龙背上依稀有个人影，拿着剑，背后的披风猎猎作响，奶奶也在窗口看着那巨龙咆哮腾飞，一如当年那个少年，也是这样手执长剑，布衣披风，骑着巨龙从天而降，长笑不羁，神采飞扬。\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-曹丰泽\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/154027314)\n\n在不久以前，大约四千年吧。那时还没有国家，人类生活在部落里。在文明的西部边缘，有一个部落。部落的名字已经不得而知，我们就叫它二狗子寨吧。\n\n那时，天气逐渐转冷，庄稼收成不好，他们养的猪也被吃光了。二狗子寨的男人们只好出去打猎。家里没有牲畜需要照料，死孩子也都已经装进了陶罐里，女人们只好蹲在寨子门口唠闲嗑，并祈祷男人们能打到鹿回来。\n\n天气阴沉沉的，部落里的祭司说要有不好的事情发生。因此，蹲在寨子门口唠闲嗑的女人们都抱着孩子回家了。她们用仅剩的小米磨碎做成面条，放在锅里煮好，等待男人回家。我编不下去了，总之大洪水冲进了这块德性的洼地，他们住的这种半地穴式建筑瞬间被水淹没，女人们把孩子护在身下，然后被埋进了河水带来的泥土之中，直到四千年后考古队员将她们和孩子们挖了出来。就像这样。\n\n![](https://pic3.zhimg.com/80/v2-922052f01fb5ef739924cfd5707e775a_hd.png)\n![](https://pic1.zhimg.com/80/v2-e8bbbb01efdf223c45a597714b658dd0_hd.jpg)\n\n你看，女人们的本能啊，是多么的令人动容。她们生命的最后一刻想的，就是保护她们的孩子啊。\n所以我们什么时候开始造娃\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-有很多人\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/75555181)\n\n黄小狼刚出生没多久，妈妈嫌弃他毛色难看，就把他赶出家门自生自灭去了。真是糟糕，黄小狼还不会人生最重要的技能—偷鸡呢。\n\n他实在饿的不行了，穿过树林，偷偷来到了村里的农户家，准备看看有没有机会可以逮着一只鸡。他悄悄地躲在门口的树后，看着院子里一只油亮亮、毛皮鲜亮光鲜的大公鸡顶着鲜红的鸡冠，骄傲地迈着步伐，在院子里仿佛巡视领地一般走了走去。\n\n大公鸡眼尖，发现了他，一点也不害怕，突然立起了脖子边的毛，如同离弦的箭一样射了过来，要啄黄小狼。于是，两人开启了追逐战。\n\n时间日复一日地划过，黄小狼每天都要去找大公鸡锻炼自己抓鸡的本领。可是在一个阳光灿烂的午后，美丽的大公鸡不见了。或者说让大公鸡骄傲的毛皮不见了。原来大公鸡的毛被农户扒走做了鸡毛掸子。他靠近被拔了毛的大公鸡，大公鸡也没像以前一样奋起直追，而是有些恹恹地撇了他一眼，跺着步伐走开了。\n\n第二天，黄小狼叼着鸡毛掸子又来找大公鸡了。他一身是伤，昨天趁夜偷鸡毛掸子地时候惊醒了农户，黑灯瞎火地挨了几下打。\n\n黄小狼甩了甩他秃秃地尾巴，讨好地对大公鸡笑了笑：你看，我进步啦，起码学会了偷鸡毛。大公鸡梗着脖子半晌，突然把头凑近了黄小狼，黄小狼以为大公鸡又要啄他。吓得闭了眼，大公鸡却只是用尖尖地嘴小心的、轻轻地蹭了他一下。\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-李阿木\n[原文链接](https://www.zhihu.com/question/35048612/answer/126442751)\n\n“亲爱的，我昨晚做了一个梦，梦见一个很大很大的池塘喔，里面有一条小金鱼和一朵小荷花快乐地生活着。”\n\n“哇，有多大呀？”\n\n“恩，大概跟我们家一样大吧”\n\n“那也没有很大呀…”\n\n“将来会很大的喔！”\n\n“嗯～”“故事开始洛…”\n\n(第一天)\n\n风清月朗，星光洒满了湖面。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花站在水里，一会看看天上的月亮，一会看看水里的月亮，心里开心极了。\n\n小金鱼游呀游，也不知道游了多少圈，终于忍不住上前打了声招呼：\n\n“你好呀，小荷花。”\n\n“你好呀，小金鱼。”小荷花笑着摆了摆手，说：“你看今晚的月光好美呀！”\n\n小金鱼抬头看了看月亮，又看了看小荷花，不由地摇起了尾巴，开心了起来。\n\n(第二天)\n\n春风温柔，浅浅地吹着湖面。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花嘻嘻笑着，欢快地拍着手，她还从来没有见过这么可爱会吐心形泡泡的小金鱼呢。\n\n吐完了泡泡的小金鱼，又变成了正经的小金鱼，他会一本正经地问：“喂，小荷花，你看着我干什么，你是不是想亲我呀？”\n\n小荷花羞红了脸，气哼哼地不理小金鱼。\n\n小金鱼又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。\n\n小荷花被小金鱼气笑了，瞪了他一眼，问：\n\n“你看着我干什么？你是不是想亲我呀？”\n\n小金鱼点了点头，很认真地看着小荷花，说：“是呀！想了好久了！”\n\n然后小金鱼跳起来，亲了小荷花一下。\n\n天边的晚霞一不小心就飞到了小荷花的脸上。\n\n(第三天)\n\n阳光温柔，天空中偶尔有白云飘过。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“喂，小金鱼，你昨天为什么要亲我呀？”\n\n“嘿嘿，我想跳都跳了，不亲一下不是白跳了吗”\n\n小金鱼吐完一串心形泡泡，欢快地摇起了尾巴。\n\n“喂，小金鱼，我跟你说你不可以像昨天那样随便亲女孩子喔！”小荷花瞪着眼睛，气哼哼地说道。\n\n“喂，跳起来也是很累的，我怎么可能随便亲别人喔！”\n\n“哼！你肯定也偷偷亲过别人，不理你啦”小荷花气哼哼地转过头去。\n\n小金鱼于是又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。\n\n“喂，小荷花，你再不理我，我又要跳起来给你一个么么哒洛。”\n\n“扑哧！”香气弥漫了整个湖面。\n\n(第四天)\n\n柳絮温柔，漫天地飘荡着。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花被心形的泡泡环绕在中间，一会看看湖面上飘荡的柳絮，一会看看小金鱼，笑弯了腰。小金鱼欢快地摇着尾巴，时不时跳起来就给小荷花一个么么哒。\n\n“喂，你整天跳来跳去不累吗？”\n\n“喜欢你怎么会累？”\n\n(第五天)\n\n细雨温柔，在湖面上点出涟漪。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“小金鱼，下雨了喔，今晚看不到月亮了。”\n\n雨越下越大，雨点在湖面上跳跃着，好像一闪一闪的星空。\n\n小金鱼在水里吐着泡泡，抬头看见雨中的小荷花，像极了初见时那晚的月光，洁白淡雅。\n\n“不会呀，今晚月光很美！”小金鱼看着小荷花，认真的说。\n\n小荷花也看着小金鱼，那个雨夜香气四溢。\n\n(第六天)\n\n大雨倾盆也温柔，池塘水位上涨，小荷花也浮在了水面上。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“小金鱼，有你真好，下雨天我也可以很开心。”\n\n“小荷花，其实我有点喜欢下雨天啦！”\n\n“你是鱼耶当然喜欢下雨天啦！”\n\n“不是的！”小金鱼游到了小荷花的身边，拉着她的手温柔地说道：“因为下雨天呀，我不用跳就可以亲到你了！”\n\n说完，小金鱼就抱着小荷花亲了一下，满满的爱意从鼓鼓的眼睛溢了出来。\n\n(第七天)\n\n亲爱的，余生还很长，我们不必急着一晚上把故事都听完，乖，来睡觉觉了，我们睡着了，小荷花和小金鱼就又可以在一起了呀，乖啦！\n\n女：嘻嘻，好的吧，不过你要告诉我为什么你是小金鱼我是小荷花咧？\n\n男：因为这样，我就可以游到你的心底了呀！\n\n女：嘻嘻，那我也要去你的心底呀！\n\n男：被辣么多心形泡泡环绕，你以为你还跑的掉！\n\n晚安，写给女票的睡前小故事。\n","source":"_posts/2019-01-19-short-stories-before-bed1.markdown","raw":"---\nlayout: post\ntitle: 睡前小故事——Day 1\ndate: 2019-01-19 03:52:00 +0800\ncategories:\n- Life\ntags: \n- 睡前小故事 \n---\n\n{% centerquote %} 来自知乎的暖心故事 {% endcenterquote %}\n\n<!-- more -->\n\n## 知乎用户-芒果\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/72024360)\n\n“爷爷，学校里同学说世界上没有龙没有妖怪什么都没有，都是别人编的。”少女坐在爷爷身边，嘟着嘴抱怨到。\n\n“别听他们的，丫头，这个世界上明明就有啊，不仅有龙，还有勇敢的骑士，能驯服龙的骑士。”爷爷布满皱纹的手轻抚着少女的头发，眼里满满都是慈爱，“但是龙骑士是很骄傲的，他只会出现在相信他的人的世界里。”\n\n“可是，我怎么跟他们解释，他们都不信，说我骗人，笑我幼稚长不大。”女孩几乎快哭出来了\n\n“去睡吧，丫头，明天起来，大家就会相信你了。”爷爷看着少女落寞回房的背影，好像下定了什么决心。\n\n“去哪儿老头子？”奶奶听到大门打开的声音，从房间里走了出来。\n\n“去见一个老朋友，好多年没见了，想跟它好好叙叙旧。”爷爷说着别了别腰间锈迹斑斑的铁剑。\n\n“你啊，从以前就是暴脾气！待会儿可别吓着那些小家伙了，他们毕竟还是孩子。”奶奶转身回房，出来的时候手上拿着一条破旧的有点褪色的披风，一边嗔怪着，一边给爷爷系上。\n\n“我心里有数，这些小鬼竟敢嘲笑囡囡，看我今天不好好收拾他们！”爷爷忿忿不平的唠叨着，头也不回的出门了。\n\n那天晚上，几乎全城的人都看到一头巨大的飞龙在雪白的月光下呼啸而过，龙背上依稀有个人影，拿着剑，背后的披风猎猎作响，奶奶也在窗口看着那巨龙咆哮腾飞，一如当年那个少年，也是这样手执长剑，布衣披风，骑着巨龙从天而降，长笑不羁，神采飞扬。\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-曹丰泽\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/154027314)\n\n在不久以前，大约四千年吧。那时还没有国家，人类生活在部落里。在文明的西部边缘，有一个部落。部落的名字已经不得而知，我们就叫它二狗子寨吧。\n\n那时，天气逐渐转冷，庄稼收成不好，他们养的猪也被吃光了。二狗子寨的男人们只好出去打猎。家里没有牲畜需要照料，死孩子也都已经装进了陶罐里，女人们只好蹲在寨子门口唠闲嗑，并祈祷男人们能打到鹿回来。\n\n天气阴沉沉的，部落里的祭司说要有不好的事情发生。因此，蹲在寨子门口唠闲嗑的女人们都抱着孩子回家了。她们用仅剩的小米磨碎做成面条，放在锅里煮好，等待男人回家。我编不下去了，总之大洪水冲进了这块德性的洼地，他们住的这种半地穴式建筑瞬间被水淹没，女人们把孩子护在身下，然后被埋进了河水带来的泥土之中，直到四千年后考古队员将她们和孩子们挖了出来。就像这样。\n\n![](https://pic3.zhimg.com/80/v2-922052f01fb5ef739924cfd5707e775a_hd.png)\n![](https://pic1.zhimg.com/80/v2-e8bbbb01efdf223c45a597714b658dd0_hd.jpg)\n\n你看，女人们的本能啊，是多么的令人动容。她们生命的最后一刻想的，就是保护她们的孩子啊。\n所以我们什么时候开始造娃\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-有很多人\n\n[原文链接](https://www.zhihu.com/question/35048612/answer/75555181)\n\n黄小狼刚出生没多久，妈妈嫌弃他毛色难看，就把他赶出家门自生自灭去了。真是糟糕，黄小狼还不会人生最重要的技能—偷鸡呢。\n\n他实在饿的不行了，穿过树林，偷偷来到了村里的农户家，准备看看有没有机会可以逮着一只鸡。他悄悄地躲在门口的树后，看着院子里一只油亮亮、毛皮鲜亮光鲜的大公鸡顶着鲜红的鸡冠，骄傲地迈着步伐，在院子里仿佛巡视领地一般走了走去。\n\n大公鸡眼尖，发现了他，一点也不害怕，突然立起了脖子边的毛，如同离弦的箭一样射了过来，要啄黄小狼。于是，两人开启了追逐战。\n\n时间日复一日地划过，黄小狼每天都要去找大公鸡锻炼自己抓鸡的本领。可是在一个阳光灿烂的午后，美丽的大公鸡不见了。或者说让大公鸡骄傲的毛皮不见了。原来大公鸡的毛被农户扒走做了鸡毛掸子。他靠近被拔了毛的大公鸡，大公鸡也没像以前一样奋起直追，而是有些恹恹地撇了他一眼，跺着步伐走开了。\n\n第二天，黄小狼叼着鸡毛掸子又来找大公鸡了。他一身是伤，昨天趁夜偷鸡毛掸子地时候惊醒了农户，黑灯瞎火地挨了几下打。\n\n黄小狼甩了甩他秃秃地尾巴，讨好地对大公鸡笑了笑：你看，我进步啦，起码学会了偷鸡毛。大公鸡梗着脖子半晌，突然把头凑近了黄小狼，黄小狼以为大公鸡又要啄他。吓得闭了眼，大公鸡却只是用尖尖地嘴小心的、轻轻地蹭了他一下。\n\n-----------------------------------------------------------------------------\n\n## 知乎用户-李阿木\n[原文链接](https://www.zhihu.com/question/35048612/answer/126442751)\n\n“亲爱的，我昨晚做了一个梦，梦见一个很大很大的池塘喔，里面有一条小金鱼和一朵小荷花快乐地生活着。”\n\n“哇，有多大呀？”\n\n“恩，大概跟我们家一样大吧”\n\n“那也没有很大呀…”\n\n“将来会很大的喔！”\n\n“嗯～”“故事开始洛…”\n\n(第一天)\n\n风清月朗，星光洒满了湖面。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花站在水里，一会看看天上的月亮，一会看看水里的月亮，心里开心极了。\n\n小金鱼游呀游，也不知道游了多少圈，终于忍不住上前打了声招呼：\n\n“你好呀，小荷花。”\n\n“你好呀，小金鱼。”小荷花笑着摆了摆手，说：“你看今晚的月光好美呀！”\n\n小金鱼抬头看了看月亮，又看了看小荷花，不由地摇起了尾巴，开心了起来。\n\n(第二天)\n\n春风温柔，浅浅地吹着湖面。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花嘻嘻笑着，欢快地拍着手，她还从来没有见过这么可爱会吐心形泡泡的小金鱼呢。\n\n吐完了泡泡的小金鱼，又变成了正经的小金鱼，他会一本正经地问：“喂，小荷花，你看着我干什么，你是不是想亲我呀？”\n\n小荷花羞红了脸，气哼哼地不理小金鱼。\n\n小金鱼又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。\n\n小荷花被小金鱼气笑了，瞪了他一眼，问：\n\n“你看着我干什么？你是不是想亲我呀？”\n\n小金鱼点了点头，很认真地看着小荷花，说：“是呀！想了好久了！”\n\n然后小金鱼跳起来，亲了小荷花一下。\n\n天边的晚霞一不小心就飞到了小荷花的脸上。\n\n(第三天)\n\n阳光温柔，天空中偶尔有白云飘过。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“喂，小金鱼，你昨天为什么要亲我呀？”\n\n“嘿嘿，我想跳都跳了，不亲一下不是白跳了吗”\n\n小金鱼吐完一串心形泡泡，欢快地摇起了尾巴。\n\n“喂，小金鱼，我跟你说你不可以像昨天那样随便亲女孩子喔！”小荷花瞪着眼睛，气哼哼地说道。\n\n“喂，跳起来也是很累的，我怎么可能随便亲别人喔！”\n\n“哼！你肯定也偷偷亲过别人，不理你啦”小荷花气哼哼地转过头去。\n\n小金鱼于是又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。\n\n“喂，小荷花，你再不理我，我又要跳起来给你一个么么哒洛。”\n\n“扑哧！”香气弥漫了整个湖面。\n\n(第四天)\n\n柳絮温柔，漫天地飘荡着。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n小荷花被心形的泡泡环绕在中间，一会看看湖面上飘荡的柳絮，一会看看小金鱼，笑弯了腰。小金鱼欢快地摇着尾巴，时不时跳起来就给小荷花一个么么哒。\n\n“喂，你整天跳来跳去不累吗？”\n\n“喜欢你怎么会累？”\n\n(第五天)\n\n细雨温柔，在湖面上点出涟漪。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“小金鱼，下雨了喔，今晚看不到月亮了。”\n\n雨越下越大，雨点在湖面上跳跃着，好像一闪一闪的星空。\n\n小金鱼在水里吐着泡泡，抬头看见雨中的小荷花，像极了初见时那晚的月光，洁白淡雅。\n\n“不会呀，今晚月光很美！”小金鱼看着小荷花，认真的说。\n\n小荷花也看着小金鱼，那个雨夜香气四溢。\n\n(第六天)\n\n大雨倾盆也温柔，池塘水位上涨，小荷花也浮在了水面上。\n\n小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。\n\n“小金鱼，有你真好，下雨天我也可以很开心。”\n\n“小荷花，其实我有点喜欢下雨天啦！”\n\n“你是鱼耶当然喜欢下雨天啦！”\n\n“不是的！”小金鱼游到了小荷花的身边，拉着她的手温柔地说道：“因为下雨天呀，我不用跳就可以亲到你了！”\n\n说完，小金鱼就抱着小荷花亲了一下，满满的爱意从鼓鼓的眼睛溢了出来。\n\n(第七天)\n\n亲爱的，余生还很长，我们不必急着一晚上把故事都听完，乖，来睡觉觉了，我们睡着了，小荷花和小金鱼就又可以在一起了呀，乖啦！\n\n女：嘻嘻，好的吧，不过你要告诉我为什么你是小金鱼我是小荷花咧？\n\n男：因为这样，我就可以游到你的心底了呀！\n\n女：嘻嘻，那我也要去你的心底呀！\n\n男：被辣么多心形泡泡环绕，你以为你还跑的掉！\n\n晚安，写给女票的睡前小故事。\n","slug":"short-stories-before-bed1","published":1,"updated":"2019-03-04T13:07:25.664Z","comments":1,"photos":[],"link":"","_id":"cjwj070hj007bm8zawu5wvw8t","content":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>\n\n<a id=\"more\"></a>\n\n<h2 id=\"知乎用户-芒果\"><a href=\"#知乎用户-芒果\" class=\"headerlink\" title=\"知乎用户-芒果\"></a>知乎用户-芒果</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/72024360\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>“爷爷，学校里同学说世界上没有龙没有妖怪什么都没有，都是别人编的。”少女坐在爷爷身边，嘟着嘴抱怨到。</p>\n<p>“别听他们的，丫头，这个世界上明明就有啊，不仅有龙，还有勇敢的骑士，能驯服龙的骑士。”爷爷布满皱纹的手轻抚着少女的头发，眼里满满都是慈爱，“但是龙骑士是很骄傲的，他只会出现在相信他的人的世界里。”</p>\n<p>“可是，我怎么跟他们解释，他们都不信，说我骗人，笑我幼稚长不大。”女孩几乎快哭出来了</p>\n<p>“去睡吧，丫头，明天起来，大家就会相信你了。”爷爷看着少女落寞回房的背影，好像下定了什么决心。</p>\n<p>“去哪儿老头子？”奶奶听到大门打开的声音，从房间里走了出来。</p>\n<p>“去见一个老朋友，好多年没见了，想跟它好好叙叙旧。”爷爷说着别了别腰间锈迹斑斑的铁剑。</p>\n<p>“你啊，从以前就是暴脾气！待会儿可别吓着那些小家伙了，他们毕竟还是孩子。”奶奶转身回房，出来的时候手上拿着一条破旧的有点褪色的披风，一边嗔怪着，一边给爷爷系上。</p>\n<p>“我心里有数，这些小鬼竟敢嘲笑囡囡，看我今天不好好收拾他们！”爷爷忿忿不平的唠叨着，头也不回的出门了。</p>\n<p>那天晚上，几乎全城的人都看到一头巨大的飞龙在雪白的月光下呼啸而过，龙背上依稀有个人影，拿着剑，背后的披风猎猎作响，奶奶也在窗口看着那巨龙咆哮腾飞，一如当年那个少年，也是这样手执长剑，布衣披风，骑着巨龙从天而降，长笑不羁，神采飞扬。</p>\n<hr>\n<h2 id=\"知乎用户-曹丰泽\"><a href=\"#知乎用户-曹丰泽\" class=\"headerlink\" title=\"知乎用户-曹丰泽\"></a>知乎用户-曹丰泽</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/154027314\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>在不久以前，大约四千年吧。那时还没有国家，人类生活在部落里。在文明的西部边缘，有一个部落。部落的名字已经不得而知，我们就叫它二狗子寨吧。</p>\n<p>那时，天气逐渐转冷，庄稼收成不好，他们养的猪也被吃光了。二狗子寨的男人们只好出去打猎。家里没有牲畜需要照料，死孩子也都已经装进了陶罐里，女人们只好蹲在寨子门口唠闲嗑，并祈祷男人们能打到鹿回来。</p>\n<p>天气阴沉沉的，部落里的祭司说要有不好的事情发生。因此，蹲在寨子门口唠闲嗑的女人们都抱着孩子回家了。她们用仅剩的小米磨碎做成面条，放在锅里煮好，等待男人回家。我编不下去了，总之大洪水冲进了这块德性的洼地，他们住的这种半地穴式建筑瞬间被水淹没，女人们把孩子护在身下，然后被埋进了河水带来的泥土之中，直到四千年后考古队员将她们和孩子们挖了出来。就像这样。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-922052f01fb5ef739924cfd5707e775a_hd.png\" alt><br><img src=\"https://pic1.zhimg.com/80/v2-e8bbbb01efdf223c45a597714b658dd0_hd.jpg\" alt></p>\n<p>你看，女人们的本能啊，是多么的令人动容。她们生命的最后一刻想的，就是保护她们的孩子啊。<br>所以我们什么时候开始造娃</p>\n<hr>\n<h2 id=\"知乎用户-有很多人\"><a href=\"#知乎用户-有很多人\" class=\"headerlink\" title=\"知乎用户-有很多人\"></a>知乎用户-有很多人</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/75555181\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>黄小狼刚出生没多久，妈妈嫌弃他毛色难看，就把他赶出家门自生自灭去了。真是糟糕，黄小狼还不会人生最重要的技能—偷鸡呢。</p>\n<p>他实在饿的不行了，穿过树林，偷偷来到了村里的农户家，准备看看有没有机会可以逮着一只鸡。他悄悄地躲在门口的树后，看着院子里一只油亮亮、毛皮鲜亮光鲜的大公鸡顶着鲜红的鸡冠，骄傲地迈着步伐，在院子里仿佛巡视领地一般走了走去。</p>\n<p>大公鸡眼尖，发现了他，一点也不害怕，突然立起了脖子边的毛，如同离弦的箭一样射了过来，要啄黄小狼。于是，两人开启了追逐战。</p>\n<p>时间日复一日地划过，黄小狼每天都要去找大公鸡锻炼自己抓鸡的本领。可是在一个阳光灿烂的午后，美丽的大公鸡不见了。或者说让大公鸡骄傲的毛皮不见了。原来大公鸡的毛被农户扒走做了鸡毛掸子。他靠近被拔了毛的大公鸡，大公鸡也没像以前一样奋起直追，而是有些恹恹地撇了他一眼，跺着步伐走开了。</p>\n<p>第二天，黄小狼叼着鸡毛掸子又来找大公鸡了。他一身是伤，昨天趁夜偷鸡毛掸子地时候惊醒了农户，黑灯瞎火地挨了几下打。</p>\n<p>黄小狼甩了甩他秃秃地尾巴，讨好地对大公鸡笑了笑：你看，我进步啦，起码学会了偷鸡毛。大公鸡梗着脖子半晌，突然把头凑近了黄小狼，黄小狼以为大公鸡又要啄他。吓得闭了眼，大公鸡却只是用尖尖地嘴小心的、轻轻地蹭了他一下。</p>\n<hr>\n<h2 id=\"知乎用户-李阿木\"><a href=\"#知乎用户-李阿木\" class=\"headerlink\" title=\"知乎用户-李阿木\"></a>知乎用户-李阿木</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/126442751\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>“亲爱的，我昨晚做了一个梦，梦见一个很大很大的池塘喔，里面有一条小金鱼和一朵小荷花快乐地生活着。”</p>\n<p>“哇，有多大呀？”</p>\n<p>“恩，大概跟我们家一样大吧”</p>\n<p>“那也没有很大呀…”</p>\n<p>“将来会很大的喔！”</p>\n<p>“嗯～”“故事开始洛…”</p>\n<p>(第一天)</p>\n<p>风清月朗，星光洒满了湖面。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花站在水里，一会看看天上的月亮，一会看看水里的月亮，心里开心极了。</p>\n<p>小金鱼游呀游，也不知道游了多少圈，终于忍不住上前打了声招呼：</p>\n<p>“你好呀，小荷花。”</p>\n<p>“你好呀，小金鱼。”小荷花笑着摆了摆手，说：“你看今晚的月光好美呀！”</p>\n<p>小金鱼抬头看了看月亮，又看了看小荷花，不由地摇起了尾巴，开心了起来。</p>\n<p>(第二天)</p>\n<p>春风温柔，浅浅地吹着湖面。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花嘻嘻笑着，欢快地拍着手，她还从来没有见过这么可爱会吐心形泡泡的小金鱼呢。</p>\n<p>吐完了泡泡的小金鱼，又变成了正经的小金鱼，他会一本正经地问：“喂，小荷花，你看着我干什么，你是不是想亲我呀？”</p>\n<p>小荷花羞红了脸，气哼哼地不理小金鱼。</p>\n<p>小金鱼又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。</p>\n<p>小荷花被小金鱼气笑了，瞪了他一眼，问：</p>\n<p>“你看着我干什么？你是不是想亲我呀？”</p>\n<p>小金鱼点了点头，很认真地看着小荷花，说：“是呀！想了好久了！”</p>\n<p>然后小金鱼跳起来，亲了小荷花一下。</p>\n<p>天边的晚霞一不小心就飞到了小荷花的脸上。</p>\n<p>(第三天)</p>\n<p>阳光温柔，天空中偶尔有白云飘过。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“喂，小金鱼，你昨天为什么要亲我呀？”</p>\n<p>“嘿嘿，我想跳都跳了，不亲一下不是白跳了吗”</p>\n<p>小金鱼吐完一串心形泡泡，欢快地摇起了尾巴。</p>\n<p>“喂，小金鱼，我跟你说你不可以像昨天那样随便亲女孩子喔！”小荷花瞪着眼睛，气哼哼地说道。</p>\n<p>“喂，跳起来也是很累的，我怎么可能随便亲别人喔！”</p>\n<p>“哼！你肯定也偷偷亲过别人，不理你啦”小荷花气哼哼地转过头去。</p>\n<p>小金鱼于是又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。</p>\n<p>“喂，小荷花，你再不理我，我又要跳起来给你一个么么哒洛。”</p>\n<p>“扑哧！”香气弥漫了整个湖面。</p>\n<p>(第四天)</p>\n<p>柳絮温柔，漫天地飘荡着。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花被心形的泡泡环绕在中间，一会看看湖面上飘荡的柳絮，一会看看小金鱼，笑弯了腰。小金鱼欢快地摇着尾巴，时不时跳起来就给小荷花一个么么哒。</p>\n<p>“喂，你整天跳来跳去不累吗？”</p>\n<p>“喜欢你怎么会累？”</p>\n<p>(第五天)</p>\n<p>细雨温柔，在湖面上点出涟漪。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“小金鱼，下雨了喔，今晚看不到月亮了。”</p>\n<p>雨越下越大，雨点在湖面上跳跃着，好像一闪一闪的星空。</p>\n<p>小金鱼在水里吐着泡泡，抬头看见雨中的小荷花，像极了初见时那晚的月光，洁白淡雅。</p>\n<p>“不会呀，今晚月光很美！”小金鱼看着小荷花，认真的说。</p>\n<p>小荷花也看着小金鱼，那个雨夜香气四溢。</p>\n<p>(第六天)</p>\n<p>大雨倾盆也温柔，池塘水位上涨，小荷花也浮在了水面上。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“小金鱼，有你真好，下雨天我也可以很开心。”</p>\n<p>“小荷花，其实我有点喜欢下雨天啦！”</p>\n<p>“你是鱼耶当然喜欢下雨天啦！”</p>\n<p>“不是的！”小金鱼游到了小荷花的身边，拉着她的手温柔地说道：“因为下雨天呀，我不用跳就可以亲到你了！”</p>\n<p>说完，小金鱼就抱着小荷花亲了一下，满满的爱意从鼓鼓的眼睛溢了出来。</p>\n<p>(第七天)</p>\n<p>亲爱的，余生还很长，我们不必急着一晚上把故事都听完，乖，来睡觉觉了，我们睡着了，小荷花和小金鱼就又可以在一起了呀，乖啦！</p>\n<p>女：嘻嘻，好的吧，不过你要告诉我为什么你是小金鱼我是小荷花咧？</p>\n<p>男：因为这样，我就可以游到你的心底了呀！</p>\n<p>女：嘻嘻，那我也要去你的心底呀！</p>\n<p>男：被辣么多心形泡泡环绕，你以为你还跑的掉！</p>\n<p>晚安，写给女票的睡前小故事。</p>\n","site":{"data":{"js_settings":{"click_heart":true,"dynamic_title":true},"post_images/2019":{"fonts":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-22%20-fonts.jpg","font-test":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2019/2019-02-23-font-test-143421.jpg"},"year_book/January":{"iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2018_12_31_iOS.png","qqBrowser":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01.png","President_Xi_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_01_President_Xi_iOS.png","PPT_iOS":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_PPT_iOS.png","school_road_squirrel":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_02_school_road_squirrel.jpg","meal_night":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_meal_night.jpg","wine_Brother_Doggy":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_03_wine_Brother_Doggy.jpg","grains_soy_milk":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_07_grains_soy_milk.jpg","HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_HeiDou.jpg","Premier_Zhou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_Premier_Zhou.png","nest_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_08_nest_HeiDou.jpg","myself":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_myself.jpg","pictures_of_tiger_from_chunMei":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pictures_of_tiger_from_chunMei.jpg","pills_for_HeiDou":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_09_pill_for_HeiDou.jpg","zhihu_dinosaur":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_10_zhihu_dinosaur.jpg","nurse_photo_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_11_nurse_photo_mom.jpg","MingMing":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_13_MingMing.jpg","uncle_cow":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_15.jpeg","quilt_holder_from_mom":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_quilt_holder_from_mom.jpg","playing_quilt_holder":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_17_playing_quilt_holder.mp4","fried_rice":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/%E5%B9%B4%E8%AE%B0-2019-01/2019_01_18_fried_rice.jpg"},"post_images/2018":{"thank-the-auther-home":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-722.jpg","thank-the-auther-david-freeman":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-04-david-freeman.jpg","for-MRdai-dai-daidai-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-1.PNG","for-MRdai-dai-daidai-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-26-daidai-2.PNG","crawling-magnet-the-pirate-bay-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-1.png","crawling-magnet-the-pirate-bay-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-27-the-pirate-bay-2.png","cloud-dns-cloud-dns":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-cloud-dns.png","cloud-dns-example1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example1.png","cloud-dns-example2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example2.png","cloud-dns-example3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-28-example3.png","bigdata-hbase-hbase-env":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-01-29-hbase-env.png","word-cloud-sb":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb.jpg","word-cloud-sb1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb1.png","word-cloud-sb2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-sb2.png","word-cloud-weibo-ch":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-ch.jpg","word-cloud-weibo-en":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-04-weibo-en.jpg","hive-type-of-data-array-id-userid":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-id-userid.jpg","hive-type-of-data-array-ip-userid[1]":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-ip-userid%5B1%5D.jpg","hive-type-of-data-array-length":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array-length.jpg","hive-type-of-data-array":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-array.jpg","hive-type-of-data-map-1-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1-all.jpg","hive-type-of-data-map-1":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-1.jpg","hive-type-of-data-map-2-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2-all.jpg","hive-type-of-data-map-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-2.jpg","hive-type-of-data-map-different-info":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-map-different-info.jpg","hive-type-of-data-struct-all":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct-all.jpg","hive-type-of-data-struct":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-06-struct.jpg","x-man-to-bingxin-apocalypse":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-apocalypse.jpg","x-man-to-bingxin-days-of-future-past":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-days-of-future-past.jpg","x-man-to-bingxin-deadpool":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-deadpool.jpg","x-man-to-bingxin-first-class":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-first-class.jpg","x-man-to-bingxin-the-last-stand":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-the-last-stand.jpg","x-man-to-bingxin-wolverine":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine.jpg","x-man-to-bingxin-wolverine2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine2.jpg","x-man-to-bingxin-wolverine3":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-wolverine3.jpg","x-man-to-bingxin-x-man-2":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man-2.jpg","x-man-to-bingxin-x-man":"https://github-pages-1253649638.cos.ap-beijing.myqcloud.com/post-images/2018-02-23-x-man.jpg"}}},"excerpt":"<blockquote class=\"blockquote-center\"><p>来自知乎的暖心故事 </p>\n</blockquote>","more":"<h2 id=\"知乎用户-芒果\"><a href=\"#知乎用户-芒果\" class=\"headerlink\" title=\"知乎用户-芒果\"></a>知乎用户-芒果</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/72024360\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>“爷爷，学校里同学说世界上没有龙没有妖怪什么都没有，都是别人编的。”少女坐在爷爷身边，嘟着嘴抱怨到。</p>\n<p>“别听他们的，丫头，这个世界上明明就有啊，不仅有龙，还有勇敢的骑士，能驯服龙的骑士。”爷爷布满皱纹的手轻抚着少女的头发，眼里满满都是慈爱，“但是龙骑士是很骄傲的，他只会出现在相信他的人的世界里。”</p>\n<p>“可是，我怎么跟他们解释，他们都不信，说我骗人，笑我幼稚长不大。”女孩几乎快哭出来了</p>\n<p>“去睡吧，丫头，明天起来，大家就会相信你了。”爷爷看着少女落寞回房的背影，好像下定了什么决心。</p>\n<p>“去哪儿老头子？”奶奶听到大门打开的声音，从房间里走了出来。</p>\n<p>“去见一个老朋友，好多年没见了，想跟它好好叙叙旧。”爷爷说着别了别腰间锈迹斑斑的铁剑。</p>\n<p>“你啊，从以前就是暴脾气！待会儿可别吓着那些小家伙了，他们毕竟还是孩子。”奶奶转身回房，出来的时候手上拿着一条破旧的有点褪色的披风，一边嗔怪着，一边给爷爷系上。</p>\n<p>“我心里有数，这些小鬼竟敢嘲笑囡囡，看我今天不好好收拾他们！”爷爷忿忿不平的唠叨着，头也不回的出门了。</p>\n<p>那天晚上，几乎全城的人都看到一头巨大的飞龙在雪白的月光下呼啸而过，龙背上依稀有个人影，拿着剑，背后的披风猎猎作响，奶奶也在窗口看着那巨龙咆哮腾飞，一如当年那个少年，也是这样手执长剑，布衣披风，骑着巨龙从天而降，长笑不羁，神采飞扬。</p>\n<hr>\n<h2 id=\"知乎用户-曹丰泽\"><a href=\"#知乎用户-曹丰泽\" class=\"headerlink\" title=\"知乎用户-曹丰泽\"></a>知乎用户-曹丰泽</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/154027314\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>在不久以前，大约四千年吧。那时还没有国家，人类生活在部落里。在文明的西部边缘，有一个部落。部落的名字已经不得而知，我们就叫它二狗子寨吧。</p>\n<p>那时，天气逐渐转冷，庄稼收成不好，他们养的猪也被吃光了。二狗子寨的男人们只好出去打猎。家里没有牲畜需要照料，死孩子也都已经装进了陶罐里，女人们只好蹲在寨子门口唠闲嗑，并祈祷男人们能打到鹿回来。</p>\n<p>天气阴沉沉的，部落里的祭司说要有不好的事情发生。因此，蹲在寨子门口唠闲嗑的女人们都抱着孩子回家了。她们用仅剩的小米磨碎做成面条，放在锅里煮好，等待男人回家。我编不下去了，总之大洪水冲进了这块德性的洼地，他们住的这种半地穴式建筑瞬间被水淹没，女人们把孩子护在身下，然后被埋进了河水带来的泥土之中，直到四千年后考古队员将她们和孩子们挖了出来。就像这样。</p>\n<p><img src=\"https://pic3.zhimg.com/80/v2-922052f01fb5ef739924cfd5707e775a_hd.png\" alt><br><img src=\"https://pic1.zhimg.com/80/v2-e8bbbb01efdf223c45a597714b658dd0_hd.jpg\" alt></p>\n<p>你看，女人们的本能啊，是多么的令人动容。她们生命的最后一刻想的，就是保护她们的孩子啊。<br>所以我们什么时候开始造娃</p>\n<hr>\n<h2 id=\"知乎用户-有很多人\"><a href=\"#知乎用户-有很多人\" class=\"headerlink\" title=\"知乎用户-有很多人\"></a>知乎用户-有很多人</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/75555181\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>黄小狼刚出生没多久，妈妈嫌弃他毛色难看，就把他赶出家门自生自灭去了。真是糟糕，黄小狼还不会人生最重要的技能—偷鸡呢。</p>\n<p>他实在饿的不行了，穿过树林，偷偷来到了村里的农户家，准备看看有没有机会可以逮着一只鸡。他悄悄地躲在门口的树后，看着院子里一只油亮亮、毛皮鲜亮光鲜的大公鸡顶着鲜红的鸡冠，骄傲地迈着步伐，在院子里仿佛巡视领地一般走了走去。</p>\n<p>大公鸡眼尖，发现了他，一点也不害怕，突然立起了脖子边的毛，如同离弦的箭一样射了过来，要啄黄小狼。于是，两人开启了追逐战。</p>\n<p>时间日复一日地划过，黄小狼每天都要去找大公鸡锻炼自己抓鸡的本领。可是在一个阳光灿烂的午后，美丽的大公鸡不见了。或者说让大公鸡骄傲的毛皮不见了。原来大公鸡的毛被农户扒走做了鸡毛掸子。他靠近被拔了毛的大公鸡，大公鸡也没像以前一样奋起直追，而是有些恹恹地撇了他一眼，跺着步伐走开了。</p>\n<p>第二天，黄小狼叼着鸡毛掸子又来找大公鸡了。他一身是伤，昨天趁夜偷鸡毛掸子地时候惊醒了农户，黑灯瞎火地挨了几下打。</p>\n<p>黄小狼甩了甩他秃秃地尾巴，讨好地对大公鸡笑了笑：你看，我进步啦，起码学会了偷鸡毛。大公鸡梗着脖子半晌，突然把头凑近了黄小狼，黄小狼以为大公鸡又要啄他。吓得闭了眼，大公鸡却只是用尖尖地嘴小心的、轻轻地蹭了他一下。</p>\n<hr>\n<h2 id=\"知乎用户-李阿木\"><a href=\"#知乎用户-李阿木\" class=\"headerlink\" title=\"知乎用户-李阿木\"></a>知乎用户-李阿木</h2><p><a href=\"https://www.zhihu.com/question/35048612/answer/126442751\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<p>“亲爱的，我昨晚做了一个梦，梦见一个很大很大的池塘喔，里面有一条小金鱼和一朵小荷花快乐地生活着。”</p>\n<p>“哇，有多大呀？”</p>\n<p>“恩，大概跟我们家一样大吧”</p>\n<p>“那也没有很大呀…”</p>\n<p>“将来会很大的喔！”</p>\n<p>“嗯～”“故事开始洛…”</p>\n<p>(第一天)</p>\n<p>风清月朗，星光洒满了湖面。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花站在水里，一会看看天上的月亮，一会看看水里的月亮，心里开心极了。</p>\n<p>小金鱼游呀游，也不知道游了多少圈，终于忍不住上前打了声招呼：</p>\n<p>“你好呀，小荷花。”</p>\n<p>“你好呀，小金鱼。”小荷花笑着摆了摆手，说：“你看今晚的月光好美呀！”</p>\n<p>小金鱼抬头看了看月亮，又看了看小荷花，不由地摇起了尾巴，开心了起来。</p>\n<p>(第二天)</p>\n<p>春风温柔，浅浅地吹着湖面。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花嘻嘻笑着，欢快地拍着手，她还从来没有见过这么可爱会吐心形泡泡的小金鱼呢。</p>\n<p>吐完了泡泡的小金鱼，又变成了正经的小金鱼，他会一本正经地问：“喂，小荷花，你看着我干什么，你是不是想亲我呀？”</p>\n<p>小荷花羞红了脸，气哼哼地不理小金鱼。</p>\n<p>小金鱼又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。</p>\n<p>小荷花被小金鱼气笑了，瞪了他一眼，问：</p>\n<p>“你看着我干什么？你是不是想亲我呀？”</p>\n<p>小金鱼点了点头，很认真地看着小荷花，说：“是呀！想了好久了！”</p>\n<p>然后小金鱼跳起来，亲了小荷花一下。</p>\n<p>天边的晚霞一不小心就飞到了小荷花的脸上。</p>\n<p>(第三天)</p>\n<p>阳光温柔，天空中偶尔有白云飘过。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“喂，小金鱼，你昨天为什么要亲我呀？”</p>\n<p>“嘿嘿，我想跳都跳了，不亲一下不是白跳了吗”</p>\n<p>小金鱼吐完一串心形泡泡，欢快地摇起了尾巴。</p>\n<p>“喂，小金鱼，我跟你说你不可以像昨天那样随便亲女孩子喔！”小荷花瞪着眼睛，气哼哼地说道。</p>\n<p>“喂，跳起来也是很累的，我怎么可能随便亲别人喔！”</p>\n<p>“哼！你肯定也偷偷亲过别人，不理你啦”小荷花气哼哼地转过头去。</p>\n<p>小金鱼于是又围着小荷花游来游去，一会打滚，一会倒立，一会吐泡泡。</p>\n<p>“喂，小荷花，你再不理我，我又要跳起来给你一个么么哒洛。”</p>\n<p>“扑哧！”香气弥漫了整个湖面。</p>\n<p>(第四天)</p>\n<p>柳絮温柔，漫天地飘荡着。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>小荷花被心形的泡泡环绕在中间，一会看看湖面上飘荡的柳絮，一会看看小金鱼，笑弯了腰。小金鱼欢快地摇着尾巴，时不时跳起来就给小荷花一个么么哒。</p>\n<p>“喂，你整天跳来跳去不累吗？”</p>\n<p>“喜欢你怎么会累？”</p>\n<p>(第五天)</p>\n<p>细雨温柔，在湖面上点出涟漪。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“小金鱼，下雨了喔，今晚看不到月亮了。”</p>\n<p>雨越下越大，雨点在湖面上跳跃着，好像一闪一闪的星空。</p>\n<p>小金鱼在水里吐着泡泡，抬头看见雨中的小荷花，像极了初见时那晚的月光，洁白淡雅。</p>\n<p>“不会呀，今晚月光很美！”小金鱼看着小荷花，认真的说。</p>\n<p>小荷花也看着小金鱼，那个雨夜香气四溢。</p>\n<p>(第六天)</p>\n<p>大雨倾盆也温柔，池塘水位上涨，小荷花也浮在了水面上。</p>\n<p>小金鱼在小荷花的周围游来游去，欢快地打着滚，吐着泡泡。</p>\n<p>“小金鱼，有你真好，下雨天我也可以很开心。”</p>\n<p>“小荷花，其实我有点喜欢下雨天啦！”</p>\n<p>“你是鱼耶当然喜欢下雨天啦！”</p>\n<p>“不是的！”小金鱼游到了小荷花的身边，拉着她的手温柔地说道：“因为下雨天呀，我不用跳就可以亲到你了！”</p>\n<p>说完，小金鱼就抱着小荷花亲了一下，满满的爱意从鼓鼓的眼睛溢了出来。</p>\n<p>(第七天)</p>\n<p>亲爱的，余生还很长，我们不必急着一晚上把故事都听完，乖，来睡觉觉了，我们睡着了，小荷花和小金鱼就又可以在一起了呀，乖啦！</p>\n<p>女：嘻嘻，好的吧，不过你要告诉我为什么你是小金鱼我是小荷花咧？</p>\n<p>男：因为这样，我就可以游到你的心底了呀！</p>\n<p>女：嘻嘻，那我也要去你的心底呀！</p>\n<p>男：被辣么多心形泡泡环绕，你以为你还跑的掉！</p>\n<p>晚安，写给女票的睡前小故事。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjwj070br0000m8zadkkn6khs","category_id":"cjwj070c00002m8zavvx89h5t","_id":"cjwj070cd000dm8zanjp9cwxy"},{"post_id":"cjwj070by0001m8zaj0cnwmvo","category_id":"cjwj070c00002m8zavvx89h5t","_id":"cjwj070ci000im8zaqxortb1f"},{"post_id":"cjwj070c30004m8zaf09e2kee","category_id":"cjwj070cc000cm8zarc3ktog6","_id":"cjwj070cl000om8zapfxfjvjk"},{"post_id":"cjwj070c30004m8zaf09e2kee","category_id":"cjwj070c00002m8zavvx89h5t","_id":"cjwj070cm000rm8zatvjvv90b"},{"post_id":"cjwj070c50005m8zafbz15i8e","category_id":"cjwj070ci000km8za2tujljow","_id":"cjwj070cm000tm8zas2t9za5g"},{"post_id":"cjwj070c60006m8zas82r7w7c","category_id":"cjwj070ck000nm8za63eqv6ht","_id":"cjwj070co000xm8za1yapvbi5"},{"post_id":"cjwj070ca000am8za0edizl0n","category_id":"cjwj070cl000qm8zalb27hzik","_id":"cjwj070cp000zm8zafejdsf0t"},{"post_id":"cjwj070cc000bm8zaz4y3yjc1","category_id":"cjwj070cl000qm8zalb27hzik","_id":"cjwj070cr0013m8za182d8cxd"},{"post_id":"cjwj070ce000gm8za2crmnbz1","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070ct0017m8zaayj29wct"},{"post_id":"cjwj070ch000hm8zao6rpauj8","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070cw001em8zan157jx20"},{"post_id":"cjwj070ch000hm8zao6rpauj8","category_id":"cjwj070ct0019m8za2fuxi6ak","_id":"cjwj070cw001fm8zahisewf37"},{"post_id":"cjwj070e1001km8zacjx6s8m6","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070e8001sm8zayv4o420a"},{"post_id":"cjwj070e4001nm8zang94l6ek","category_id":"cjwj070ci000km8za2tujljow","_id":"cjwj070ea001vm8za98kbdih3"},{"post_id":"cjwj070e0001im8zay42p0l0q","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070ec001zm8zai33n4a2x"},{"post_id":"cjwj070e7001rm8za5k9ulcu2","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070ee0022m8za7r9f09x9"},{"post_id":"cjwj070e8001tm8zadt2dt4zx","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070eg0027m8zarp6f0zle"},{"post_id":"cjwj070e5001qm8zao2ee1ur1","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070ei002am8zaa0k8ss50"},{"post_id":"cjwj070e5001qm8zao2ee1ur1","category_id":"cjwj070e9001um8zansmusej1","_id":"cjwj070ek002em8zaud5tyn64"},{"post_id":"cjwj070ed0021m8za4zmwowpo","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070el002hm8za7eo8xuiu"},{"post_id":"cjwj070ed0021m8za4zmwowpo","category_id":"cjwj070e9001um8zansmusej1","_id":"cjwj070en002km8zaq5e2y7t9"},{"post_id":"cjwj070ef0025m8zadcfpgtjk","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070ep002om8zaqbn621wu"},{"post_id":"cjwj070ef0025m8zadcfpgtjk","category_id":"cjwj070e9001um8zansmusej1","_id":"cjwj070er002sm8za5ye31kp1"},{"post_id":"cjwj070eh0029m8zaznzum7fl","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070eu002vm8zaj3erpe4c"},{"post_id":"cjwj070eh0029m8zaznzum7fl","category_id":"cjwj070e9001um8zansmusej1","_id":"cjwj070ex0030m8zalk1ygfjx"},{"post_id":"cjwj070eb001ym8zat3yfl8kw","category_id":"cjwj070cr0014m8zapi25y3nw","_id":"cjwj070ez0033m8za3iuy5q8o"},{"post_id":"cjwj070eb001ym8zat3yfl8kw","category_id":"cjwj070eg0026m8zaenee8l98","_id":"cjwj070f20037m8za13x4w6a9"},{"post_id":"cjwj070ek002gm8zafso0zg29","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070f4003bm8zaq0vnyse7"},{"post_id":"cjwj070eo002mm8zaswoc7gv0","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070f6003fm8zaovnj4mmr"},{"post_id":"cjwj070ep002qm8za6cwejg7m","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070f8003im8za9qqrda2e"},{"post_id":"cjwj070er002um8za84khe64q","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070fb003km8za7pveyqsc"},{"post_id":"cjwj070ej002dm8zaba003rtp","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070fd003om8zad2996pmp"},{"post_id":"cjwj070ej002dm8zaba003rtp","category_id":"cjwj070ep002nm8za4txmsz3u","_id":"cjwj070ff003sm8zampi9j93q"},{"post_id":"cjwj070em002jm8zav3zopwkw","category_id":"cjwj070eu002wm8zadzkdjuxc","_id":"cjwj070fi003wm8zay6scoap4"},{"post_id":"cjwj070f00036m8zaobyaaerx","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070fj003zm8zarogw4eo3"},{"post_id":"cjwj070f30039m8zaffuk2s85","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070fo0043m8za2pm234vc"},{"post_id":"cjwj070ev002ym8zapt40786a","category_id":"cjwj070f00035m8zafn9gxsz4","_id":"cjwj070fq0045m8zaw6lqkfkq"},{"post_id":"cjwj070f4003cm8zapztxct16","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070fs0049m8zaxhan4jl3"},{"post_id":"cjwj070f7003hm8zaaeia45r7","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070ft004bm8za683cnj09"},{"post_id":"cjwj070ex0032m8zapwpierwj","category_id":"cjwj070f6003dm8zaa7pxqt5x","_id":"cjwj070fv004em8zat1ci5mox"},{"post_id":"cjwj070fc003mm8zafxbvt5mo","category_id":"cjwj070c00002m8zavvx89h5t","_id":"cjwj070fw004im8zadem9l6yb"},{"post_id":"cjwj070fa003jm8zaan7kut1y","category_id":"cjwj070fd003pm8za2ir3l3mx","_id":"cjwj070fx004lm8zaeycqlvqu"},{"post_id":"cjwj070fe003qm8zaf0egriux","category_id":"cjwj070cp000ym8zaf4ecm766","_id":"cjwj070fy004pm8zayy8ia3tq"},{"post_id":"cjwj070fe003qm8zaf0egriux","category_id":"cjwj070fs0048m8zah85qpfcf","_id":"cjwj070fz004rm8zabsbq51ym"},{"post_id":"cjwj070fx004km8zatt3d9xnl","category_id":"cjwj070fd003pm8za2ir3l3mx","_id":"cjwj070g0004vm8zakzeoj5cg"},{"post_id":"cjwj070fn0041m8zaza0ov6q9","category_id":"cjwj070fo0042m8zaq0yodcuq","_id":"cjwj070g0004xm8zaofg114hm"},{"post_id":"cjwj070fn0041m8zaza0ov6q9","category_id":"cjwj070fy004nm8za1xbcxswt","_id":"cjwj070g10050m8za13zb34ow"},{"post_id":"cjwj070ff003um8za4vhzjjr6","category_id":"cjwj070fo0042m8zaq0yodcuq","_id":"cjwj070g20052m8zay3cbjlnv"},{"post_id":"cjwj070ff003um8za4vhzjjr6","category_id":"cjwj070fy004nm8za1xbcxswt","_id":"cjwj070g20055m8za5qaqh03t"},{"post_id":"cjwj070fs004am8zam9ppoax0","category_id":"cjwj070fz004tm8zats99b08s","_id":"cjwj070g20056m8zagfyqecya"},{"post_id":"cjwj070fr0047m8zada9kqyrv","category_id":"cjwj070fo0042m8zaq0yodcuq","_id":"cjwj070g30059m8zaccfo0nf0"},{"post_id":"cjwj070fr0047m8zada9kqyrv","category_id":"cjwj070fy004nm8za1xbcxswt","_id":"cjwj070g4005bm8za3x5uuz5q"},{"post_id":"cjwj070fu004cm8zay467atat","category_id":"cjwj070g20053m8zabljjnqpc","_id":"cjwj070g5005em8za86ib4ncy"},{"post_id":"cjwj070fv004hm8za3ae6sj5a","category_id":"cjwj070fz004tm8zats99b08s","_id":"cjwj070g5005fm8zaj7usd6u7"},{"post_id":"cjwj070hj007bm8zawu5wvw8t","category_id":"cjwj070e3001mm8zaxhiojlzd","_id":"cjwj070hl007dm8zarf8ips9a"}],"PostTag":[{"post_id":"cjwj070br0000m8zadkkn6khs","tag_id":"cjwj070c20003m8zas5sy1jiu","_id":"cjwj070ca0009m8zazjpcryo1"},{"post_id":"cjwj070by0001m8zaj0cnwmvo","tag_id":"cjwj070c20003m8zas5sy1jiu","_id":"cjwj070ce000fm8za0mgb9e2o"},{"post_id":"cjwj070c30004m8zaf09e2kee","tag_id":"cjwj070c20003m8zas5sy1jiu","_id":"cjwj070cj000lm8zac7v7te5v"},{"post_id":"cjwj070c60006m8zas82r7w7c","tag_id":"cjwj070ci000jm8zavfoydht5","_id":"cjwj070cm000sm8zarljhx0ak"},{"post_id":"cjwj070c60006m8zas82r7w7c","tag_id":"cjwj070ck000mm8zaz2vvrg5k","_id":"cjwj070cn000um8zaq5hwqqec"},{"post_id":"cjwj070ca000am8za0edizl0n","tag_id":"cjwj070cl000pm8zavxsjwfm9","_id":"cjwj070cq0011m8zalm0plh4d"},{"post_id":"cjwj070ca000am8za0edizl0n","tag_id":"cjwj070cn000vm8zalqvv19oe","_id":"cjwj070cq0012m8zaoxfofrx1"},{"post_id":"cjwj070cc000bm8zaz4y3yjc1","tag_id":"cjwj070cp0010m8za9sqc8qa1","_id":"cjwj070cs0016m8zafpz60ajh"},{"post_id":"cjwj070ce000gm8za2crmnbz1","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070cv001bm8za5pcsl0sm"},{"post_id":"cjwj070ce000gm8za2crmnbz1","tag_id":"cjwj070ct0018m8zaemrgxy4y","_id":"cjwj070cv001cm8zamkyug0mr"},{"post_id":"cjwj070ch000hm8zao6rpauj8","tag_id":"cjwj070cu001am8za1xjhp76t","_id":"cjwj070cx001gm8za6iwz4a5j"},{"post_id":"cjwj070ch000hm8zao6rpauj8","tag_id":"cjwj070cv001dm8zahfwyt2wf","_id":"cjwj070cx001hm8zai6v8c2zy"},{"post_id":"cjwj070e7001rm8za5k9ulcu2","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070eb001xm8zanxwrjbyg"},{"post_id":"cjwj070e7001rm8za5k9ulcu2","tag_id":"cjwj070ct0018m8zaemrgxy4y","_id":"cjwj070ed0020m8zaxrhbgivo"},{"post_id":"cjwj070e1001km8zacjx6s8m6","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070ef0024m8zabvqfktpz"},{"post_id":"cjwj070e1001km8zacjx6s8m6","tag_id":"cjwj070e5001pm8zaroyk8n3l","_id":"cjwj070eh0028m8za7c8u9fv0"},{"post_id":"cjwj070e4001nm8zang94l6ek","tag_id":"cjwj070ea001wm8zaqipi6c9l","_id":"cjwj070ei002cm8za77400ag0"},{"post_id":"cjwj070ef0025m8zadcfpgtjk","tag_id":"cjwj070ee0023m8zajc9k6acm","_id":"cjwj070ek002fm8zae9kqa8ph"},{"post_id":"cjwj070e5001qm8zao2ee1ur1","tag_id":"cjwj070ee0023m8zajc9k6acm","_id":"cjwj070en002lm8zas7j8bkh9"},{"post_id":"cjwj070e5001qm8zao2ee1ur1","tag_id":"cjwj070ei002bm8za034obx7d","_id":"cjwj070ep002pm8zajt7z4jt6"},{"post_id":"cjwj070eo002mm8zaswoc7gv0","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070er002tm8zaobazlbyt"},{"post_id":"cjwj070e8001tm8zadt2dt4zx","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070ev002xm8zagnp34kw9"},{"post_id":"cjwj070e8001tm8zadt2dt4zx","tag_id":"cjwj070em002im8za10x8isp9","_id":"cjwj070ex0031m8za5348fayz"},{"post_id":"cjwj070er002um8za84khe64q","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070ez0034m8zazsyjyy6w"},{"post_id":"cjwj070eb001ym8zat3yfl8kw","tag_id":"cjwj070ei002bm8za034obx7d","_id":"cjwj070f4003am8zaop603zsm"},{"post_id":"cjwj070eb001ym8zat3yfl8kw","tag_id":"cjwj070ew002zm8za3gfou9w7","_id":"cjwj070f6003em8zalvwrkvqj"},{"post_id":"cjwj070ed0021m8za4zmwowpo","tag_id":"cjwj070ee0023m8zajc9k6acm","_id":"cjwj070fd003nm8zaz612rrpz"},{"post_id":"cjwj070ed0021m8za4zmwowpo","tag_id":"cjwj070ei002bm8za034obx7d","_id":"cjwj070ff003rm8za79rd64k7"},{"post_id":"cjwj070eh0029m8zaznzum7fl","tag_id":"cjwj070ee0023m8zajc9k6acm","_id":"cjwj070fh003vm8za2nk7pqua"},{"post_id":"cjwj070eh0029m8zaznzum7fl","tag_id":"cjwj070ei002bm8za034obx7d","_id":"cjwj070fj003ym8za6f0iypdx"},{"post_id":"cjwj070ej002dm8zaba003rtp","tag_id":"cjwj070ff003tm8za40nfw5ay","_id":"cjwj070fv004gm8za3rlsnk4a"},{"post_id":"cjwj070ej002dm8zaba003rtp","tag_id":"cjwj070fm0040m8za3y59nn6w","_id":"cjwj070fw004jm8za1gzacufo"},{"post_id":"cjwj070ej002dm8zaba003rtp","tag_id":"cjwj070fq0046m8za10321p30","_id":"cjwj070fy004om8zacomsz4c4"},{"post_id":"cjwj070ek002gm8zafso0zg29","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070fz004qm8zalamzz5z1"},{"post_id":"cjwj070ek002gm8zafso0zg29","tag_id":"cjwj070fu004dm8zas9zblzua","_id":"cjwj070g0004um8zabifj7xq8"},{"post_id":"cjwj070em002jm8zav3zopwkw","tag_id":"cjwj070fx004mm8zatmsja0d0","_id":"cjwj070g0004wm8za1zvzsvsb"},{"post_id":"cjwj070ep002qm8za6cwejg7m","tag_id":"cjwj070fz004sm8zaytmdyqhx","_id":"cjwj070g10051m8zax0h0jm8f"},{"post_id":"cjwj070ev002ym8zapt40786a","tag_id":"cjwj070g0004ym8zaqviyaayt","_id":"cjwj070g4005am8zaudam002m"},{"post_id":"cjwj070ev002ym8zapt40786a","tag_id":"cjwj070g20054m8zal05xl617","_id":"cjwj070g4005cm8zafdvkyz23"},{"post_id":"cjwj070ex0032m8zapwpierwj","tag_id":"cjwj070g20054m8zal05xl617","_id":"cjwj070g5005hm8zalkz8wbj5"},{"post_id":"cjwj070ex0032m8zapwpierwj","tag_id":"cjwj070g4005dm8zasc6dynjm","_id":"cjwj070g5005im8zarlonclko"},{"post_id":"cjwj070f00036m8zaobyaaerx","tag_id":"cjwj070g5005gm8zachml95cz","_id":"cjwj070g6005km8zatv1fpdsr"},{"post_id":"cjwj070f30039m8zaffuk2s85","tag_id":"cjwj070g5005gm8zachml95cz","_id":"cjwj070g7005mm8zacspch0xw"},{"post_id":"cjwj070f4003cm8zapztxct16","tag_id":"cjwj070g5005gm8zachml95cz","_id":"cjwj070g8005om8za9fwtvy5s"},{"post_id":"cjwj070f7003hm8zaaeia45r7","tag_id":"cjwj070g5005gm8zachml95cz","_id":"cjwj070g9005qm8za1f5lsuhv"},{"post_id":"cjwj070fa003jm8zaan7kut1y","tag_id":"cjwj070g9005pm8zag2mrap92","_id":"cjwj070ga005sm8zauuf7hamc"},{"post_id":"cjwj070fa003jm8zaan7kut1y","tag_id":"cjwj070cl000pm8zavxsjwfm9","_id":"cjwj070ga005tm8za1dg6yet9"},{"post_id":"cjwj070fc003mm8zafxbvt5mo","tag_id":"cjwj070g9005rm8za8r9yhwuu","_id":"cjwj070gb005vm8zajrp0gs8p"},{"post_id":"cjwj070fc003mm8zafxbvt5mo","tag_id":"cjwj070c20003m8zas5sy1jiu","_id":"cjwj070gb005wm8zaos3a3x73"},{"post_id":"cjwj070fe003qm8zaf0egriux","tag_id":"cjwj070cr0015m8za71taxb0f","_id":"cjwj070gc0061m8zapnzautfs"},{"post_id":"cjwj070fe003qm8zaf0egriux","tag_id":"cjwj070ga005um8za0p813hir","_id":"cjwj070gd0062m8zayslgcpu6"},{"post_id":"cjwj070fe003qm8zaf0egriux","tag_id":"cjwj070gb005xm8zaykh539s3","_id":"cjwj070gd0064m8za3i3j01r1"},{"post_id":"cjwj070fe003qm8zaf0egriux","tag_id":"cjwj070gb005ym8zalc06l33u","_id":"cjwj070gd0065m8zayb14v1fw"},{"post_id":"cjwj070fe003qm8zaf0egriux","tag_id":"cjwj070gc005zm8zaxvjb14jp","_id":"cjwj070ge0067m8zacq95afn8"},{"post_id":"cjwj070ff003um8za4vhzjjr6","tag_id":"cjwj070gc0060m8zah915x1i2","_id":"cjwj070ge0068m8zacr2p7m3b"},{"post_id":"cjwj070ff003um8za4vhzjjr6","tag_id":"cjwj070gd0063m8zahh6r8hr5","_id":"cjwj070gf006am8zaf6ttqhyq"},{"post_id":"cjwj070fi003xm8zasvzj0n61","tag_id":"cjwj070ga005um8za0p813hir","_id":"cjwj070gg006cm8zalpwlq3a3"},{"post_id":"cjwj070fi003xm8zasvzj0n61","tag_id":"cjwj070gb005ym8zalc06l33u","_id":"cjwj070gg006dm8zagby3ipdz"},{"post_id":"cjwj070fn0041m8zaza0ov6q9","tag_id":"cjwj070g9005rm8za8r9yhwuu","_id":"cjwj070gh006gm8zam50gj2yx"},{"post_id":"cjwj070fn0041m8zaza0ov6q9","tag_id":"cjwj070gd0063m8zahh6r8hr5","_id":"cjwj070gh006hm8zazii3rx34"},{"post_id":"cjwj070fp0044m8zabj3xy1b0","tag_id":"cjwj070gg006fm8zae04vg26d","_id":"cjwj070gi006jm8zat0ensnty"},{"post_id":"cjwj070fr0047m8zada9kqyrv","tag_id":"cjwj070gc0060m8zah915x1i2","_id":"cjwj070gj006nm8zahqos0pva"},{"post_id":"cjwj070fr0047m8zada9kqyrv","tag_id":"cjwj070gi006km8zavwj4qks7","_id":"cjwj070gj006om8za49157nr3"},{"post_id":"cjwj070fr0047m8zada9kqyrv","tag_id":"cjwj070gd0063m8zahh6r8hr5","_id":"cjwj070gk006qm8za4vsiw83m"},{"post_id":"cjwj070fs004am8zam9ppoax0","tag_id":"cjwj070gj006mm8zaemxqvz54","_id":"cjwj070gk006rm8zazwp9j1gi"},{"post_id":"cjwj070fu004cm8zay467atat","tag_id":"cjwj070gj006pm8za335e49p2","_id":"cjwj070gl006vm8zapb4o22rc"},{"post_id":"cjwj070fu004cm8zay467atat","tag_id":"cjwj070gk006sm8za6o7st6cb","_id":"cjwj070gl006wm8zaoyoilwdl"},{"post_id":"cjwj070fu004cm8zay467atat","tag_id":"cjwj070gk006tm8zar4fryxmo","_id":"cjwj070gl006ym8za4adzxx3t"},{"post_id":"cjwj070fv004hm8za3ae6sj5a","tag_id":"cjwj070gk006um8za93k1si8f","_id":"cjwj070gm0070m8zah2qj32bl"},{"post_id":"cjwj070fv004hm8za3ae6sj5a","tag_id":"cjwj070gl006xm8zao552ayar","_id":"cjwj070gm0071m8zalsfo3qtc"},{"post_id":"cjwj070fx004km8zatt3d9xnl","tag_id":"cjwj070gm006zm8zac54rjm94","_id":"cjwj070go0076m8zamd6628kw"},{"post_id":"cjwj070fx004km8zatt3d9xnl","tag_id":"cjwj070gm0072m8zalcgv930g","_id":"cjwj070go0077m8za7jzqx009"},{"post_id":"cjwj070fx004km8zatt3d9xnl","tag_id":"cjwj070gk006um8za93k1si8f","_id":"cjwj070go0078m8zact5issef"},{"post_id":"cjwj070fx004km8zatt3d9xnl","tag_id":"cjwj070gn0074m8zamjs5ga2h","_id":"cjwj070gp0079m8za7y02lcyd"},{"post_id":"cjwj070fx004km8zatt3d9xnl","tag_id":"cjwj070go0075m8za137fzblx","_id":"cjwj070gp007am8zaj80y2xmf"},{"post_id":"cjwj070hj007bm8zawu5wvw8t","tag_id":"cjwj070g5005gm8zachml95cz","_id":"cjwj070hl007cm8za346v6gm4"}],"Tag":[{"name":"示例","_id":"cjwj070c20003m8zas5sy1jiu"},{"name":"数据库","_id":"cjwj070ci000jm8zavfoydht5"},{"name":"MySQL","_id":"cjwj070ck000mm8zaz2vvrg5k"},{"name":"Linux","_id":"cjwj070cl000pm8zavxsjwfm9"},{"name":"Shell","_id":"cjwj070cn000vm8zalqvv19oe"},{"name":"Linux命令","_id":"cjwj070cp0010m8za9sqc8qa1"},{"name":"Python","_id":"cjwj070cr0015m8za71taxb0f"},{"name":"网络编程","_id":"cjwj070ct0018m8zaemrgxy4y"},{"name":"Hadoop","_id":"cjwj070cu001am8za1xjhp76t"},{"name":"HDFS","_id":"cjwj070cv001dm8zahfwyt2wf"},{"name":"爬虫","_id":"cjwj070e5001pm8zaroyk8n3l"},{"name":"Github Pages","_id":"cjwj070ea001wm8zaqipi6c9l"},{"name":"Hive","_id":"cjwj070ee0023m8zajc9k6acm"},{"name":"大数据","_id":"cjwj070ei002bm8za034obx7d"},{"name":"词云","_id":"cjwj070em002im8za10x8isp9"},{"name":"Hbase","_id":"cjwj070ew002zm8za3gfou9w7"},{"name":"X 战警","_id":"cjwj070ff003tm8za40nfw5ay"},{"name":"marvel","_id":"cjwj070fm0040m8za3y59nn6w"},{"name":"电影","_id":"cjwj070fq0046m8za10321p30"},{"name":"pyinstaller","_id":"cjwj070fu004dm8zas9zblzua"},{"name":"计算机网络","_id":"cjwj070fx004mm8zatmsja0d0"},{"name":"年记","_id":"cjwj070fz004sm8zaytmdyqhx"},{"name":"Scala","_id":"cjwj070g0004ym8zaqviyaayt"},{"name":"Spark","_id":"cjwj070g20054m8zal05xl617"},{"name":"缓存","_id":"cjwj070g4005dm8zasc6dynjm"},{"name":"睡前小故事","_id":"cjwj070g5005gm8zachml95cz"},{"name":"ssr","_id":"cjwj070g9005pm8zag2mrap92"},{"name":"问题","_id":"cjwj070g9005rm8za8r9yhwuu"},{"name":"Loline","_id":"cjwj070ga005um8za0p813hir"},{"name":"Flask","_id":"cjwj070gb005xm8zaykh539s3"},{"name":"json","_id":"cjwj070gb005ym8zalc06l33u"},{"name":"英雄联盟","_id":"cjwj070gc005zm8zaxvjb14jp"},{"name":"前端","_id":"cjwj070gc0060m8zah915x1i2"},{"name":"Electron-Vue","_id":"cjwj070gd0063m8zahh6r8hr5"},{"name":"教程","_id":"cjwj070gg006fm8zae04vg26d"},{"name":"echarts","_id":"cjwj070gi006km8zavwj4qks7"},{"name":"Latex","_id":"cjwj070gj006mm8zaemxqvz54"},{"name":"TensorFlow","_id":"cjwj070gj006pm8za335e49p2"},{"name":"Keras","_id":"cjwj070gk006sm8za6o7st6cb"},{"name":"深度学习","_id":"cjwj070gk006tm8zar4fryxmo"},{"name":"LaTex","_id":"cjwj070gk006um8za93k1si8f"},{"name":"字体","_id":"cjwj070gl006xm8zao552ayar"},{"name":"C/C++","_id":"cjwj070gm006zm8zac54rjm94"},{"name":"CUDA","_id":"cjwj070gm0072m8zalcgv930g"},{"name":"GitHub Pages","_id":"cjwj070gn0074m8zamjs5ga2h"},{"name":"软件","_id":"cjwj070go0075m8za137fzblx"}]}}